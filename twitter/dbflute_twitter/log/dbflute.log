2014-06-24 22:09:38,834 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-24 22:09:38,849 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-24 22:09:39,138 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-24 22:09:39,139 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-24 22:09:39,159 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():207) - 
2014-06-24 22:09:39,160 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():208) - * * * * * * * * * * *
2014-06-24 22:09:39,161 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():209) - *                   *
2014-06-24 22:09:39,163 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():210) - * Initialize Schema *
2014-06-24 22:09:39,165 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():211) - *                   *
2014-06-24 22:09:39,166 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():212) - * * * * * * * * * * *
2014-06-24 22:09:39,185 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-24 22:09:39,186 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-24 22:09:39,187 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-24 22:09:39,253 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table login
2014-06-24 22:09:39,302 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_security
2014-06-24 22:09:39,345 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_withdraw
2014-06-24 22:09:39,387 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table tweet
2014-06-24 22:09:39,425 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table login drop foreign key login_ibfk_1
2014-06-24 22:09:39,439 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_security drop foreign key member_security_ibfk_1
2014-06-24 22:09:39,460 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_withdraw drop foreign key member_withdraw_ibfk_1
2014-06-24 22:09:39,470 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table tweet drop foreign key tweet_ibfk_1
2014-06-24 22:09:39,480 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table login
2014-06-24 22:09:39,494 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member
2014-06-24 22:09:39,520 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_security
2014-06-24 22:09:39,546 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_withdraw
2014-06-24 22:09:39,570 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table tweet
2014-06-24 22:09:39,653 [main] INFO  (DfCreateSchemaProcess#createSchema():244) - 
2014-06-24 22:09:39,653 [main] INFO  (DfCreateSchemaProcess#createSchema():245) - * * * * * * * * *
2014-06-24 22:09:39,654 [main] INFO  (DfCreateSchemaProcess#createSchema():246) - *               *
2014-06-24 22:09:39,655 [main] INFO  (DfCreateSchemaProcess#createSchema():247) - * Create Schema *
2014-06-24 22:09:39,657 [main] INFO  (DfCreateSchemaProcess#createSchema():248) - *               *
2014-06-24 22:09:39,658 [main] INFO  (DfCreateSchemaProcess#createSchema():249) - * * * * * * * * *
2014-06-24 22:09:39,664 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-00-system.sql
2014-06-24 22:09:39,667 [main] INFO  (DfReplaceSchemaProperties#checkTargetEnvType():277) - ...Checking envType: ut in [ut]
2014-06-24 22:09:39,668 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:checkEnv(ut)#

-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database twitter
2014-06-24 22:09:39,676 [main] INFO  (DfCreateSchemaProcess$1#dispatch():273) - ...Creating a connection to system
2014-06-24 22:09:39,679 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():514) - ...Creating a connection for additional user: root
2014-06-24 22:09:39,691 [main] INFO  (DfCreateSchemaProcess$1#dispatch():299) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2014-06-24 22:09:39,692 [main] INFO  (DfCreateSchemaProcess$1#dispatch():301) -  -> Can't create database 'twitter'; database exists
2014-06-24 22:09:39,695 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():411) - ...Reviving the user 'system' until the end of this SQL file
2014-06-24 22:09:39,695 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on twitter.*
  to twitter@localhost identified by 'twitter'
2014-06-24 22:09:39,702 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2014-06-24 22:09:39,705 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2014-06-24 22:09:39,706 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-10-basic.sql
2014-06-24 22:09:39,706 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():348) - ...Saying good-bye to the user 'system' again
2014-06-24 22:09:39,708 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():352) - ...Clearing revived users
2014-06-24 22:09:39,709 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():359) - ...Coming back to the main user from the user 'system'
2014-06-24 22:09:39,712 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE LOGIN
(
	LOGIN_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ログインID : ログインした瞬間のID
',
	LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	PRIMARY KEY (LOGIN_ID)
) COMMENT = 'ログイン'
2014-06-24 22:09:39,772 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER
(
	MEMBER_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員のID
',
	EMAIL_ADDRESS VARCHAR(100) NOT NULL UNIQUE COMMENT 'メールアドレス : 会員のメールアドレス',
	USER_NAME VARCHAR(50) NOT NULL COMMENT '会員ユーザ名 : 会員のユーザ名',
	UPDATE_DATETIME DATETIME COMMENT '更新日時',
	BIRTHDATE DATE COMMENT '生年月日 : 会員の生年月日',
	PROFILE VARCHAR(200) COMMENT 'プロフィール',
	NAME VARCHAR(50) NOT NULL COMMENT '名前',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員'
2014-06-24 22:09:39,845 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PASSWORD VARCHAR(50) NOT NULL COMMENT 'パスワード',
	PASSWORD_REGESTERATION_DATETIME DATETIME NOT NULL COMMENT 'パスワード登録日時',
	PASSWORD_UPDATE_DATETIME DATETIME COMMENT 'パスワード更新日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員セキュリティ'
2014-06-24 22:09:39,897 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_WITHDRAW
(
	WITHDRAWAL_REASON_ID INT COMMENT '退会理由ID : 会員の退会理由ID',
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト',
	WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT 'withdrawal_datetime : 退会日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員退会'
2014-06-24 22:09:39,945 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	TWEET_DATETIME DATETIME NOT NULL COMMENT 'TWEET日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-06-24 22:09:39,996 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-24 22:09:40,064 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-24 22:09:40,168 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_WITHDRAW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-24 22:09:40,261 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-24 22:09:40,355 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=9 failure=0
2014-06-24 22:09:40,357 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=11 failure=0 (in 2 files)
2014-06-24 22:09:40,359 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-06-24 22:09:40,419 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-06-24 22:09:40,420 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-06-24 22:09:40,420 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-06-24 22:09:40,422 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-06-24 22:09:40,423 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-06-24 22:09:40,425 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-06-24 22:09:40,450 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-06-24 22:09:40,451 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-06-24 22:09:40,452 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-06-24 22:09:40,799 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-24 22:09:40,800 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-24 22:09:40,800 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-24 22:09:40,861 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{1, Stojkovic@gmail.com, Pixy, Example, 1965/03/03, 2014-06-24 22:09:40.86}
2014-06-24 22:09:40,913 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{2, Savicevic@gmail.com, Genius, Tom, 1966/09/15, 2014-06-24 22:09:40.913}
2014-06-24 22:09:40,914 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{3, Mijatovic@gmail.com, Mijato, Raven, null, 2014-06-24 22:09:40.914}
2014-06-24 22:09:40,916 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{4, Stankovic@gmail.com, Stanko, Example, 1978/09/11, 2014-06-24 22:09:40.916}
2014-06-24 22:09:40,918 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{5, Milosevic@gmail.com, Milose, Example, null, 2014-06-24 22:09:40.918}
2014-06-24 22:09:40,919 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{6, Mihajlovic@gmail.com, FreeKick, Example, 1969/02/20, 2014-06-24 22:09:40.919}
2014-06-24 22:09:40,920 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{7, アカギ@gmail.com, Akagi, Example, null, 2014-06-24 22:09:40.92}
2014-06-24 22:09:40,922 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{8, Kezman@gmial.com, RedCard, Example, null, 2014-06-24 22:09:40.922}
2014-06-24 22:09:40,923 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{9, Maslovar@gmail.com, JEFUnited, Example, 1967/02/20, 2014-06-24 22:09:40.923}
2014-06-24 22:09:40,925 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{10, 諸葛亮孔明@gmail.com, ShokatsuGoGo, Example, null, 2014-06-24 22:09:40.925}
2014-06-24 22:09:40,927 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{11, Boban@gmail.com, Boban, Example, 1968/10/08, 2014-06-24 22:09:40.927}
2014-06-24 22:09:40,928 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{12, Suker@gmail.com, Suker, Example, 1968/01/01, 2014-06-24 22:09:40.928}
2014-06-24 22:09:40,930 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{13, Jarni@gmail.com, Jarni, Example, 1968/10/26, 2014-06-24 22:09:40.93}
2014-06-24 22:09:40,932 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{14, Boksic@gmail.com, Boksic, Example, 1970/01/21, 2014-06-24 22:09:40.932}
2014-06-24 22:09:40,933 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{15, Prosinecki@gmail.com, Prosinecki, Example, 1969/01/12, 2014-06-24 22:09:40.933}
2014-06-24 22:09:40,934 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{16, RobeltKovac@gmail.com, RobeltKovac, Example, null, 2014-06-24 22:09:40.934}
2014-06-24 22:09:40,935 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{17, NikoKovac@gmail.com, NikoKovac, Example, null, 2014-06-24 22:09:40.935}
2014-06-24 22:09:40,936 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{18, Jovanovic@gmail.com, Jovano, Example, 1981/04/18, 2014-06-24 22:09:40.936}
2014-06-24 22:09:40,939 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{19, Milko@gmail.com, Milko, Example, 1974/09/10, 2014-06-24 22:09:40.939}
2014-06-24 22:09:40,940 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{20, 諸葛瑾子瑜@gmail.com, ShokatsuKinKin, Example, null, 2014-06-24 22:09:40.94}
2014-06-24 22:09:40,957 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 20 rows are loaded to MEMBER
2014-06-24 22:09:40,959 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 3, 2006/12/24 23:59:59}
2014-06-24 22:09:40,960 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 6, 2007/11/11 16:16:16}
2014-06-24 22:09:40,962 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{3, 1, 2006/12/23 22:56:29}
2014-06-24 22:09:40,963 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{4, 6, 2007/11/01 02:13:00}
2014-06-24 22:09:40,965 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{5, 7, 2006/05/24 23:12:59}
2014-06-24 22:09:40,966 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{6, 6, 2005/11/11 16:32:01}
2014-06-24 22:09:40,967 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{7, 6, 2006/01/28 23:59:59}
2014-06-24 22:09:40,969 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{8, 6, 2007/11/09 16:23:00}
2014-06-24 22:09:40,970 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{9, 8, 2006/12/22 23:59:59}
2014-06-24 22:09:40,971 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{10, 6, 2007/11/11 09:01:00}
2014-06-24 22:09:40,972 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{11, 1, 2006/12/23 23:59:59}
2014-06-24 22:09:40,974 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{12, 9, 2007/11/15 12:43:00}
2014-06-24 22:09:40,975 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{13, 10, 2006/12/24 23:59:59}
2014-06-24 22:09:40,976 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{14, 6, 2007/04/01 16:23:01}
2014-06-24 22:09:40,978 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{15, 7, 2006/12/24 23:59:20}
2014-06-24 22:09:40,979 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{16, 6, 2007/05/01 12:23:02}
2014-06-24 22:09:40,981 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{17, 7, 2006/12/24 23:59:21}
2014-06-24 22:09:40,982 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{18, 6, 2007/06/11 17:23:03}
2014-06-24 22:09:40,983 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{19, 4, 2006/12/24 23:59:22}
2014-06-24 22:09:40,985 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{20, 3, 2007/11/01 16:12:04}
2014-06-24 22:09:40,986 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{21, 11, 2006/12/24 23:59:23}
2014-06-24 22:09:40,987 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{22, 1, 2007/11/01 16:23:05}
2014-06-24 22:09:40,989 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{23, 9, 2006/12/24 23:59:24}
2014-06-24 22:09:40,990 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{24, 8, 2007/11/01 16:23:06}
2014-06-24 22:09:40,991 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{25, 7, 2007/12/24 11:59:25}
2014-06-24 22:09:40,993 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{26, 6, 2007/06/21 01:23:57}
2014-06-24 22:09:40,994 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{27, 5, 2006/12/24 23:59:26}
2014-06-24 22:09:40,996 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{28, 3, 2007/11/01 16:23:08}
2014-06-24 22:09:40,997 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{29, 3, 2006/12/24 23:59:27}
2014-06-24 22:09:40,998 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{30, 10, 2007/11/01 16:23:09}
2014-06-24 22:09:41,000 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-24 22:09:41,013 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 30 rows are loaded to LOGIN
2014-06-24 22:09:41,014 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014/06/23, null}
2014-06-24 22:09:41,016 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014/06/24, null}
2014-06-24 22:09:41,017 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{3, ccc, 2014/06/25, 2014/06/25}
2014-06-24 22:09:41,018 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{4, ddd, 2014/06/26, null}
2014-06-24 22:09:41,019 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{5, eee2, 2014/06/27, null}
2014-06-24 22:09:41,020 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{6, fff, 2014/06/28, null}
2014-06-24 22:09:41,022 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{7, ggg3, 2014/06/29, 2014/06/25}
2014-06-24 22:09:41,023 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{8, hhh555, 2014/06/30, null}
2014-06-24 22:09:41,024 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{9, iii, 2014/07/01, 2014/06/25}
2014-06-24 22:09:41,026 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{10, jjj, 2014/07/02, null}
2014-06-24 22:09:41,027 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-24 22:09:41,038 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to MEMBER_SECURITY
2014-06-24 22:09:41,039 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 2013-06-13 00:00:00.0}
2014-06-24 22:09:41,041 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{2, 2345, 清君頼りになるー！, 2013-06-14 00:00:00.0}
2014-06-24 22:09:41,043 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{3, 3456, GLD, 2013-06-15 00:00:00.0}
2014-06-24 22:09:41,044 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{4, 875, BRZ, 2013-06-16 00:00:00.0}
2014-06-24 22:09:41,045 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{5, 1111, BRZ, 2013-06-17 00:00:00.0}
2014-06-24 22:09:41,047 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{6, 5422, SIL, 2013-06-18 00:00:00.0}
2014-06-24 22:09:41,049 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{7, 24678, SIL, 2013-06-19 00:00:00.0}
2014-06-24 22:09:41,050 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{8, 234, SIL, 2013-06-20 00:00:00.0}
2014-06-24 22:09:41,051 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{9, 3, SIL, 2013-06-21 00:00:00.0}
2014-06-24 22:09:41,052 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{10, 98765, PLT, 2013-06-22 00:00:00.0}
2014-06-24 22:09:41,054 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-24 22:09:41,062 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to TWEET
2014-06-24 22:09:41,063 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{3, 1, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123}
2014-06-24 22:09:41,066 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{6, 1, null, 2007/11/11 16:00:00.456}
2014-06-24 22:09:41,067 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{13, 2, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789}
2014-06-24 22:09:41,070 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{16, 3, コバチが２人いるため, 2007/11/13 16:00:00.456}
2014-06-24 22:09:41,080 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 4 rows are loaded to MEMBER_WITHDRAW
2014-06-24 22:09:41,084 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():379) - ...Checking implicit set of classification
2014-06-24 22:09:41,098 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - 
2014-06-24 22:09:41,099 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * * * * * * * **
2014-06-24 22:09:41,100 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2014-06-24 22:09:41,101 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * Take Finally *
2014-06-24 22:09:41,102 [main] INFO  (DfTakeFinallyProcess#takeFinally():225) - *              *
2014-06-24 22:09:41,104 [main] INFO  (DfTakeFinallyProcess#takeFinally():226) - * * * * * * * **
2014-06-24 22:09:41,134 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: take-finally.sql
2014-06-24 22:09:41,152 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2014-06-24 22:09:41,153 [main] INFO  (DfSqlFileFireMan#fire():90) - {Take Finally}: success=0 failure=0 (in 1 files)
2014-06-24 22:09:41,170 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-24 22:09:41,175 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m04s005ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=11 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=1
  (ut)
  o 20-member.xls

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-06-24 22:09:42,165 [main] INFO  (TorqueJDBCTransformTask#begin():100) - +------------------------------------------+
2014-06-24 22:09:42,168 [main] INFO  (TorqueJDBCTransformTask#begin():101) - |                                          |
2014-06-24 22:09:42,169 [main] INFO  (TorqueJDBCTransformTask#begin():102) - |                   JDBC                   |
2014-06-24 22:09:42,169 [main] INFO  (TorqueJDBCTransformTask#begin():103) - |                                          |
2014-06-24 22:09:42,171 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2014-06-24 22:09:42,213 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-24 22:09:42,214 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-24 22:09:42,215 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-24 22:09:42,216 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-24 22:09:42,262 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2014-06-24 22:09:42,263 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2014-06-24 22:09:42,263 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1469) - ...Loading previous schema (schema diff process)
2014-06-24 22:09:42,275 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-24 22:09:42,335 [main] INFO  (DfSchemaXmlSerializer#generateXML():361) - ...Getting DB connection
2014-06-24 22:09:42,350 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-24 22:09:42,563 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-24 22:09:42,563 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-24 22:09:42,566 [main] INFO  (DfSchemaXmlSerializer#generateXML():364) - ...Getting DB meta data
2014-06-24 22:09:42,569 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-24 22:09:42,570 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-24 22:09:42,570 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-24 22:09:42,584 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2014-06-24 22:09:42,587 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2014-06-24 22:09:42,601 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - 
2014-06-24 22:09:42,602 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2014-06-24 22:09:42,602 [main] INFO  (DfSchemaXmlSerializer#processTable():423) - $ [Table List]
2014-06-24 22:09:42,604 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.login(TABLE) // ログイン
2014-06-24 22:09:42,642 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member(TABLE) // 会員
2014-06-24 22:09:42,657 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_security(TABLE) // 会員セキュリティ
2014-06-24 22:09:42,672 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_withdraw(TABLE) // 会員退会
2014-06-24 22:09:42,686 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.tweet(TABLE) // TWEET
2014-06-24 22:09:42,700 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 
2014-06-24 22:09:42,701 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ [Table Count]
2014-06-24 22:09:42,702 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ 5
2014-06-24 22:09:42,704 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - $ = = = = = = = = = =/
2014-06-24 22:09:42,705 [main] INFO  (DfSchemaXmlSerializer#processTable():439) - 
2014-06-24 22:09:42,709 [main] INFO  (DfSchemaXmlSerializer#processSequence():799) - ...Getting sequences
2014-06-24 22:09:42,713 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2014-06-24 22:09:42,714 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-twitter.xml
2014-06-24 22:09:42,715 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2014-06-24 22:09:42,731 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1487) - ...Loading next schema (schema diff process)
2014-06-24 22:09:42,734 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-24 22:09:42,776 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1492) -  -> different from previous (schema diff)
2014-06-24 22:09:42,778 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1494) - ...Serializing schema-diff:
2014-06-24 22:09:42,778 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1495) -   filePath = ./schema/project-history-twitter.diffmap
2014-06-24 22:09:42,794 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-24 22:09:42,800 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s631ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2014-06-24 22:09:43,864 [main] INFO  (TorqueDocumentationTask#begin():171) - +------------------------------------------+
2014-06-24 22:09:43,866 [main] INFO  (TorqueDocumentationTask#begin():172) - |                                          |
2014-06-24 22:09:43,867 [main] INFO  (TorqueDocumentationTask#begin():173) - |                   Doc                    |
2014-06-24 22:09:43,867 [main] INFO  (TorqueDocumentationTask#begin():181) - |                                          |
2014-06-24 22:09:43,869 [main] INFO  (TorqueDocumentationTask#begin():182) - +------------------------------------------+
2014-06-24 22:09:43,912 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-24 22:09:43,912 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-24 22:09:43,913 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-24 22:09:43,914 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-24 22:09:43,918 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():242) - 
2014-06-24 22:09:43,919 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():243) - * * * * * * * * * * *
2014-06-24 22:09:43,919 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():244) - *                   *
2014-06-24 22:09:43,921 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():245) - *    Schema HTML    *
2014-06-24 22:09:43,922 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - *                   *
2014-06-24 22:09:43,923 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2014-06-24 22:09:44,104 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-24 22:09:44,169 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("doc/ControlDocument.vm", c);
2014-06-24 22:09:44,250 [main] INFO  (Database#doEnableDocumentOutputDirectory():1180) - ...Setting up documentOutputDirectory: ./output/doc
2014-06-24 22:09:44,259 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-24 22:09:44,259 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-24 22:09:44,262 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-24 22:09:44,264 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-24 22:09:44,265 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-24 22:09:44,268 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-24 22:09:44,270 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-24 22:09:44,270 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-24 22:09:44,274 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-24 22:09:44,283 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():150) - ...Loading schema history
2014-06-24 22:09:44,316 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():154) -  -> found history: count=4
2014-06-24 22:09:44,508 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-24 22:09:44,522 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s656ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Doc}
2014-06-24 22:09:47,697 [main] INFO  (TorqueDataModelTask#begin():105) - +------------------------------------------+
2014-06-24 22:09:47,700 [main] INFO  (TorqueDataModelTask#begin():106) - |                                          |
2014-06-24 22:09:47,700 [main] INFO  (TorqueDataModelTask#begin():107) - |                 Generate                 |
2014-06-24 22:09:47,701 [main] INFO  (TorqueDataModelTask#begin():108) - |                                          |
2014-06-24 22:09:47,702 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2014-06-24 22:09:47,750 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-24 22:09:47,750 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-24 22:09:47,751 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-24 22:09:47,753 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-24 22:09:47,775 [main] INFO  (TorqueDataModelTask#setupControlTemplate():160) - 
2014-06-24 22:09:47,776 [main] INFO  (TorqueDataModelTask#setupControlTemplate():161) - ...Using Java control: om/ControlGenerateJava.vm
2014-06-24 22:09:47,925 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-24 22:09:47,962 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlGenerateJava.vm", c);
2014-06-24 22:09:48,083 [main] INFO  (Database#doEnableGenerateOutputDirectory():1148) - ...Setting up generateOutputDirectory: ../src/main/java
2014-06-24 22:09:48,090 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-24 22:09:48,091 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-24 22:09:48,095 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-24 22:09:48,097 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-24 22:09:48,098 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-24 22:09:48,101 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-24 22:09:48,104 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-24 22:09:48,104 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-24 22:09:48,108 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-24 22:09:48,127 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - /=============================
2014-06-24 22:09:48,127 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():60) - ...Initializing include query.
2014-06-24 22:09:48,128 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - String
2014-06-24 22:09:48,129 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Number
2014-06-24 22:09:48,131 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Date
2014-06-24 22:09:48,132 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotEqual -> []
2014-06-24 22:09:48,133 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   InScope -> []
2014-06-24 22:09:48,135 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotInScope -> []
2014-06-24 22:09:48,136 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - OrderBy
2014-06-24 22:09:48,137 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():62) - ========/
2014-06-24 22:09:48,155 [main] INFO  (Database#info():2577) - public void parseAllCommon() {
2014-06-24 22:09:48,158 [main] INFO  (Database#info():2577) -     parse('DBCurrent');
2014-06-24 22:09:48,168 [main] INFO  (Database#info():2577) -     parse('DBFluteConfig');
2014-06-24 22:09:48,202 [main] INFO  (Database#info():2577) -     parse('DBFluteInitializer');
2014-06-24 22:09:48,209 [main] INFO  (Database#info():2577) -     parse('DBMetaInstanceHandler');
2014-06-24 22:09:48,231 [main] INFO  (Database#info():2577) -     parse('EntityDefinedCommonColumn');
2014-06-24 22:09:48,237 [main] INFO  (Database#info():2577) -     parse('ImplementedBehaviorSelector');
2014-06-24 22:09:48,242 [main] INFO  (Database#info():2577) -     parse('ImplementedCommonColumnAutoSetupper');
2014-06-24 22:09:48,249 [main] INFO  (Database#info():2577) -     parse('ImplementedInvokerAssistant');
2014-06-24 22:09:48,254 [main] INFO  (Database#info():2577) -     parse('ImplementedSqlClauseCreator');
2014-06-24 22:09:48,258 [main] INFO  (Database#info():2577) - }
2014-06-24 22:09:48,259 [main] INFO  (Database#info():2577) - public void parseContainerConfig() {
2014-06-24 22:09:48,261 [main] INFO  (Database#info():2577) -     parse('../resources/dbflute.dicon')
2014-06-24 22:09:48,269 [main] INFO  (Database#info():2577) - }
2014-06-24 22:09:48,274 [main] INFO  (DfOldClassHandler#info():886) - public void deleteOldTableClass() {
2014-06-24 22:09:48,293 [main] INFO  (DfOldClassHandler#info():886) - }
2014-06-24 22:09:48,294 [main] INFO  (Database#info():2577) - public void parseTableClass() {
2014-06-24 22:09:48,296 [main] INFO  (Database#info():2577) -     parse('login');
2014-06-24 22:09:48,565 [main] INFO  (Database#info():2577) -     parse('member');
2014-06-24 22:09:48,857 [main] INFO  (Database#info():2577) -     parse('member_security');
2014-06-24 22:09:49,040 [main] INFO  (Database#info():2577) -     parse('member_withdraw');
2014-06-24 22:09:49,194 [main] INFO  (Database#info():2577) -     parse('tweet');
2014-06-24 22:09:49,345 [main] INFO  (Database#info():2577) - }
2014-06-24 22:09:49,346 [main] INFO  (Database#info():2577) -  
2014-06-24 22:09:49,383 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-24 22:09:49,391 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s689ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Generate}
2014-06-24 22:09:50,457 [main] INFO  (DfOutsideSqlTestTask#begin():72) - +------------------------------------------+
2014-06-24 22:09:50,461 [main] INFO  (DfOutsideSqlTestTask#begin():73) - |                                          |
2014-06-24 22:09:50,461 [main] INFO  (DfOutsideSqlTestTask#begin():74) - |              OutsideSqlTest              |
2014-06-24 22:09:50,462 [main] INFO  (DfOutsideSqlTestTask#begin():75) - |                                          |
2014-06-24 22:09:50,464 [main] INFO  (DfOutsideSqlTestTask#begin():76) - +------------------------------------------+
2014-06-24 22:09:50,514 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-24 22:09:50,514 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-24 22:09:50,515 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-24 22:09:50,516 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-24 22:09:50,560 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-24 22:09:50,565 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s103ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2014-06-24 22:09:51,520 [main] INFO  (DfSql2EntityTask#begin():100) - +------------------------------------------+
2014-06-24 22:09:51,523 [main] INFO  (DfSql2EntityTask#begin():101) - |                                          |
2014-06-24 22:09:51,524 [main] INFO  (DfSql2EntityTask#begin():102) - |                Sql2Entity                |
2014-06-24 22:09:51,524 [main] INFO  (DfSql2EntityTask#begin():103) - |                                          |
2014-06-24 22:09:51,526 [main] INFO  (DfSql2EntityTask#begin():104) - +------------------------------------------+
2014-06-24 22:09:51,567 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-24 22:09:51,568 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-24 22:09:51,568 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-24 22:09:51,570 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-24 22:09:51,587 [main] INFO  (DfSql2EntityTask#setupControlTemplate():170) - 
2014-06-24 22:09:51,588 [main] INFO  (DfSql2EntityTask#setupControlTemplate():171) - ...Using Java control: om/ControlSql2EntityJava.vm
2014-06-24 22:09:51,596 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-24 22:09:51,646 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-24 22:09:51,791 [main] INFO  (DfSql2EntityTask#initControlContext():301) - 
2014-06-24 22:09:51,792 [main] INFO  (DfSql2EntityTask#initControlContext():302) - ...Preparing generation of customize-entities and parameter-beans
2014-06-24 22:09:51,792 [main] INFO  (DfSql2EntityTask#initControlContext():303) - * * * * * * * * * *
2014-06-24 22:09:51,794 [main] INFO  (DfSql2EntityTask#initControlContext():304) - * CustomizeEntity *
2014-06-24 22:09:51,795 [main] INFO  (DfSql2EntityTask#initControlContext():305) - * * * * * * * * * *
2014-06-24 22:09:51,797 [main] INFO  (DfSql2EntityTask#showParameterBean():871) - * * * * * * * * *
2014-06-24 22:09:51,798 [main] INFO  (DfSql2EntityTask#showParameterBean():872) - * ParameterBean *
2014-06-24 22:09:51,799 [main] INFO  (DfSql2EntityTask#showParameterBean():873) - * * * * * * * * *
2014-06-24 22:09:51,805 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlSql2EntityJava.vm", c);
2014-06-24 22:09:51,911 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1164) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2014-06-24 22:09:51,914 [main] INFO  (DfOldClassHandler#info():886) - public void deleteOldCustomizeClass() {
2014-06-24 22:09:51,924 [main] INFO  (DfOldClassHandler#info():886) - }
2014-06-24 22:09:51,925 [main] INFO  (Database#info():2577) - public void parseCustomizeEntity() {
2014-06-24 22:09:51,928 [main] INFO  (Database#info():2577) - }
2014-06-24 22:09:51,941 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():293) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2014-06-24 22:09:51,950 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-24 22:09:51,956 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s433ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2014-06-25 09:38:10,615 [main] INFO  (DfReplaceSchemaTask#begin():87) - +------------------------------------------+
2014-06-25 09:38:10,618 [main] INFO  (DfReplaceSchemaTask#begin():88) - |                                          |
2014-06-25 09:38:10,619 [main] INFO  (DfReplaceSchemaTask#begin():89) - |              ReplaceSchema               |
2014-06-25 09:38:10,644 [main] INFO  (DfReplaceSchemaTask#begin():97) - |                                          |
2014-06-25 09:38:10,645 [main] INFO  (DfReplaceSchemaTask#begin():98) - +------------------------------------------+
2014-06-25 09:38:10,647 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():329) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2014-06-25 09:38:12,009 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-25 09:38:12,010 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-25 09:38:12,011 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-25 09:38:12,012 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-25 09:38:12,025 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-25 09:38:12,255 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-25 09:38:12,256 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-25 09:38:12,277 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():207) - 
2014-06-25 09:38:12,278 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():208) - * * * * * * * * * * *
2014-06-25 09:38:12,279 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():209) - *                   *
2014-06-25 09:38:12,280 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():210) - * Initialize Schema *
2014-06-25 09:38:12,282 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():211) - *                   *
2014-06-25 09:38:12,283 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():212) - * * * * * * * * * * *
2014-06-25 09:38:12,304 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-25 09:38:12,305 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-25 09:38:12,306 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-25 09:38:12,363 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table login
2014-06-25 09:38:12,404 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_security
2014-06-25 09:38:12,460 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_withdraw
2014-06-25 09:38:12,520 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table tweet
2014-06-25 09:38:12,553 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table login drop foreign key login_ibfk_1
2014-06-25 09:38:12,579 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_security drop foreign key member_security_ibfk_1
2014-06-25 09:38:12,599 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_withdraw drop foreign key member_withdraw_ibfk_1
2014-06-25 09:38:12,626 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table tweet drop foreign key tweet_ibfk_1
2014-06-25 09:38:12,646 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table login
2014-06-25 09:38:12,672 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member
2014-06-25 09:38:12,700 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_security
2014-06-25 09:38:12,721 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_withdraw
2014-06-25 09:38:12,742 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table tweet
2014-06-25 09:38:12,835 [main] INFO  (DfCreateSchemaProcess#createSchema():244) - 
2014-06-25 09:38:12,836 [main] INFO  (DfCreateSchemaProcess#createSchema():245) - * * * * * * * * *
2014-06-25 09:38:12,837 [main] INFO  (DfCreateSchemaProcess#createSchema():246) - *               *
2014-06-25 09:38:12,838 [main] INFO  (DfCreateSchemaProcess#createSchema():247) - * Create Schema *
2014-06-25 09:38:12,840 [main] INFO  (DfCreateSchemaProcess#createSchema():248) - *               *
2014-06-25 09:38:12,841 [main] INFO  (DfCreateSchemaProcess#createSchema():249) - * * * * * * * * *
2014-06-25 09:38:12,847 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-00-system.sql
2014-06-25 09:38:12,850 [main] INFO  (DfReplaceSchemaProperties#checkTargetEnvType():277) - ...Checking envType: ut in [ut]
2014-06-25 09:38:12,852 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:checkEnv(ut)#

-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database twitter
2014-06-25 09:38:12,860 [main] INFO  (DfCreateSchemaProcess$1#dispatch():273) - ...Creating a connection to system
2014-06-25 09:38:12,862 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():514) - ...Creating a connection for additional user: root
2014-06-25 09:38:12,875 [main] INFO  (DfCreateSchemaProcess$1#dispatch():299) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2014-06-25 09:38:12,876 [main] INFO  (DfCreateSchemaProcess$1#dispatch():301) -  -> Can't create database 'twitter'; database exists
2014-06-25 09:38:12,879 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():411) - ...Reviving the user 'system' until the end of this SQL file
2014-06-25 09:38:12,880 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on twitter.*
  to twitter@localhost identified by 'twitter'
2014-06-25 09:38:12,887 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2014-06-25 09:38:12,890 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2014-06-25 09:38:12,891 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-10-basic.sql
2014-06-25 09:38:12,892 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():348) - ...Saying good-bye to the user 'system' again
2014-06-25 09:38:12,893 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():352) - ...Clearing revived users
2014-06-25 09:38:12,895 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():359) - ...Coming back to the main user from the user 'system'
2014-06-25 09:38:12,897 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE LOGIN
(
	LOGIN_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ログインID : ログインした瞬間のID
',
	LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	PRIMARY KEY (LOGIN_ID)
) COMMENT = 'ログイン'
2014-06-25 09:38:12,938 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER
(
	MEMBER_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員のID
',
	EMAIL_ADDRESS VARCHAR(100) NOT NULL UNIQUE COMMENT 'メールアドレス : 会員のメールアドレス',
	USER_NAME VARCHAR(50) NOT NULL UNIQUE COMMENT '会員ユーザ名 : 会員のユーザ名',
	UPDATE_DATETIME DATETIME COMMENT '更新日時',
	BIRTHDATE DATE COMMENT '生年月日 : 会員の生年月日',
	PROFILE VARCHAR(200) COMMENT 'プロフィール',
	NAME VARCHAR(50) NOT NULL COMMENT '名前',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員'
2014-06-25 09:38:13,003 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PASSWORD VARCHAR(50) NOT NULL COMMENT 'パスワード',
	PASSWORD_REGESTERATION_DATETIME DATETIME NOT NULL COMMENT 'パスワード登録日時',
	PASSWORD_UPDATE_DATETIME DATETIME COMMENT 'パスワード更新日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員セキュリティ'
2014-06-25 09:38:13,073 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_WITHDRAW
(
	WITHDRAWAL_REASON_ID INT COMMENT '退会理由ID : 会員の退会理由ID',
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト',
	WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT 'withdrawal_datetime : 退会日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員退会'
2014-06-25 09:38:13,136 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	TWEET_DATETIME DATETIME NOT NULL COMMENT 'TWEET日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-06-25 09:38:13,194 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-25 09:38:13,282 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-25 09:38:13,348 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_WITHDRAW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-25 09:38:13,429 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-25 09:38:13,523 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=9 failure=0
2014-06-25 09:38:13,524 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=11 failure=0 (in 2 files)
2014-06-25 09:38:13,525 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-06-25 09:38:13,570 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-06-25 09:38:13,571 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-06-25 09:38:13,571 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-06-25 09:38:13,573 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-06-25 09:38:13,575 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-06-25 09:38:13,576 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-06-25 09:38:13,604 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-06-25 09:38:13,605 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-06-25 09:38:13,606 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-06-25 09:38:13,972 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-25 09:38:13,973 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-25 09:38:13,973 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-25 09:38:14,032 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{1, Stojkovic@gmail.com, Pixy, Example, 1965/03/03, 2014-06-25 09:38:14.031}
2014-06-25 09:38:14,093 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{2, Savicevic@gmail.com, Genius, Tom, 1966/09/15, 2014-06-25 09:38:14.093}
2014-06-25 09:38:14,094 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{3, Mijatovic@gmail.com, Mijato, Raven, null, 2014-06-25 09:38:14.094}
2014-06-25 09:38:14,095 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{4, Stankovic@gmail.com, Stanko, Example, 1978/09/11, 2014-06-25 09:38:14.095}
2014-06-25 09:38:14,097 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{5, Milosevic@gmail.com, Milose, Example, null, 2014-06-25 09:38:14.097}
2014-06-25 09:38:14,098 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{6, Mihajlovic@gmail.com, FreeKick, Example, 1969/02/20, 2014-06-25 09:38:14.098}
2014-06-25 09:38:14,100 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{7, アカギ@gmail.com, Akagi, Example, null, 2014-06-25 09:38:14.1}
2014-06-25 09:38:14,102 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{8, Kezman@gmial.com, RedCard, Example, null, 2014-06-25 09:38:14.102}
2014-06-25 09:38:14,103 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{9, Maslovar@gmail.com, JEFUnited, Example, 1967/02/20, 2014-06-25 09:38:14.102}
2014-06-25 09:38:14,104 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{10, 諸葛亮孔明@gmail.com, ShokatsuGoGo, Example, null, 2014-06-25 09:38:14.104}
2014-06-25 09:38:14,107 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{11, Boban@gmail.com, Boban, Example, 1968/10/08, 2014-06-25 09:38:14.107}
2014-06-25 09:38:14,108 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{12, Suker@gmail.com, Suker, Example, 1968/01/01, 2014-06-25 09:38:14.108}
2014-06-25 09:38:14,109 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{13, Jarni@gmail.com, Jarni, Example, 1968/10/26, 2014-06-25 09:38:14.109}
2014-06-25 09:38:14,110 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{14, Boksic@gmail.com, Boksic, Example, 1970/01/21, 2014-06-25 09:38:14.11}
2014-06-25 09:38:14,112 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{15, Prosinecki@gmail.com, Prosinecki, Example, 1969/01/12, 2014-06-25 09:38:14.112}
2014-06-25 09:38:14,113 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{16, RobeltKovac@gmail.com, RobeltKovac, Example, null, 2014-06-25 09:38:14.113}
2014-06-25 09:38:14,114 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{17, NikoKovac@gmail.com, NikoKovac, Example, null, 2014-06-25 09:38:14.114}
2014-06-25 09:38:14,115 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{18, Jovanovic@gmail.com, Jovano, Example, 1981/04/18, 2014-06-25 09:38:14.115}
2014-06-25 09:38:14,118 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{19, Milko@gmail.com, Milko, Example, 1974/09/10, 2014-06-25 09:38:14.117}
2014-06-25 09:38:14,119 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{20, 諸葛瑾子瑜@gmail.com, ShokatsuKinKin, Example, null, 2014-06-25 09:38:14.119}
2014-06-25 09:38:14,132 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 20 rows are loaded to MEMBER
2014-06-25 09:38:14,135 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 3, 2006/12/24 23:59:59}
2014-06-25 09:38:14,137 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 6, 2007/11/11 16:16:16}
2014-06-25 09:38:14,138 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{3, 1, 2006/12/23 22:56:29}
2014-06-25 09:38:14,139 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{4, 6, 2007/11/01 02:13:00}
2014-06-25 09:38:14,140 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{5, 7, 2006/05/24 23:12:59}
2014-06-25 09:38:14,142 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{6, 6, 2005/11/11 16:32:01}
2014-06-25 09:38:14,143 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{7, 6, 2006/01/28 23:59:59}
2014-06-25 09:38:14,144 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{8, 6, 2007/11/09 16:23:00}
2014-06-25 09:38:14,145 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{9, 8, 2006/12/22 23:59:59}
2014-06-25 09:38:14,147 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{10, 6, 2007/11/11 09:01:00}
2014-06-25 09:38:14,148 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{11, 1, 2006/12/23 23:59:59}
2014-06-25 09:38:14,149 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{12, 9, 2007/11/15 12:43:00}
2014-06-25 09:38:14,151 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{13, 10, 2006/12/24 23:59:59}
2014-06-25 09:38:14,152 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{14, 6, 2007/04/01 16:23:01}
2014-06-25 09:38:14,153 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{15, 7, 2006/12/24 23:59:20}
2014-06-25 09:38:14,155 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{16, 6, 2007/05/01 12:23:02}
2014-06-25 09:38:14,156 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{17, 7, 2006/12/24 23:59:21}
2014-06-25 09:38:14,158 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{18, 6, 2007/06/11 17:23:03}
2014-06-25 09:38:14,159 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{19, 4, 2006/12/24 23:59:22}
2014-06-25 09:38:14,160 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{20, 3, 2007/11/01 16:12:04}
2014-06-25 09:38:14,162 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{21, 11, 2006/12/24 23:59:23}
2014-06-25 09:38:14,163 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{22, 1, 2007/11/01 16:23:05}
2014-06-25 09:38:14,165 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{23, 9, 2006/12/24 23:59:24}
2014-06-25 09:38:14,166 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{24, 8, 2007/11/01 16:23:06}
2014-06-25 09:38:14,167 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{25, 7, 2007/12/24 11:59:25}
2014-06-25 09:38:14,168 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{26, 6, 2007/06/21 01:23:57}
2014-06-25 09:38:14,170 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{27, 5, 2006/12/24 23:59:26}
2014-06-25 09:38:14,171 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{28, 3, 2007/11/01 16:23:08}
2014-06-25 09:38:14,172 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{29, 3, 2006/12/24 23:59:27}
2014-06-25 09:38:14,174 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{30, 10, 2007/11/01 16:23:09}
2014-06-25 09:38:14,176 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-25 09:38:14,195 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 30 rows are loaded to LOGIN
2014-06-25 09:38:14,196 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014/06/23, null}
2014-06-25 09:38:14,197 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014/06/24, null}
2014-06-25 09:38:14,198 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{3, ccc, 2014/06/25, 2014/06/25}
2014-06-25 09:38:14,200 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{4, ddd, 2014/06/26, null}
2014-06-25 09:38:14,201 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{5, eee2, 2014/06/27, null}
2014-06-25 09:38:14,202 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{6, fff, 2014/06/28, null}
2014-06-25 09:38:14,203 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{7, ggg3, 2014/06/29, 2014/06/25}
2014-06-25 09:38:14,205 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{8, hhh555, 2014/06/30, null}
2014-06-25 09:38:14,206 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{9, iii, 2014/07/01, 2014/06/25}
2014-06-25 09:38:14,208 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{10, jjj, 2014/07/02, null}
2014-06-25 09:38:14,209 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-25 09:38:14,216 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to MEMBER_SECURITY
2014-06-25 09:38:14,218 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 2013-06-13 00:00:00.0}
2014-06-25 09:38:14,220 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{2, 2345, 清君頼りになるー！, 2013-06-14 00:00:00.0}
2014-06-25 09:38:14,222 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{3, 3456, GLD, 2013-06-15 00:00:00.0}
2014-06-25 09:38:14,223 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{4, 875, BRZ, 2013-06-16 00:00:00.0}
2014-06-25 09:38:14,224 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{5, 1111, BRZ, 2013-06-17 00:00:00.0}
2014-06-25 09:38:14,226 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{6, 5422, SIL, 2013-06-18 00:00:00.0}
2014-06-25 09:38:14,227 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{7, 24678, SIL, 2013-06-19 00:00:00.0}
2014-06-25 09:38:14,229 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{8, 234, SIL, 2013-06-20 00:00:00.0}
2014-06-25 09:38:14,230 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{9, 3, SIL, 2013-06-21 00:00:00.0}
2014-06-25 09:38:14,231 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{10, 98765, PLT, 2013-06-22 00:00:00.0}
2014-06-25 09:38:14,233 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-25 09:38:14,245 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to TWEET
2014-06-25 09:38:14,246 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{3, 1, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123}
2014-06-25 09:38:14,249 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{6, 1, null, 2007/11/11 16:00:00.456}
2014-06-25 09:38:14,250 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{13, 2, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789}
2014-06-25 09:38:14,252 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{16, 3, コバチが２人いるため, 2007/11/13 16:00:00.456}
2014-06-25 09:38:14,259 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 4 rows are loaded to MEMBER_WITHDRAW
2014-06-25 09:38:14,262 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():379) - ...Checking implicit set of classification
2014-06-25 09:38:14,281 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - 
2014-06-25 09:38:14,282 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * * * * * * * **
2014-06-25 09:38:14,283 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2014-06-25 09:38:14,285 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * Take Finally *
2014-06-25 09:38:14,286 [main] INFO  (DfTakeFinallyProcess#takeFinally():225) - *              *
2014-06-25 09:38:14,287 [main] INFO  (DfTakeFinallyProcess#takeFinally():226) - * * * * * * * **
2014-06-25 09:38:14,302 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: take-finally.sql
2014-06-25 09:38:14,306 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2014-06-25 09:38:14,308 [main] INFO  (DfSqlFileFireMan#fire():90) - {Take Finally}: success=0 failure=0 (in 1 files)
2014-06-25 09:38:14,311 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-25 09:38:14,318 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m03s697ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=11 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=1
  (ut)
  o 20-member.xls

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-06-25 09:38:15,292 [main] INFO  (TorqueJDBCTransformTask#begin():100) - +------------------------------------------+
2014-06-25 09:38:15,294 [main] INFO  (TorqueJDBCTransformTask#begin():101) - |                                          |
2014-06-25 09:38:15,295 [main] INFO  (TorqueJDBCTransformTask#begin():102) - |                   JDBC                   |
2014-06-25 09:38:15,295 [main] INFO  (TorqueJDBCTransformTask#begin():103) - |                                          |
2014-06-25 09:38:15,297 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2014-06-25 09:38:15,337 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-25 09:38:15,338 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-25 09:38:15,338 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-25 09:38:15,340 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-25 09:38:15,426 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2014-06-25 09:38:15,426 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2014-06-25 09:38:15,427 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1469) - ...Loading previous schema (schema diff process)
2014-06-25 09:38:15,440 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-25 09:38:15,499 [main] INFO  (DfSchemaXmlSerializer#generateXML():361) - ...Getting DB connection
2014-06-25 09:38:15,503 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-25 09:38:15,688 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-25 09:38:15,688 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-25 09:38:15,690 [main] INFO  (DfSchemaXmlSerializer#generateXML():364) - ...Getting DB meta data
2014-06-25 09:38:15,692 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-25 09:38:15,693 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-25 09:38:15,693 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-25 09:38:15,704 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2014-06-25 09:38:15,707 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2014-06-25 09:38:15,724 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - 
2014-06-25 09:38:15,724 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2014-06-25 09:38:15,725 [main] INFO  (DfSchemaXmlSerializer#processTable():423) - $ [Table List]
2014-06-25 09:38:15,726 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.login(TABLE) // ログイン
2014-06-25 09:38:15,762 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member(TABLE) // 会員
2014-06-25 09:38:15,777 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_security(TABLE) // 会員セキュリティ
2014-06-25 09:38:15,791 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_withdraw(TABLE) // 会員退会
2014-06-25 09:38:15,806 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.tweet(TABLE) // TWEET
2014-06-25 09:38:15,819 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 
2014-06-25 09:38:15,820 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ [Table Count]
2014-06-25 09:38:15,821 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ 5
2014-06-25 09:38:15,822 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - $ = = = = = = = = = =/
2014-06-25 09:38:15,823 [main] INFO  (DfSchemaXmlSerializer#processTable():439) - 
2014-06-25 09:38:15,832 [main] INFO  (DfSchemaXmlSerializer#processSequence():799) - ...Getting sequences
2014-06-25 09:38:15,838 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2014-06-25 09:38:15,839 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-twitter.xml
2014-06-25 09:38:15,840 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2014-06-25 09:38:15,863 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1487) - ...Loading next schema (schema diff process)
2014-06-25 09:38:15,865 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-25 09:38:15,910 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1492) -  -> different from previous (schema diff)
2014-06-25 09:38:15,912 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1494) - ...Serializing schema-diff:
2014-06-25 09:38:15,912 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1495) -   filePath = ./schema/project-history-twitter.diffmap
2014-06-25 09:38:15,929 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-25 09:38:15,935 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s640ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2014-06-25 09:38:16,837 [main] INFO  (TorqueDocumentationTask#begin():171) - +------------------------------------------+
2014-06-25 09:38:16,840 [main] INFO  (TorqueDocumentationTask#begin():172) - |                                          |
2014-06-25 09:38:16,840 [main] INFO  (TorqueDocumentationTask#begin():173) - |                   Doc                    |
2014-06-25 09:38:16,841 [main] INFO  (TorqueDocumentationTask#begin():181) - |                                          |
2014-06-25 09:38:16,842 [main] INFO  (TorqueDocumentationTask#begin():182) - +------------------------------------------+
2014-06-25 09:38:16,884 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-25 09:38:16,885 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-25 09:38:16,885 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-25 09:38:16,887 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-25 09:38:16,891 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():242) - 
2014-06-25 09:38:16,891 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():243) - * * * * * * * * * * *
2014-06-25 09:38:16,892 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():244) - *                   *
2014-06-25 09:38:16,893 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():245) - *    Schema HTML    *
2014-06-25 09:38:16,895 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - *                   *
2014-06-25 09:38:16,896 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2014-06-25 09:38:17,084 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-25 09:38:17,144 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("doc/ControlDocument.vm", c);
2014-06-25 09:38:17,216 [main] INFO  (Database#doEnableDocumentOutputDirectory():1180) - ...Setting up documentOutputDirectory: ./output/doc
2014-06-25 09:38:17,227 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-25 09:38:17,227 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-25 09:38:17,231 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-25 09:38:17,233 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-25 09:38:17,234 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-25 09:38:17,237 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-25 09:38:17,240 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-25 09:38:17,241 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-25 09:38:17,244 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-25 09:38:17,255 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():150) - ...Loading schema history
2014-06-25 09:38:17,292 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():154) -  -> found history: count=5
2014-06-25 09:38:17,474 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-25 09:38:17,538 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s699ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Doc}
2014-06-25 09:38:20,491 [main] INFO  (TorqueDataModelTask#begin():105) - +------------------------------------------+
2014-06-25 09:38:20,494 [main] INFO  (TorqueDataModelTask#begin():106) - |                                          |
2014-06-25 09:38:20,494 [main] INFO  (TorqueDataModelTask#begin():107) - |                 Generate                 |
2014-06-25 09:38:20,495 [main] INFO  (TorqueDataModelTask#begin():108) - |                                          |
2014-06-25 09:38:20,497 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2014-06-25 09:38:20,537 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-25 09:38:20,538 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-25 09:38:20,539 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-25 09:38:20,540 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-25 09:38:20,558 [main] INFO  (TorqueDataModelTask#setupControlTemplate():160) - 
2014-06-25 09:38:20,559 [main] INFO  (TorqueDataModelTask#setupControlTemplate():161) - ...Using Java control: om/ControlGenerateJava.vm
2014-06-25 09:38:20,697 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-25 09:38:20,734 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlGenerateJava.vm", c);
2014-06-25 09:38:20,842 [main] INFO  (Database#doEnableGenerateOutputDirectory():1148) - ...Setting up generateOutputDirectory: ../src/main/java
2014-06-25 09:38:20,849 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-25 09:38:20,850 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-25 09:38:20,852 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-25 09:38:20,855 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-25 09:38:20,856 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-25 09:38:20,858 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-25 09:38:20,862 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-25 09:38:20,863 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-25 09:38:20,866 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-25 09:38:20,892 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - /=============================
2014-06-25 09:38:20,892 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():60) - ...Initializing include query.
2014-06-25 09:38:20,893 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - String
2014-06-25 09:38:20,894 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Number
2014-06-25 09:38:20,896 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Date
2014-06-25 09:38:20,897 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotEqual -> []
2014-06-25 09:38:20,898 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   InScope -> []
2014-06-25 09:38:20,900 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotInScope -> []
2014-06-25 09:38:20,901 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - OrderBy
2014-06-25 09:38:20,902 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():62) - ========/
2014-06-25 09:38:20,919 [main] INFO  (Database#info():2577) - public void parseAllCommon() {
2014-06-25 09:38:20,923 [main] INFO  (Database#info():2577) -     parse('DBCurrent');
2014-06-25 09:38:20,931 [main] INFO  (Database#info():2577) -     parse('DBFluteConfig');
2014-06-25 09:38:20,956 [main] INFO  (Database#info():2577) -     parse('DBFluteInitializer');
2014-06-25 09:38:20,962 [main] INFO  (Database#info():2577) -     parse('DBMetaInstanceHandler');
2014-06-25 09:38:20,984 [main] INFO  (Database#info():2577) -     parse('EntityDefinedCommonColumn');
2014-06-25 09:38:20,992 [main] INFO  (Database#info():2577) -     parse('ImplementedBehaviorSelector');
2014-06-25 09:38:21,000 [main] INFO  (Database#info():2577) -     parse('ImplementedCommonColumnAutoSetupper');
2014-06-25 09:38:21,007 [main] INFO  (Database#info():2577) -     parse('ImplementedInvokerAssistant');
2014-06-25 09:38:21,013 [main] INFO  (Database#info():2577) -     parse('ImplementedSqlClauseCreator');
2014-06-25 09:38:21,018 [main] INFO  (Database#info():2577) - }
2014-06-25 09:38:21,019 [main] INFO  (Database#info():2577) - public void parseContainerConfig() {
2014-06-25 09:38:21,021 [main] INFO  (Database#info():2577) -     parse('../resources/dbflute.dicon')
2014-06-25 09:38:21,028 [main] INFO  (Database#info():2577) - }
2014-06-25 09:38:21,033 [main] INFO  (DfOldClassHandler#info():886) - public void deleteOldTableClass() {
2014-06-25 09:38:21,052 [main] INFO  (DfOldClassHandler#info():886) - }
2014-06-25 09:38:21,053 [main] INFO  (Database#info():2577) - public void parseTableClass() {
2014-06-25 09:38:21,054 [main] INFO  (Database#info():2577) -     parse('login');
2014-06-25 09:38:21,311 [main] INFO  (Database#info():2577) -     parse('member');
2014-06-25 09:38:21,595 [main] INFO  (Database#info():2577) -     parse('member_security');
2014-06-25 09:38:21,764 [main] INFO  (Database#info():2577) -     parse('member_withdraw');
2014-06-25 09:38:21,887 [main] INFO  (Database#info():2577) -     parse('tweet');
2014-06-25 09:38:22,000 [main] INFO  (Database#info():2577) - }
2014-06-25 09:38:22,000 [main] INFO  (Database#info():2577) -  
2014-06-25 09:38:22,023 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-25 09:38:22,030 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s536ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Generate}
2014-06-25 09:38:24,025 [main] INFO  (DfOutsideSqlTestTask#begin():72) - +------------------------------------------+
2014-06-25 09:38:24,029 [main] INFO  (DfOutsideSqlTestTask#begin():73) - |                                          |
2014-06-25 09:38:24,031 [main] INFO  (DfOutsideSqlTestTask#begin():74) - |              OutsideSqlTest              |
2014-06-25 09:38:24,032 [main] INFO  (DfOutsideSqlTestTask#begin():75) - |                                          |
2014-06-25 09:38:24,034 [main] INFO  (DfOutsideSqlTestTask#begin():76) - +------------------------------------------+
2014-06-25 09:38:24,097 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-25 09:38:24,099 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-25 09:38:24,131 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-25 09:38:24,138 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-25 09:38:24,190 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-25 09:38:24,199 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s167ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2014-06-25 09:38:25,248 [main] INFO  (DfSql2EntityTask#begin():100) - +------------------------------------------+
2014-06-25 09:38:25,250 [main] INFO  (DfSql2EntityTask#begin():101) - |                                          |
2014-06-25 09:38:25,251 [main] INFO  (DfSql2EntityTask#begin():102) - |                Sql2Entity                |
2014-06-25 09:38:25,251 [main] INFO  (DfSql2EntityTask#begin():103) - |                                          |
2014-06-25 09:38:25,253 [main] INFO  (DfSql2EntityTask#begin():104) - +------------------------------------------+
2014-06-25 09:38:25,291 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-25 09:38:25,292 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-25 09:38:25,292 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-25 09:38:25,294 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-25 09:38:25,310 [main] INFO  (DfSql2EntityTask#setupControlTemplate():170) - 
2014-06-25 09:38:25,311 [main] INFO  (DfSql2EntityTask#setupControlTemplate():171) - ...Using Java control: om/ControlSql2EntityJava.vm
2014-06-25 09:38:25,318 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-25 09:38:25,367 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-25 09:38:25,493 [main] INFO  (DfSql2EntityTask#initControlContext():301) - 
2014-06-25 09:38:25,493 [main] INFO  (DfSql2EntityTask#initControlContext():302) - ...Preparing generation of customize-entities and parameter-beans
2014-06-25 09:38:25,494 [main] INFO  (DfSql2EntityTask#initControlContext():303) - * * * * * * * * * *
2014-06-25 09:38:25,496 [main] INFO  (DfSql2EntityTask#initControlContext():304) - * CustomizeEntity *
2014-06-25 09:38:25,497 [main] INFO  (DfSql2EntityTask#initControlContext():305) - * * * * * * * * * *
2014-06-25 09:38:25,498 [main] INFO  (DfSql2EntityTask#showParameterBean():871) - * * * * * * * * *
2014-06-25 09:38:25,500 [main] INFO  (DfSql2EntityTask#showParameterBean():872) - * ParameterBean *
2014-06-25 09:38:25,501 [main] INFO  (DfSql2EntityTask#showParameterBean():873) - * * * * * * * * *
2014-06-25 09:38:25,506 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlSql2EntityJava.vm", c);
2014-06-25 09:38:25,612 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1164) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2014-06-25 09:38:25,615 [main] INFO  (DfOldClassHandler#info():886) - public void deleteOldCustomizeClass() {
2014-06-25 09:38:25,626 [main] INFO  (DfOldClassHandler#info():886) - }
2014-06-25 09:38:25,626 [main] INFO  (Database#info():2577) - public void parseCustomizeEntity() {
2014-06-25 09:38:25,629 [main] INFO  (Database#info():2577) - }
2014-06-25 09:38:25,641 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():293) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2014-06-25 09:38:25,650 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-25 09:38:25,656 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s405ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2014-06-25 10:34:36,205 [main] INFO  (DfReplaceSchemaTask#begin():87) - +------------------------------------------+
2014-06-25 10:34:36,209 [main] INFO  (DfReplaceSchemaTask#begin():88) - |                                          |
2014-06-25 10:34:36,209 [main] INFO  (DfReplaceSchemaTask#begin():89) - |              ReplaceSchema               |
2014-06-25 10:34:36,230 [main] INFO  (DfReplaceSchemaTask#begin():97) - |                                          |
2014-06-25 10:34:36,231 [main] INFO  (DfReplaceSchemaTask#begin():98) - +------------------------------------------+
2014-06-25 10:34:36,233 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():329) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2014-06-25 10:34:37,685 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-25 10:34:37,689 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-25 10:34:37,691 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-25 10:34:37,692 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-25 10:34:37,713 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-25 10:34:37,978 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-25 10:34:37,979 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-25 10:34:38,002 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():207) - 
2014-06-25 10:34:38,003 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():208) - * * * * * * * * * * *
2014-06-25 10:34:38,004 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():209) - *                   *
2014-06-25 10:34:38,005 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():210) - * Initialize Schema *
2014-06-25 10:34:38,007 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():211) - *                   *
2014-06-25 10:34:38,008 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():212) - * * * * * * * * * * *
2014-06-25 10:34:38,029 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-25 10:34:38,030 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-25 10:34:38,031 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-25 10:34:38,068 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table login
2014-06-25 10:34:38,105 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_security
2014-06-25 10:34:38,131 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_withdraw
2014-06-25 10:34:38,154 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table tweet
2014-06-25 10:34:38,164 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table login drop foreign key login_ibfk_1
2014-06-25 10:34:38,176 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_security drop foreign key member_security_ibfk_1
2014-06-25 10:34:38,188 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_withdraw drop foreign key member_withdraw_ibfk_1
2014-06-25 10:34:38,202 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table tweet drop foreign key tweet_ibfk_1
2014-06-25 10:34:38,211 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table login
2014-06-25 10:34:38,221 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member
2014-06-25 10:34:38,233 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_security
2014-06-25 10:34:38,244 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_withdraw
2014-06-25 10:34:38,254 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table tweet
2014-06-25 10:34:38,296 [main] INFO  (DfCreateSchemaProcess#createSchema():244) - 
2014-06-25 10:34:38,297 [main] INFO  (DfCreateSchemaProcess#createSchema():245) - * * * * * * * * *
2014-06-25 10:34:38,298 [main] INFO  (DfCreateSchemaProcess#createSchema():246) - *               *
2014-06-25 10:34:38,299 [main] INFO  (DfCreateSchemaProcess#createSchema():247) - * Create Schema *
2014-06-25 10:34:38,300 [main] INFO  (DfCreateSchemaProcess#createSchema():248) - *               *
2014-06-25 10:34:38,302 [main] INFO  (DfCreateSchemaProcess#createSchema():249) - * * * * * * * * *
2014-06-25 10:34:38,307 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-00-system.sql
2014-06-25 10:34:38,310 [main] INFO  (DfReplaceSchemaProperties#checkTargetEnvType():277) - ...Checking envType: ut in [ut]
2014-06-25 10:34:38,312 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:checkEnv(ut)#

-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database twitter
2014-06-25 10:34:38,319 [main] INFO  (DfCreateSchemaProcess$1#dispatch():273) - ...Creating a connection to system
2014-06-25 10:34:38,322 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():514) - ...Creating a connection for additional user: root
2014-06-25 10:34:38,337 [main] INFO  (DfCreateSchemaProcess$1#dispatch():299) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2014-06-25 10:34:38,338 [main] INFO  (DfCreateSchemaProcess$1#dispatch():301) -  -> Can't create database 'twitter'; database exists
2014-06-25 10:34:38,340 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():411) - ...Reviving the user 'system' until the end of this SQL file
2014-06-25 10:34:38,340 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on twitter.*
  to twitter@localhost identified by 'twitter'
2014-06-25 10:34:38,348 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2014-06-25 10:34:38,350 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2014-06-25 10:34:38,351 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-10-basic.sql
2014-06-25 10:34:38,352 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():348) - ...Saying good-bye to the user 'system' again
2014-06-25 10:34:38,353 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():352) - ...Clearing revived users
2014-06-25 10:34:38,354 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():359) - ...Coming back to the main user from the user 'system'
2014-06-25 10:34:38,357 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE LOGIN
(
	LOGIN_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ログインID : ログインした瞬間のID
',
	LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	PRIMARY KEY (LOGIN_ID)
) COMMENT = 'ログイン'
2014-06-25 10:34:38,400 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER
(
	MEMBER_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員のID
',
	EMAIL_ADDRESS VARCHAR(100) NOT NULL UNIQUE COMMENT 'メールアドレス : 会員のメールアドレス',
	USER_NAME VARCHAR(50) NOT NULL UNIQUE COMMENT '会員ユーザ名 : 会員のユーザ名',
	UPDATE_DATETIME DATETIME COMMENT '更新日時',
	BIRTHDATE DATE COMMENT '生年月日 : 会員の生年月日',
	PROFILE VARCHAR(200) COMMENT 'プロフィール',
	NAME VARCHAR(50) NOT NULL COMMENT '名前',
	REGESTER_DATETIME DATE NOT NULL COMMENT '登録日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員'
2014-06-25 10:34:38,454 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PASSWORD VARCHAR(50) NOT NULL COMMENT 'パスワード',
	PASSWORD_UPDATE_DATETIME DATETIME COMMENT 'パスワード更新日時',
	PASSWORD_REGESTERATION_DATETIME DATETIME NOT NULL COMMENT 'パスワード登録日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員セキュリティ'
2014-06-25 10:34:38,498 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_WITHDRAW
(
	WITHDRAWAL_REASON_ID INT COMMENT '退会理由ID : 会員の退会理由ID',
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト',
	WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT 'withdrawal_datetime : 退会日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員退会'
2014-06-25 10:34:38,542 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	TWEET_DATETIME DATETIME NOT NULL COMMENT 'TWEET日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-06-25 10:34:38,591 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-25 10:34:38,651 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-25 10:34:38,704 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_WITHDRAW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-25 10:34:38,770 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-25 10:34:38,856 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=9 failure=0
2014-06-25 10:34:38,857 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=11 failure=0 (in 2 files)
2014-06-25 10:34:38,857 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-06-25 10:34:38,905 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-06-25 10:34:38,905 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-06-25 10:34:38,906 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-06-25 10:34:38,907 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-06-25 10:34:38,909 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-06-25 10:34:38,910 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-06-25 10:34:38,941 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-06-25 10:34:38,941 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-06-25 10:34:38,942 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-06-25 10:34:39,343 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-25 10:34:39,344 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-25 10:34:39,344 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-25 10:34:39,403 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{1, Stojkovic@gmail.com, Pixy, Example, 1965/03/03, 2014-06-24 00:00:00.0, 2014-06-25 10:34:39.402}
2014-06-25 10:34:39,457 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{2, Savicevic@gmail.com, Genius, Tom, 1966/09/15, 2014-06-25 00:00:00.0, 2014-06-25 10:34:39.457}
2014-06-25 10:34:39,459 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{3, Mijatovic@gmail.com, Mijato, Raven, null, 2014-06-26 00:00:00.0, 2014-06-25 10:34:39.459}
2014-06-25 10:34:39,460 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{4, Stankovic@gmail.com, Stanko, Example, 1978/09/11, 2014-06-27 00:00:00.0, 2014-06-25 10:34:39.46}
2014-06-25 10:34:39,462 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{5, Milosevic@gmail.com, Milose, Example, null, 2014-06-28 00:00:00.0, 2014-06-25 10:34:39.461}
2014-06-25 10:34:39,463 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{6, Mihajlovic@gmail.com, FreeKick, Example, 1969/02/20, 2014-06-29 00:00:00.0, 2014-06-25 10:34:39.463}
2014-06-25 10:34:39,464 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{7, アカギ@gmail.com, Akagi, Example, null, 2014-06-30 00:00:00.0, 2014-06-25 10:34:39.464}
2014-06-25 10:34:39,467 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{8, Kezman@gmial.com, RedCard, Example, null, 2014-07-01 00:00:00.0, 2014-06-25 10:34:39.467}
2014-06-25 10:34:39,468 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{9, Maslovar@gmail.com, JEFUnited, Example, 1967/02/20, 2014-07-02 00:00:00.0, 2014-06-25 10:34:39.468}
2014-06-25 10:34:39,470 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{10, 諸葛亮孔明@gmail.com, ShokatsuGoGo, Example, null, 2014-07-03 00:00:00.0, 2014-06-25 10:34:39.47}
2014-06-25 10:34:39,473 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{11, Boban@gmail.com, Boban, Example, 1968/10/08, 2014-07-04 00:00:00.0, 2014-06-25 10:34:39.473}
2014-06-25 10:34:39,474 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{12, Suker@gmail.com, Suker, Example, 1968/01/01, 2014-07-05 00:00:00.0, 2014-06-25 10:34:39.474}
2014-06-25 10:34:39,476 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{13, Jarni@gmail.com, Jarni, Example, 1968/10/26, 2014-07-06 00:00:00.0, 2014-06-25 10:34:39.476}
2014-06-25 10:34:39,478 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{14, Boksic@gmail.com, Boksic, Example, 1970/01/21, 2014-07-07 00:00:00.0, 2014-06-25 10:34:39.478}
2014-06-25 10:34:39,479 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{15, Prosinecki@gmail.com, Prosinecki, Example, 1969/01/12, 2014-07-08 00:00:00.0, 2014-06-25 10:34:39.479}
2014-06-25 10:34:39,481 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{16, RobeltKovac@gmail.com, RobeltKovac, Example, null, 2014-07-09 00:00:00.0, 2014-06-25 10:34:39.481}
2014-06-25 10:34:39,483 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{17, NikoKovac@gmail.com, NikoKovac, Example, null, 2014-07-10 00:00:00.0, 2014-06-25 10:34:39.483}
2014-06-25 10:34:39,484 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{18, Jovanovic@gmail.com, Jovano, Example, 1981/04/18, 2014-07-11 00:00:00.0, 2014-06-25 10:34:39.484}
2014-06-25 10:34:39,486 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{19, Milko@gmail.com, Milko, Example, 1974/09/10, 2014-07-12 00:00:00.0, 2014-06-25 10:34:39.486}
2014-06-25 10:34:39,488 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{20, 諸葛瑾子瑜@gmail.com, ShokatsuKinKin, Example, null, 2014-07-13 00:00:00.0, 2014-06-25 10:34:39.488}
2014-06-25 10:34:39,507 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 20 rows are loaded to MEMBER
2014-06-25 10:34:39,510 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 3, 2006/12/24 23:59:59}
2014-06-25 10:34:39,511 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 6, 2007/11/11 16:16:16}
2014-06-25 10:34:39,512 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{3, 1, 2006/12/23 22:56:29}
2014-06-25 10:34:39,513 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{4, 6, 2007/11/01 02:13:00}
2014-06-25 10:34:39,514 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{5, 7, 2006/05/24 23:12:59}
2014-06-25 10:34:39,516 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{6, 6, 2005/11/11 16:32:01}
2014-06-25 10:34:39,517 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{7, 6, 2006/01/28 23:59:59}
2014-06-25 10:34:39,518 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{8, 6, 2007/11/09 16:23:00}
2014-06-25 10:34:39,520 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{9, 8, 2006/12/22 23:59:59}
2014-06-25 10:34:39,521 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{10, 6, 2007/11/11 09:01:00}
2014-06-25 10:34:39,522 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{11, 1, 2006/12/23 23:59:59}
2014-06-25 10:34:39,524 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{12, 9, 2007/11/15 12:43:00}
2014-06-25 10:34:39,525 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{13, 10, 2006/12/24 23:59:59}
2014-06-25 10:34:39,526 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{14, 6, 2007/04/01 16:23:01}
2014-06-25 10:34:39,528 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{15, 7, 2006/12/24 23:59:20}
2014-06-25 10:34:39,529 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{16, 6, 2007/05/01 12:23:02}
2014-06-25 10:34:39,530 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{17, 7, 2006/12/24 23:59:21}
2014-06-25 10:34:39,532 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{18, 6, 2007/06/11 17:23:03}
2014-06-25 10:34:39,533 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{19, 4, 2006/12/24 23:59:22}
2014-06-25 10:34:39,535 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{20, 3, 2007/11/01 16:12:04}
2014-06-25 10:34:39,537 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{21, 11, 2006/12/24 23:59:23}
2014-06-25 10:34:39,537 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{22, 1, 2007/11/01 16:23:05}
2014-06-25 10:34:39,539 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{23, 9, 2006/12/24 23:59:24}
2014-06-25 10:34:39,540 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{24, 8, 2007/11/01 16:23:06}
2014-06-25 10:34:39,541 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{25, 7, 2007/12/24 11:59:25}
2014-06-25 10:34:39,543 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{26, 6, 2007/06/21 01:23:57}
2014-06-25 10:34:39,544 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{27, 5, 2006/12/24 23:59:26}
2014-06-25 10:34:39,545 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{28, 3, 2007/11/01 16:23:08}
2014-06-25 10:34:39,547 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{29, 3, 2006/12/24 23:59:27}
2014-06-25 10:34:39,548 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{30, 10, 2007/11/01 16:23:09}
2014-06-25 10:34:39,549 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-25 10:34:39,563 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 30 rows are loaded to LOGIN
2014-06-25 10:34:39,564 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014/06/23, null}
2014-06-25 10:34:39,565 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014/06/24, null}
2014-06-25 10:34:39,566 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{3, ccc, 2014/06/25, 2014/06/25}
2014-06-25 10:34:39,568 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{4, ddd, 2014/06/26, null}
2014-06-25 10:34:39,569 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{5, eee2, 2014/06/27, null}
2014-06-25 10:34:39,570 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{6, fff, 2014/06/28, null}
2014-06-25 10:34:39,571 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{7, ggg3, 2014/06/29, 2014/06/25}
2014-06-25 10:34:39,573 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{8, hhh555, 2014/06/30, null}
2014-06-25 10:34:39,574 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{9, iii, 2014/07/01, 2014/06/25}
2014-06-25 10:34:39,576 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{10, jjj, 2014/07/02, null}
2014-06-25 10:34:39,577 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-25 10:34:39,588 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to MEMBER_SECURITY
2014-06-25 10:34:39,589 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 2013-06-13 00:00:00.0}
2014-06-25 10:34:39,592 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{2, 2345, 清君頼りになるー！, 2013-06-14 00:00:00.0}
2014-06-25 10:34:39,594 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{3, 3456, GLD, 2013-06-15 00:00:00.0}
2014-06-25 10:34:39,595 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{4, 875, BRZ, 2013-06-16 00:00:00.0}
2014-06-25 10:34:39,596 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{5, 1111, BRZ, 2013-06-17 00:00:00.0}
2014-06-25 10:34:39,598 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{6, 5422, SIL, 2013-06-18 00:00:00.0}
2014-06-25 10:34:39,598 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{7, 24678, SIL, 2013-06-19 00:00:00.0}
2014-06-25 10:34:39,601 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{8, 234, SIL, 2013-06-20 00:00:00.0}
2014-06-25 10:34:39,602 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{9, 3, SIL, 2013-06-21 00:00:00.0}
2014-06-25 10:34:39,604 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{10, 98765, PLT, 2013-06-22 00:00:00.0}
2014-06-25 10:34:39,605 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-25 10:34:39,612 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to TWEET
2014-06-25 10:34:39,613 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{3, 1, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123}
2014-06-25 10:34:39,617 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{6, 1, null, 2007/11/11 16:00:00.456}
2014-06-25 10:34:39,618 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{13, 2, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789}
2014-06-25 10:34:39,621 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{16, 3, コバチが２人いるため, 2007/11/13 16:00:00.456}
2014-06-25 10:34:39,631 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 4 rows are loaded to MEMBER_WITHDRAW
2014-06-25 10:34:39,634 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():379) - ...Checking implicit set of classification
2014-06-25 10:34:39,650 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - 
2014-06-25 10:34:39,652 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * * * * * * * **
2014-06-25 10:34:39,652 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2014-06-25 10:34:39,654 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * Take Finally *
2014-06-25 10:34:39,655 [main] INFO  (DfTakeFinallyProcess#takeFinally():225) - *              *
2014-06-25 10:34:39,657 [main] INFO  (DfTakeFinallyProcess#takeFinally():226) - * * * * * * * **
2014-06-25 10:34:39,672 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: take-finally.sql
2014-06-25 10:34:39,675 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2014-06-25 10:34:39,676 [main] INFO  (DfSqlFileFireMan#fire():90) - {Take Finally}: success=0 failure=0 (in 1 files)
2014-06-25 10:34:39,679 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-25 10:34:39,687 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m03s477ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=11 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=1
  (ut)
  o 20-member.xls

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-06-25 10:34:40,704 [main] INFO  (TorqueJDBCTransformTask#begin():100) - +------------------------------------------+
2014-06-25 10:34:40,707 [main] INFO  (TorqueJDBCTransformTask#begin():101) - |                                          |
2014-06-25 10:34:40,707 [main] INFO  (TorqueJDBCTransformTask#begin():102) - |                   JDBC                   |
2014-06-25 10:34:40,708 [main] INFO  (TorqueJDBCTransformTask#begin():103) - |                                          |
2014-06-25 10:34:40,709 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2014-06-25 10:34:40,755 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-25 10:34:40,755 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-25 10:34:40,756 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-25 10:34:40,757 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-25 10:34:40,806 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2014-06-25 10:34:40,807 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2014-06-25 10:34:40,807 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1469) - ...Loading previous schema (schema diff process)
2014-06-25 10:34:40,820 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-25 10:34:40,888 [main] INFO  (DfSchemaXmlSerializer#generateXML():361) - ...Getting DB connection
2014-06-25 10:34:40,905 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-25 10:34:41,132 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-25 10:34:41,132 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-25 10:34:41,134 [main] INFO  (DfSchemaXmlSerializer#generateXML():364) - ...Getting DB meta data
2014-06-25 10:34:41,137 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-25 10:34:41,137 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-25 10:34:41,138 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-25 10:34:41,150 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2014-06-25 10:34:41,152 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2014-06-25 10:34:41,164 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - 
2014-06-25 10:34:41,164 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2014-06-25 10:34:41,165 [main] INFO  (DfSchemaXmlSerializer#processTable():423) - $ [Table List]
2014-06-25 10:34:41,167 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.login(TABLE) // ログイン
2014-06-25 10:34:41,203 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member(TABLE) // 会員
2014-06-25 10:34:41,218 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_security(TABLE) // 会員セキュリティ
2014-06-25 10:34:41,231 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_withdraw(TABLE) // 会員退会
2014-06-25 10:34:41,243 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.tweet(TABLE) // TWEET
2014-06-25 10:34:41,255 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 
2014-06-25 10:34:41,255 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ [Table Count]
2014-06-25 10:34:41,256 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ 5
2014-06-25 10:34:41,257 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - $ = = = = = = = = = =/
2014-06-25 10:34:41,259 [main] INFO  (DfSchemaXmlSerializer#processTable():439) - 
2014-06-25 10:34:41,261 [main] INFO  (DfSchemaXmlSerializer#processSequence():799) - ...Getting sequences
2014-06-25 10:34:41,266 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2014-06-25 10:34:41,267 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-twitter.xml
2014-06-25 10:34:41,267 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2014-06-25 10:34:41,283 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1487) - ...Loading next schema (schema diff process)
2014-06-25 10:34:41,285 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-25 10:34:41,329 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1492) -  -> different from previous (schema diff)
2014-06-25 10:34:41,331 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1494) - ...Serializing schema-diff:
2014-06-25 10:34:41,332 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1495) -   filePath = ./schema/project-history-twitter.diffmap
2014-06-25 10:34:41,350 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-25 10:34:41,356 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s648ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2014-06-25 10:34:42,400 [main] INFO  (TorqueDocumentationTask#begin():171) - +------------------------------------------+
2014-06-25 10:34:42,403 [main] INFO  (TorqueDocumentationTask#begin():172) - |                                          |
2014-06-25 10:34:42,404 [main] INFO  (TorqueDocumentationTask#begin():173) - |                   Doc                    |
2014-06-25 10:34:42,404 [main] INFO  (TorqueDocumentationTask#begin():181) - |                                          |
2014-06-25 10:34:42,406 [main] INFO  (TorqueDocumentationTask#begin():182) - +------------------------------------------+
2014-06-25 10:34:42,451 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-25 10:34:42,452 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-25 10:34:42,452 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-25 10:34:42,454 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-25 10:34:42,459 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():242) - 
2014-06-25 10:34:42,459 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():243) - * * * * * * * * * * *
2014-06-25 10:34:42,460 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():244) - *                   *
2014-06-25 10:34:42,461 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():245) - *    Schema HTML    *
2014-06-25 10:34:42,463 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - *                   *
2014-06-25 10:34:42,464 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2014-06-25 10:34:42,643 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-25 10:34:42,715 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("doc/ControlDocument.vm", c);
2014-06-25 10:34:42,790 [main] INFO  (Database#doEnableDocumentOutputDirectory():1180) - ...Setting up documentOutputDirectory: ./output/doc
2014-06-25 10:34:42,803 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-25 10:34:42,805 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-25 10:34:42,812 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-25 10:34:42,815 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-25 10:34:42,816 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-25 10:34:42,818 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-25 10:34:42,821 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-25 10:34:42,822 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-25 10:34:42,824 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-25 10:34:42,833 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():150) - ...Loading schema history
2014-06-25 10:34:42,872 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():154) -  -> found history: count=6
2014-06-25 10:34:43,100 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-25 10:34:43,158 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s756ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Doc}
2014-06-25 10:34:46,385 [main] INFO  (TorqueDataModelTask#begin():105) - +------------------------------------------+
2014-06-25 10:34:46,388 [main] INFO  (TorqueDataModelTask#begin():106) - |                                          |
2014-06-25 10:34:46,388 [main] INFO  (TorqueDataModelTask#begin():107) - |                 Generate                 |
2014-06-25 10:34:46,389 [main] INFO  (TorqueDataModelTask#begin():108) - |                                          |
2014-06-25 10:34:46,391 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2014-06-25 10:34:46,433 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-25 10:34:46,433 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-25 10:34:46,434 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-25 10:34:46,436 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-25 10:34:46,457 [main] INFO  (TorqueDataModelTask#setupControlTemplate():160) - 
2014-06-25 10:34:46,457 [main] INFO  (TorqueDataModelTask#setupControlTemplate():161) - ...Using Java control: om/ControlGenerateJava.vm
2014-06-25 10:34:46,604 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-25 10:34:46,660 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlGenerateJava.vm", c);
2014-06-25 10:34:46,814 [main] INFO  (Database#doEnableGenerateOutputDirectory():1148) - ...Setting up generateOutputDirectory: ../src/main/java
2014-06-25 10:34:46,823 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-25 10:34:46,827 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-25 10:34:46,831 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-25 10:34:46,832 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-25 10:34:46,833 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-25 10:34:46,836 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-25 10:34:46,839 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-25 10:34:46,839 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-25 10:34:46,842 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-25 10:34:46,860 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - /=============================
2014-06-25 10:34:46,860 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():60) - ...Initializing include query.
2014-06-25 10:34:46,861 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - String
2014-06-25 10:34:46,863 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Number
2014-06-25 10:34:46,864 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Date
2014-06-25 10:34:46,867 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotEqual -> []
2014-06-25 10:34:46,868 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   InScope -> []
2014-06-25 10:34:46,869 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotInScope -> []
2014-06-25 10:34:46,870 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - OrderBy
2014-06-25 10:34:46,872 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():62) - ========/
2014-06-25 10:34:46,887 [main] INFO  (Database#info():2577) - public void parseAllCommon() {
2014-06-25 10:34:46,891 [main] INFO  (Database#info():2577) -     parse('DBCurrent');
2014-06-25 10:34:46,904 [main] INFO  (Database#info():2577) -     parse('DBFluteConfig');
2014-06-25 10:34:46,937 [main] INFO  (Database#info():2577) -     parse('DBFluteInitializer');
2014-06-25 10:34:46,947 [main] INFO  (Database#info():2577) -     parse('DBMetaInstanceHandler');
2014-06-25 10:34:46,965 [main] INFO  (Database#info():2577) -     parse('EntityDefinedCommonColumn');
2014-06-25 10:34:46,969 [main] INFO  (Database#info():2577) -     parse('ImplementedBehaviorSelector');
2014-06-25 10:34:46,973 [main] INFO  (Database#info():2577) -     parse('ImplementedCommonColumnAutoSetupper');
2014-06-25 10:34:46,979 [main] INFO  (Database#info():2577) -     parse('ImplementedInvokerAssistant');
2014-06-25 10:34:46,982 [main] INFO  (Database#info():2577) -     parse('ImplementedSqlClauseCreator');
2014-06-25 10:34:46,985 [main] INFO  (Database#info():2577) - }
2014-06-25 10:34:46,986 [main] INFO  (Database#info():2577) - public void parseContainerConfig() {
2014-06-25 10:34:46,987 [main] INFO  (Database#info():2577) -     parse('../resources/dbflute.dicon')
2014-06-25 10:34:46,995 [main] INFO  (Database#info():2577) - }
2014-06-25 10:34:47,000 [main] INFO  (DfOldClassHandler#info():886) - public void deleteOldTableClass() {
2014-06-25 10:34:47,021 [main] INFO  (DfOldClassHandler#info():886) - }
2014-06-25 10:34:47,021 [main] INFO  (Database#info():2577) - public void parseTableClass() {
2014-06-25 10:34:47,022 [main] INFO  (Database#info():2577) -     parse('login');
2014-06-25 10:34:47,315 [main] INFO  (Database#info():2577) -     parse('member');
2014-06-25 10:34:47,642 [main] INFO  (Database#info():2577) -     parse('member_security');
2014-06-25 10:34:47,845 [main] INFO  (Database#info():2577) -     parse('member_withdraw');
2014-06-25 10:34:47,996 [main] INFO  (Database#info():2577) -     parse('tweet');
2014-06-25 10:34:48,126 [main] INFO  (Database#info():2577) - }
2014-06-25 10:34:48,127 [main] INFO  (Database#info():2577) -  
2014-06-25 10:34:48,159 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-25 10:34:48,169 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s778ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Generate}
2014-06-25 10:34:49,617 [main] INFO  (DfOutsideSqlTestTask#begin():72) - +------------------------------------------+
2014-06-25 10:34:49,621 [main] INFO  (DfOutsideSqlTestTask#begin():73) - |                                          |
2014-06-25 10:34:49,621 [main] INFO  (DfOutsideSqlTestTask#begin():74) - |              OutsideSqlTest              |
2014-06-25 10:34:49,622 [main] INFO  (DfOutsideSqlTestTask#begin():75) - |                                          |
2014-06-25 10:34:49,623 [main] INFO  (DfOutsideSqlTestTask#begin():76) - +------------------------------------------+
2014-06-25 10:34:49,684 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-25 10:34:49,685 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-25 10:34:49,686 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-25 10:34:49,687 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-25 10:34:49,746 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-25 10:34:49,753 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s131ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2014-06-25 10:34:50,785 [main] INFO  (DfSql2EntityTask#begin():100) - +------------------------------------------+
2014-06-25 10:34:50,788 [main] INFO  (DfSql2EntityTask#begin():101) - |                                          |
2014-06-25 10:34:50,788 [main] INFO  (DfSql2EntityTask#begin():102) - |                Sql2Entity                |
2014-06-25 10:34:50,789 [main] INFO  (DfSql2EntityTask#begin():103) - |                                          |
2014-06-25 10:34:50,790 [main] INFO  (DfSql2EntityTask#begin():104) - +------------------------------------------+
2014-06-25 10:34:50,832 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-25 10:34:50,832 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-25 10:34:50,833 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-25 10:34:50,834 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-25 10:34:50,852 [main] INFO  (DfSql2EntityTask#setupControlTemplate():170) - 
2014-06-25 10:34:50,853 [main] INFO  (DfSql2EntityTask#setupControlTemplate():171) - ...Using Java control: om/ControlSql2EntityJava.vm
2014-06-25 10:34:50,860 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-25 10:34:50,911 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-25 10:34:51,063 [main] INFO  (DfSql2EntityTask#initControlContext():301) - 
2014-06-25 10:34:51,064 [main] INFO  (DfSql2EntityTask#initControlContext():302) - ...Preparing generation of customize-entities and parameter-beans
2014-06-25 10:34:51,064 [main] INFO  (DfSql2EntityTask#initControlContext():303) - * * * * * * * * * *
2014-06-25 10:34:51,066 [main] INFO  (DfSql2EntityTask#initControlContext():304) - * CustomizeEntity *
2014-06-25 10:34:51,067 [main] INFO  (DfSql2EntityTask#initControlContext():305) - * * * * * * * * * *
2014-06-25 10:34:51,069 [main] INFO  (DfSql2EntityTask#showParameterBean():871) - * * * * * * * * *
2014-06-25 10:34:51,070 [main] INFO  (DfSql2EntityTask#showParameterBean():872) - * ParameterBean *
2014-06-25 10:34:51,071 [main] INFO  (DfSql2EntityTask#showParameterBean():873) - * * * * * * * * *
2014-06-25 10:34:51,076 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlSql2EntityJava.vm", c);
2014-06-25 10:34:51,198 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1164) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2014-06-25 10:34:51,203 [main] INFO  (DfOldClassHandler#info():886) - public void deleteOldCustomizeClass() {
2014-06-25 10:34:51,218 [main] INFO  (DfOldClassHandler#info():886) - }
2014-06-25 10:34:51,218 [main] INFO  (Database#info():2577) - public void parseCustomizeEntity() {
2014-06-25 10:34:51,222 [main] INFO  (Database#info():2577) - }
2014-06-25 10:34:51,236 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():293) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2014-06-25 10:34:51,244 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-25 10:34:51,252 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s463ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2014-06-25 10:40:15,124 [main] INFO  (DfReplaceSchemaTask#begin():87) - +------------------------------------------+
2014-06-25 10:40:15,128 [main] INFO  (DfReplaceSchemaTask#begin():88) - |                                          |
2014-06-25 10:40:15,129 [main] INFO  (DfReplaceSchemaTask#begin():89) - |              ReplaceSchema               |
2014-06-25 10:40:15,150 [main] INFO  (DfReplaceSchemaTask#begin():97) - |                                          |
2014-06-25 10:40:15,151 [main] INFO  (DfReplaceSchemaTask#begin():98) - +------------------------------------------+
2014-06-25 10:40:15,153 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():329) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2014-06-25 10:40:16,712 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-25 10:40:16,713 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-25 10:40:16,714 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-25 10:40:16,715 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-25 10:40:16,736 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-25 10:40:17,009 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-25 10:40:17,010 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-25 10:40:17,032 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():207) - 
2014-06-25 10:40:17,033 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():208) - * * * * * * * * * * *
2014-06-25 10:40:17,034 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():209) - *                   *
2014-06-25 10:40:17,035 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():210) - * Initialize Schema *
2014-06-25 10:40:17,036 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():211) - *                   *
2014-06-25 10:40:17,038 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():212) - * * * * * * * * * * *
2014-06-25 10:40:17,057 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-25 10:40:17,058 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-25 10:40:17,059 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-25 10:40:17,105 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table login
2014-06-25 10:40:17,135 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_security
2014-06-25 10:40:17,171 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_withdraw
2014-06-25 10:40:17,201 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table tweet
2014-06-25 10:40:17,214 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table login drop foreign key login_ibfk_1
2014-06-25 10:40:17,229 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_security drop foreign key member_security_ibfk_1
2014-06-25 10:40:17,254 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_withdraw drop foreign key member_withdraw_ibfk_1
2014-06-25 10:40:17,263 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table tweet drop foreign key tweet_ibfk_1
2014-06-25 10:40:17,273 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table login
2014-06-25 10:40:17,290 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member
2014-06-25 10:40:17,303 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_security
2014-06-25 10:40:17,315 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_withdraw
2014-06-25 10:40:17,326 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table tweet
2014-06-25 10:40:17,368 [main] INFO  (DfCreateSchemaProcess#createSchema():244) - 
2014-06-25 10:40:17,369 [main] INFO  (DfCreateSchemaProcess#createSchema():245) - * * * * * * * * *
2014-06-25 10:40:17,369 [main] INFO  (DfCreateSchemaProcess#createSchema():246) - *               *
2014-06-25 10:40:17,371 [main] INFO  (DfCreateSchemaProcess#createSchema():247) - * Create Schema *
2014-06-25 10:40:17,372 [main] INFO  (DfCreateSchemaProcess#createSchema():248) - *               *
2014-06-25 10:40:17,374 [main] INFO  (DfCreateSchemaProcess#createSchema():249) - * * * * * * * * *
2014-06-25 10:40:17,380 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-00-system.sql
2014-06-25 10:40:17,384 [main] INFO  (DfReplaceSchemaProperties#checkTargetEnvType():277) - ...Checking envType: ut in [ut]
2014-06-25 10:40:17,385 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:checkEnv(ut)#

-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database twitter
2014-06-25 10:40:17,393 [main] INFO  (DfCreateSchemaProcess$1#dispatch():273) - ...Creating a connection to system
2014-06-25 10:40:17,396 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():514) - ...Creating a connection for additional user: root
2014-06-25 10:40:17,408 [main] INFO  (DfCreateSchemaProcess$1#dispatch():299) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2014-06-25 10:40:17,409 [main] INFO  (DfCreateSchemaProcess$1#dispatch():301) -  -> Can't create database 'twitter'; database exists
2014-06-25 10:40:17,411 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():411) - ...Reviving the user 'system' until the end of this SQL file
2014-06-25 10:40:17,412 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on twitter.*
  to twitter@localhost identified by 'twitter'
2014-06-25 10:40:17,419 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2014-06-25 10:40:17,421 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2014-06-25 10:40:17,422 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-10-basic.sql
2014-06-25 10:40:17,423 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():348) - ...Saying good-bye to the user 'system' again
2014-06-25 10:40:17,424 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():352) - ...Clearing revived users
2014-06-25 10:40:17,426 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():359) - ...Coming back to the main user from the user 'system'
2014-06-25 10:40:17,429 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE LOGIN
(
	LOGIN_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ログインID : ログインした瞬間のID
',
	LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	PRIMARY KEY (LOGIN_ID)
) COMMENT = 'ログイン'
2014-06-25 10:40:17,474 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER
(
	MEMBER_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員のID
',
	EMAIL_ADDRESS VARCHAR(100) NOT NULL UNIQUE COMMENT 'メールアドレス : 会員のメールアドレス',
	USER_NAME VARCHAR(50) NOT NULL UNIQUE COMMENT '会員ユーザ名 : 会員のユーザ名',
	UPDATE_DATETIME DATETIME COMMENT '更新日時',
	BIRTHDATE DATE COMMENT '生年月日 : 会員の生年月日',
	PROFILE VARCHAR(200) COMMENT 'プロフィール',
	NAME VARCHAR(50) NOT NULL COMMENT '名前',
	REGESTER_DATETIME DATETIME NOT NULL COMMENT '登録日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員'
2014-06-25 10:40:17,535 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PASSWORD VARCHAR(50) NOT NULL COMMENT 'パスワード',
	PASSWORD_UPDATE_DATETIME DATETIME COMMENT 'パスワード更新日時',
	PASSWORD_REGESTERATION_DATETIME DATETIME NOT NULL COMMENT 'パスワード登録日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員セキュリティ'
2014-06-25 10:40:17,570 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_WITHDRAW
(
	WITHDRAWAL_REASON_ID INT COMMENT '退会理由ID : 会員の退会理由ID',
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト',
	WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT 'withdrawal_datetime : 退会日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員退会'
2014-06-25 10:40:17,609 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	TWEET_DATETIME DATETIME NOT NULL COMMENT 'TWEET日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-06-25 10:40:17,641 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-25 10:40:17,703 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-25 10:40:17,766 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_WITHDRAW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-25 10:40:17,838 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-25 10:40:17,919 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=9 failure=0
2014-06-25 10:40:17,920 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=11 failure=0 (in 2 files)
2014-06-25 10:40:17,920 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-06-25 10:40:17,966 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-06-25 10:40:17,967 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-06-25 10:40:17,967 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-06-25 10:40:17,969 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-06-25 10:40:17,970 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-06-25 10:40:17,971 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-06-25 10:40:17,997 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-06-25 10:40:17,997 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-06-25 10:40:17,998 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-06-25 10:40:18,314 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-25 10:40:18,315 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-25 10:40:18,315 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-25 10:40:18,371 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{1, Stojkovic@gmail.com, Pixy, Example, 1965/03/03, 2014-06-24 00:00:00.0, 2014-06-25 10:40:18.37}
2014-06-25 10:40:18,425 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{2, Savicevic@gmail.com, Genius, Tom, 1966/09/15, 2014-06-25 00:00:00.0, 2014-06-25 10:40:18.425}
2014-06-25 10:40:18,427 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{3, Mijatovic@gmail.com, Mijato, Raven, null, 2014-06-26 00:00:00.0, 2014-06-25 10:40:18.427}
2014-06-25 10:40:18,428 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{4, Stankovic@gmail.com, Stanko, Example, 1978/09/11, 2014-06-27 00:00:00.0, 2014-06-25 10:40:18.428}
2014-06-25 10:40:18,429 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{5, Milosevic@gmail.com, Milose, Example, null, 2014-06-28 00:00:00.0, 2014-06-25 10:40:18.429}
2014-06-25 10:40:18,430 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{6, Mihajlovic@gmail.com, FreeKick, Example, 1969/02/20, 2014-06-29 00:00:00.0, 2014-06-25 10:40:18.43}
2014-06-25 10:40:18,432 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{7, アカギ@gmail.com, Akagi, Example, null, 2014-06-30 00:00:00.0, 2014-06-25 10:40:18.432}
2014-06-25 10:40:18,434 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{8, Kezman@gmial.com, RedCard, Example, null, 2014-07-01 00:00:00.0, 2014-06-25 10:40:18.434}
2014-06-25 10:40:18,435 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{9, Maslovar@gmail.com, JEFUnited, Example, 1967/02/20, 2014-07-02 00:00:00.0, 2014-06-25 10:40:18.435}
2014-06-25 10:40:18,437 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{10, 諸葛亮孔明@gmail.com, ShokatsuGoGo, Example, null, 2014-07-03 00:00:00.0, 2014-06-25 10:40:18.437}
2014-06-25 10:40:18,440 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{11, Boban@gmail.com, Boban, Example, 1968/10/08, 2014-07-04 00:00:00.0, 2014-06-25 10:40:18.44}
2014-06-25 10:40:18,442 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{12, Suker@gmail.com, Suker, Example, 1968/01/01, 2014-07-05 00:00:00.0, 2014-06-25 10:40:18.442}
2014-06-25 10:40:18,443 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{13, Jarni@gmail.com, Jarni, Example, 1968/10/26, 2014-07-06 00:00:00.0, 2014-06-25 10:40:18.443}
2014-06-25 10:40:18,444 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{14, Boksic@gmail.com, Boksic, Example, 1970/01/21, 2014-07-07 00:00:00.0, 2014-06-25 10:40:18.444}
2014-06-25 10:40:18,446 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{15, Prosinecki@gmail.com, Prosinecki, Example, 1969/01/12, 2014-07-08 00:00:00.0, 2014-06-25 10:40:18.446}
2014-06-25 10:40:18,447 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{16, RobeltKovac@gmail.com, RobeltKovac, Example, null, 2014-07-09 00:00:00.0, 2014-06-25 10:40:18.447}
2014-06-25 10:40:18,448 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{17, NikoKovac@gmail.com, NikoKovac, Example, null, 2014-07-10 00:00:00.0, 2014-06-25 10:40:18.448}
2014-06-25 10:40:18,449 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{18, Jovanovic@gmail.com, Jovano, Example, 1981/04/18, 2014-07-11 00:00:00.0, 2014-06-25 10:40:18.449}
2014-06-25 10:40:18,451 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{19, Milko@gmail.com, Milko, Example, 1974/09/10, 2014-07-12 00:00:00.0, 2014-06-25 10:40:18.451}
2014-06-25 10:40:18,453 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{20, 諸葛瑾子瑜@gmail.com, ShokatsuKinKin, Example, null, 2014-07-13 00:00:00.0, 2014-06-25 10:40:18.453}
2014-06-25 10:40:18,471 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 20 rows are loaded to MEMBER
2014-06-25 10:40:18,474 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 3, 2006/12/24 23:59:59}
2014-06-25 10:40:18,476 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 6, 2007/11/11 16:16:16}
2014-06-25 10:40:18,477 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{3, 1, 2006/12/23 22:56:29}
2014-06-25 10:40:18,478 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{4, 6, 2007/11/01 02:13:00}
2014-06-25 10:40:18,479 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{5, 7, 2006/05/24 23:12:59}
2014-06-25 10:40:18,480 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{6, 6, 2005/11/11 16:32:01}
2014-06-25 10:40:18,482 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{7, 6, 2006/01/28 23:59:59}
2014-06-25 10:40:18,483 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{8, 6, 2007/11/09 16:23:00}
2014-06-25 10:40:18,484 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{9, 8, 2006/12/22 23:59:59}
2014-06-25 10:40:18,486 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{10, 6, 2007/11/11 09:01:00}
2014-06-25 10:40:18,487 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{11, 1, 2006/12/23 23:59:59}
2014-06-25 10:40:18,489 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{12, 9, 2007/11/15 12:43:00}
2014-06-25 10:40:18,490 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{13, 10, 2006/12/24 23:59:59}
2014-06-25 10:40:18,492 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{14, 6, 2007/04/01 16:23:01}
2014-06-25 10:40:18,493 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{15, 7, 2006/12/24 23:59:20}
2014-06-25 10:40:18,494 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{16, 6, 2007/05/01 12:23:02}
2014-06-25 10:40:18,496 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{17, 7, 2006/12/24 23:59:21}
2014-06-25 10:40:18,497 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{18, 6, 2007/06/11 17:23:03}
2014-06-25 10:40:18,498 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{19, 4, 2006/12/24 23:59:22}
2014-06-25 10:40:18,500 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{20, 3, 2007/11/01 16:12:04}
2014-06-25 10:40:18,501 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{21, 11, 2006/12/24 23:59:23}
2014-06-25 10:40:18,502 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{22, 1, 2007/11/01 16:23:05}
2014-06-25 10:40:18,504 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{23, 9, 2006/12/24 23:59:24}
2014-06-25 10:40:18,505 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{24, 8, 2007/11/01 16:23:06}
2014-06-25 10:40:18,507 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{25, 7, 2007/12/24 11:59:25}
2014-06-25 10:40:18,508 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{26, 6, 2007/06/21 01:23:57}
2014-06-25 10:40:18,510 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{27, 5, 2006/12/24 23:59:26}
2014-06-25 10:40:18,511 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{28, 3, 2007/11/01 16:23:08}
2014-06-25 10:40:18,513 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{29, 3, 2006/12/24 23:59:27}
2014-06-25 10:40:18,514 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{30, 10, 2007/11/01 16:23:09}
2014-06-25 10:40:18,516 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-25 10:40:18,530 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 30 rows are loaded to LOGIN
2014-06-25 10:40:18,531 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014/06/23, null}
2014-06-25 10:40:18,532 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014/06/24, null}
2014-06-25 10:40:18,534 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{3, ccc, 2014/06/25, 2014/06/25}
2014-06-25 10:40:18,535 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{4, ddd, 2014/06/26, null}
2014-06-25 10:40:18,536 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{5, eee2, 2014/06/27, null}
2014-06-25 10:40:18,537 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{6, fff, 2014/06/28, null}
2014-06-25 10:40:18,538 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{7, ggg3, 2014/06/29, 2014/06/25}
2014-06-25 10:40:18,540 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{8, hhh555, 2014/06/30, null}
2014-06-25 10:40:18,542 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{9, iii, 2014/07/01, 2014/06/25}
2014-06-25 10:40:18,543 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{10, jjj, 2014/07/02, null}
2014-06-25 10:40:18,544 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-25 10:40:18,555 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to MEMBER_SECURITY
2014-06-25 10:40:18,557 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 2013-06-13 00:00:00.0}
2014-06-25 10:40:18,559 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{2, 2345, 清君頼りになるー！, 2013-06-14 00:00:00.0}
2014-06-25 10:40:18,561 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{3, 3456, GLD, 2013-06-15 00:00:00.0}
2014-06-25 10:40:18,562 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{4, 875, BRZ, 2013-06-16 00:00:00.0}
2014-06-25 10:40:18,563 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{5, 1111, BRZ, 2013-06-17 00:00:00.0}
2014-06-25 10:40:18,565 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{6, 5422, SIL, 2013-06-18 00:00:00.0}
2014-06-25 10:40:18,566 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{7, 24678, SIL, 2013-06-19 00:00:00.0}
2014-06-25 10:40:18,567 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{8, 234, SIL, 2013-06-20 00:00:00.0}
2014-06-25 10:40:18,568 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{9, 3, SIL, 2013-06-21 00:00:00.0}
2014-06-25 10:40:18,570 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{10, 98765, PLT, 2013-06-22 00:00:00.0}
2014-06-25 10:40:18,571 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-25 10:40:18,579 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to TWEET
2014-06-25 10:40:18,580 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{3, 1, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123}
2014-06-25 10:40:18,583 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{6, 1, null, 2007/11/11 16:00:00.456}
2014-06-25 10:40:18,584 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{13, 2, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789}
2014-06-25 10:40:18,586 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{16, 3, コバチが２人いるため, 2007/11/13 16:00:00.456}
2014-06-25 10:40:18,597 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 4 rows are loaded to MEMBER_WITHDRAW
2014-06-25 10:40:18,600 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():379) - ...Checking implicit set of classification
2014-06-25 10:40:18,615 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - 
2014-06-25 10:40:18,615 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * * * * * * * **
2014-06-25 10:40:18,616 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2014-06-25 10:40:18,617 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * Take Finally *
2014-06-25 10:40:18,619 [main] INFO  (DfTakeFinallyProcess#takeFinally():225) - *              *
2014-06-25 10:40:18,620 [main] INFO  (DfTakeFinallyProcess#takeFinally():226) - * * * * * * * **
2014-06-25 10:40:18,634 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: take-finally.sql
2014-06-25 10:40:18,637 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2014-06-25 10:40:18,638 [main] INFO  (DfSqlFileFireMan#fire():90) - {Take Finally}: success=0 failure=0 (in 1 files)
2014-06-25 10:40:18,641 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-25 10:40:18,647 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m03s519ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=11 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=1
  (ut)
  o 20-member.xls

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-06-25 10:40:19,676 [main] INFO  (TorqueJDBCTransformTask#begin():100) - +------------------------------------------+
2014-06-25 10:40:19,679 [main] INFO  (TorqueJDBCTransformTask#begin():101) - |                                          |
2014-06-25 10:40:19,680 [main] INFO  (TorqueJDBCTransformTask#begin():102) - |                   JDBC                   |
2014-06-25 10:40:19,680 [main] INFO  (TorqueJDBCTransformTask#begin():103) - |                                          |
2014-06-25 10:40:19,682 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2014-06-25 10:40:19,726 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-25 10:40:19,726 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-25 10:40:19,727 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-25 10:40:19,728 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-25 10:40:19,774 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2014-06-25 10:40:19,775 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2014-06-25 10:40:19,775 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1469) - ...Loading previous schema (schema diff process)
2014-06-25 10:40:19,786 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-25 10:40:19,858 [main] INFO  (DfSchemaXmlSerializer#generateXML():361) - ...Getting DB connection
2014-06-25 10:40:19,876 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-25 10:40:20,076 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-25 10:40:20,076 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-25 10:40:20,079 [main] INFO  (DfSchemaXmlSerializer#generateXML():364) - ...Getting DB meta data
2014-06-25 10:40:20,081 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-25 10:40:20,081 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-25 10:40:20,082 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-25 10:40:20,095 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2014-06-25 10:40:20,098 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2014-06-25 10:40:20,111 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - 
2014-06-25 10:40:20,112 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2014-06-25 10:40:20,112 [main] INFO  (DfSchemaXmlSerializer#processTable():423) - $ [Table List]
2014-06-25 10:40:20,114 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.login(TABLE) // ログイン
2014-06-25 10:40:20,150 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member(TABLE) // 会員
2014-06-25 10:40:20,164 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_security(TABLE) // 会員セキュリティ
2014-06-25 10:40:20,178 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_withdraw(TABLE) // 会員退会
2014-06-25 10:40:20,191 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.tweet(TABLE) // TWEET
2014-06-25 10:40:20,202 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 
2014-06-25 10:40:20,203 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ [Table Count]
2014-06-25 10:40:20,204 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ 5
2014-06-25 10:40:20,205 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - $ = = = = = = = = = =/
2014-06-25 10:40:20,207 [main] INFO  (DfSchemaXmlSerializer#processTable():439) - 
2014-06-25 10:40:20,210 [main] INFO  (DfSchemaXmlSerializer#processSequence():799) - ...Getting sequences
2014-06-25 10:40:20,215 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2014-06-25 10:40:20,216 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-twitter.xml
2014-06-25 10:40:20,216 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2014-06-25 10:40:20,235 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1487) - ...Loading next schema (schema diff process)
2014-06-25 10:40:20,237 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-25 10:40:20,281 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1492) -  -> different from previous (schema diff)
2014-06-25 10:40:20,283 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1494) - ...Serializing schema-diff:
2014-06-25 10:40:20,283 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1495) -   filePath = ./schema/project-history-twitter.diffmap
2014-06-25 10:40:20,301 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-25 10:40:20,309 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s627ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2014-06-25 10:40:21,355 [main] INFO  (TorqueDocumentationTask#begin():171) - +------------------------------------------+
2014-06-25 10:40:21,359 [main] INFO  (TorqueDocumentationTask#begin():172) - |                                          |
2014-06-25 10:40:21,361 [main] INFO  (TorqueDocumentationTask#begin():173) - |                   Doc                    |
2014-06-25 10:40:21,362 [main] INFO  (TorqueDocumentationTask#begin():181) - |                                          |
2014-06-25 10:40:21,363 [main] INFO  (TorqueDocumentationTask#begin():182) - +------------------------------------------+
2014-06-25 10:40:21,424 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-25 10:40:21,425 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-25 10:40:21,426 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-25 10:40:21,427 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-25 10:40:21,431 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():242) - 
2014-06-25 10:40:21,432 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():243) - * * * * * * * * * * *
2014-06-25 10:40:21,432 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():244) - *                   *
2014-06-25 10:40:21,436 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():245) - *    Schema HTML    *
2014-06-25 10:40:21,436 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - *                   *
2014-06-25 10:40:21,438 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2014-06-25 10:40:21,724 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-25 10:40:21,816 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("doc/ControlDocument.vm", c);
2014-06-25 10:40:21,921 [main] INFO  (Database#doEnableDocumentOutputDirectory():1180) - ...Setting up documentOutputDirectory: ./output/doc
2014-06-25 10:40:21,930 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-25 10:40:21,931 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-25 10:40:21,935 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-25 10:40:21,937 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-25 10:40:21,938 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-25 10:40:21,942 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-25 10:40:21,945 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-25 10:40:21,946 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-25 10:40:21,949 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-25 10:40:21,960 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():150) - ...Loading schema history
2014-06-25 10:40:22,000 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():154) -  -> found history: count=7
2014-06-25 10:40:22,213 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-25 10:40:22,230 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s873ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Doc}
2014-06-25 10:40:25,320 [main] INFO  (TorqueDataModelTask#begin():105) - +------------------------------------------+
2014-06-25 10:40:25,323 [main] INFO  (TorqueDataModelTask#begin():106) - |                                          |
2014-06-25 10:40:25,323 [main] INFO  (TorqueDataModelTask#begin():107) - |                 Generate                 |
2014-06-25 10:40:25,324 [main] INFO  (TorqueDataModelTask#begin():108) - |                                          |
2014-06-25 10:40:25,325 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2014-06-25 10:40:25,367 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-25 10:40:25,367 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-25 10:40:25,368 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-25 10:40:25,369 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-25 10:40:25,393 [main] INFO  (TorqueDataModelTask#setupControlTemplate():160) - 
2014-06-25 10:40:25,393 [main] INFO  (TorqueDataModelTask#setupControlTemplate():161) - ...Using Java control: om/ControlGenerateJava.vm
2014-06-25 10:40:25,539 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-25 10:40:25,581 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlGenerateJava.vm", c);
2014-06-25 10:40:25,729 [main] INFO  (Database#doEnableGenerateOutputDirectory():1148) - ...Setting up generateOutputDirectory: ../src/main/java
2014-06-25 10:40:25,737 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-25 10:40:25,739 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-25 10:40:25,741 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-25 10:40:25,743 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-25 10:40:25,744 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-25 10:40:25,746 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-25 10:40:25,749 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-25 10:40:25,749 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-25 10:40:25,752 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-25 10:40:25,767 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - /=============================
2014-06-25 10:40:25,768 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():60) - ...Initializing include query.
2014-06-25 10:40:25,769 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - String
2014-06-25 10:40:25,770 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Number
2014-06-25 10:40:25,771 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Date
2014-06-25 10:40:25,774 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotEqual -> []
2014-06-25 10:40:25,775 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   InScope -> []
2014-06-25 10:40:25,777 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotInScope -> []
2014-06-25 10:40:25,779 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - OrderBy
2014-06-25 10:40:25,779 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():62) - ========/
2014-06-25 10:40:25,797 [main] INFO  (Database#info():2577) - public void parseAllCommon() {
2014-06-25 10:40:25,800 [main] INFO  (Database#info():2577) -     parse('DBCurrent');
2014-06-25 10:40:25,810 [main] INFO  (Database#info():2577) -     parse('DBFluteConfig');
2014-06-25 10:40:25,842 [main] INFO  (Database#info():2577) -     parse('DBFluteInitializer');
2014-06-25 10:40:25,849 [main] INFO  (Database#info():2577) -     parse('DBMetaInstanceHandler');
2014-06-25 10:40:25,875 [main] INFO  (Database#info():2577) -     parse('EntityDefinedCommonColumn');
2014-06-25 10:40:25,882 [main] INFO  (Database#info():2577) -     parse('ImplementedBehaviorSelector');
2014-06-25 10:40:25,887 [main] INFO  (Database#info():2577) -     parse('ImplementedCommonColumnAutoSetupper');
2014-06-25 10:40:25,893 [main] INFO  (Database#info():2577) -     parse('ImplementedInvokerAssistant');
2014-06-25 10:40:25,897 [main] INFO  (Database#info():2577) -     parse('ImplementedSqlClauseCreator');
2014-06-25 10:40:25,901 [main] INFO  (Database#info():2577) - }
2014-06-25 10:40:25,901 [main] INFO  (Database#info():2577) - public void parseContainerConfig() {
2014-06-25 10:40:25,903 [main] INFO  (Database#info():2577) -     parse('../resources/dbflute.dicon')
2014-06-25 10:40:25,911 [main] INFO  (Database#info():2577) - }
2014-06-25 10:40:25,916 [main] INFO  (DfOldClassHandler#info():886) - public void deleteOldTableClass() {
2014-06-25 10:40:25,937 [main] INFO  (DfOldClassHandler#info():886) - }
2014-06-25 10:40:25,938 [main] INFO  (Database#info():2577) - public void parseTableClass() {
2014-06-25 10:40:25,939 [main] INFO  (Database#info():2577) -     parse('login');
2014-06-25 10:40:26,237 [main] INFO  (Database#info():2577) -     parse('member');
2014-06-25 10:40:26,566 [main] INFO  (Database#info():2577) -     parse('member_security');
2014-06-25 10:40:26,762 [main] INFO  (Database#info():2577) -     parse('member_withdraw');
2014-06-25 10:40:26,942 [main] INFO  (Database#info():2577) -     parse('tweet');
2014-06-25 10:40:27,073 [main] INFO  (Database#info():2577) - }
2014-06-25 10:40:27,074 [main] INFO  (Database#info():2577) -  
2014-06-25 10:40:27,098 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-25 10:40:27,108 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s781ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Generate}
2014-06-25 10:40:28,424 [main] INFO  (DfOutsideSqlTestTask#begin():72) - +------------------------------------------+
2014-06-25 10:40:28,427 [main] INFO  (DfOutsideSqlTestTask#begin():73) - |                                          |
2014-06-25 10:40:28,427 [main] INFO  (DfOutsideSqlTestTask#begin():74) - |              OutsideSqlTest              |
2014-06-25 10:40:28,428 [main] INFO  (DfOutsideSqlTestTask#begin():75) - |                                          |
2014-06-25 10:40:28,430 [main] INFO  (DfOutsideSqlTestTask#begin():76) - +------------------------------------------+
2014-06-25 10:40:28,482 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-25 10:40:28,482 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-25 10:40:28,483 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-25 10:40:28,484 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-25 10:40:28,527 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-25 10:40:28,534 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s103ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2014-06-25 10:40:29,507 [main] INFO  (DfSql2EntityTask#begin():100) - +------------------------------------------+
2014-06-25 10:40:29,510 [main] INFO  (DfSql2EntityTask#begin():101) - |                                          |
2014-06-25 10:40:29,510 [main] INFO  (DfSql2EntityTask#begin():102) - |                Sql2Entity                |
2014-06-25 10:40:29,511 [main] INFO  (DfSql2EntityTask#begin():103) - |                                          |
2014-06-25 10:40:29,512 [main] INFO  (DfSql2EntityTask#begin():104) - +------------------------------------------+
2014-06-25 10:40:29,552 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-25 10:40:29,553 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-25 10:40:29,554 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-25 10:40:29,555 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-25 10:40:29,574 [main] INFO  (DfSql2EntityTask#setupControlTemplate():170) - 
2014-06-25 10:40:29,574 [main] INFO  (DfSql2EntityTask#setupControlTemplate():171) - ...Using Java control: om/ControlSql2EntityJava.vm
2014-06-25 10:40:29,583 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-25 10:40:29,640 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-25 10:40:29,792 [main] INFO  (DfSql2EntityTask#initControlContext():301) - 
2014-06-25 10:40:29,793 [main] INFO  (DfSql2EntityTask#initControlContext():302) - ...Preparing generation of customize-entities and parameter-beans
2014-06-25 10:40:29,793 [main] INFO  (DfSql2EntityTask#initControlContext():303) - * * * * * * * * * *
2014-06-25 10:40:29,795 [main] INFO  (DfSql2EntityTask#initControlContext():304) - * CustomizeEntity *
2014-06-25 10:40:29,796 [main] INFO  (DfSql2EntityTask#initControlContext():305) - * * * * * * * * * *
2014-06-25 10:40:29,797 [main] INFO  (DfSql2EntityTask#showParameterBean():871) - * * * * * * * * *
2014-06-25 10:40:29,799 [main] INFO  (DfSql2EntityTask#showParameterBean():872) - * ParameterBean *
2014-06-25 10:40:29,800 [main] INFO  (DfSql2EntityTask#showParameterBean():873) - * * * * * * * * *
2014-06-25 10:40:29,806 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlSql2EntityJava.vm", c);
2014-06-25 10:40:29,913 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1164) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2014-06-25 10:40:29,917 [main] INFO  (DfOldClassHandler#info():886) - public void deleteOldCustomizeClass() {
2014-06-25 10:40:29,930 [main] INFO  (DfOldClassHandler#info():886) - }
2014-06-25 10:40:29,931 [main] INFO  (Database#info():2577) - public void parseCustomizeEntity() {
2014-06-25 10:40:29,934 [main] INFO  (Database#info():2577) - }
2014-06-25 10:40:29,946 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():293) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2014-06-25 10:40:29,955 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-25 10:40:29,961 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s451ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2014-06-25 14:31:03,299 [main] INFO  (DfReplaceSchemaTask#begin():87) - +------------------------------------------+
2014-06-25 14:31:03,303 [main] INFO  (DfReplaceSchemaTask#begin():88) - |                                          |
2014-06-25 14:31:03,304 [main] INFO  (DfReplaceSchemaTask#begin():89) - |              ReplaceSchema               |
2014-06-25 14:31:03,325 [main] INFO  (DfReplaceSchemaTask#begin():97) - |                                          |
2014-06-25 14:31:03,325 [main] INFO  (DfReplaceSchemaTask#begin():98) - +------------------------------------------+
2014-06-25 14:31:03,327 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():329) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2014-06-25 14:31:05,069 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-25 14:31:05,072 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-25 14:31:05,076 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-25 14:31:05,078 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-25 14:31:05,090 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-25 14:31:05,384 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-25 14:31:05,385 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-25 14:31:05,415 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():207) - 
2014-06-25 14:31:05,416 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():208) - * * * * * * * * * * *
2014-06-25 14:31:05,417 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():209) - *                   *
2014-06-25 14:31:05,418 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():210) - * Initialize Schema *
2014-06-25 14:31:05,419 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():211) - *                   *
2014-06-25 14:31:05,421 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():212) - * * * * * * * * * * *
2014-06-25 14:31:05,448 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-25 14:31:05,449 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-25 14:31:05,450 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-25 14:31:05,490 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table login
2014-06-25 14:31:05,515 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_security
2014-06-25 14:31:05,547 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_withdraw
2014-06-25 14:31:05,572 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table tweet
2014-06-25 14:31:05,582 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table login drop foreign key login_ibfk_1
2014-06-25 14:31:05,602 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_security drop foreign key member_security_ibfk_1
2014-06-25 14:31:05,616 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_withdraw drop foreign key member_withdraw_ibfk_1
2014-06-25 14:31:05,626 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table tweet drop foreign key tweet_ibfk_1
2014-06-25 14:31:05,635 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table login
2014-06-25 14:31:05,650 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member
2014-06-25 14:31:05,660 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_security
2014-06-25 14:31:05,671 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_withdraw
2014-06-25 14:31:05,682 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table tweet
2014-06-25 14:31:05,720 [main] INFO  (DfCreateSchemaProcess#createSchema():244) - 
2014-06-25 14:31:05,721 [main] INFO  (DfCreateSchemaProcess#createSchema():245) - * * * * * * * * *
2014-06-25 14:31:05,721 [main] INFO  (DfCreateSchemaProcess#createSchema():246) - *               *
2014-06-25 14:31:05,723 [main] INFO  (DfCreateSchemaProcess#createSchema():247) - * Create Schema *
2014-06-25 14:31:05,724 [main] INFO  (DfCreateSchemaProcess#createSchema():248) - *               *
2014-06-25 14:31:05,725 [main] INFO  (DfCreateSchemaProcess#createSchema():249) - * * * * * * * * *
2014-06-25 14:31:05,731 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-00-system.sql
2014-06-25 14:31:05,734 [main] INFO  (DfReplaceSchemaProperties#checkTargetEnvType():277) - ...Checking envType: ut in [ut]
2014-06-25 14:31:05,735 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:checkEnv(ut)#

-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database twitter
2014-06-25 14:31:05,743 [main] INFO  (DfCreateSchemaProcess$1#dispatch():273) - ...Creating a connection to system
2014-06-25 14:31:05,746 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():514) - ...Creating a connection for additional user: root
2014-06-25 14:31:05,758 [main] INFO  (DfCreateSchemaProcess$1#dispatch():299) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2014-06-25 14:31:05,759 [main] INFO  (DfCreateSchemaProcess$1#dispatch():301) -  -> Can't create database 'twitter'; database exists
2014-06-25 14:31:05,761 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():411) - ...Reviving the user 'system' until the end of this SQL file
2014-06-25 14:31:05,762 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on twitter.*
  to twitter@localhost identified by 'twitter'
2014-06-25 14:31:05,769 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2014-06-25 14:31:05,772 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2014-06-25 14:31:05,773 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-10-basic.sql
2014-06-25 14:31:05,774 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():348) - ...Saying good-bye to the user 'system' again
2014-06-25 14:31:05,775 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():352) - ...Clearing revived users
2014-06-25 14:31:05,779 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():359) - ...Coming back to the main user from the user 'system'
2014-06-25 14:31:05,782 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FOLLOW
(
	FOLLOW_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'フォローID',
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PRIMARY KEY (FOLLOW_ID)
) COMMENT = 'フォロー'
2014-06-25 14:31:05,833 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE FOLLOWERS
(
	FOLLOWERSID INT(100) NOT NULL AUTO_INCREMENT COMMENT 'フォロワーID',
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PRIMARY KEY (FOLLOWERSID)
) COMMENT = 'フォロワー'
2014-06-25 14:31:05,886 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE LOGIN
(
	LOGIN_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ログインID : ログインした瞬間のID
',
	LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	PRIMARY KEY (LOGIN_ID)
) COMMENT = 'ログイン'
2014-06-25 14:31:05,917 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER
(
	MEMBER_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員のID
',
	EMAIL_ADDRESS VARCHAR(100) NOT NULL UNIQUE COMMENT 'メールアドレス : 会員のメールアドレス',
	USER_NAME VARCHAR(50) NOT NULL UNIQUE COMMENT '会員ユーザ名 : 会員のユーザ名',
	UPDATE_DATETIME DATETIME COMMENT '更新日時',
	BIRTHDATE DATE COMMENT '生年月日 : 会員の生年月日',
	PROFILE VARCHAR(200) COMMENT 'プロフィール',
	NAME VARCHAR(50) NOT NULL COMMENT '名前',
	REGESTER_DATETIME DATETIME NOT NULL COMMENT '登録日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員'
2014-06-25 14:31:05,984 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PASSWORD VARCHAR(50) NOT NULL COMMENT 'パスワード',
	PASSWORD_UPDATE_DATETIME DATETIME COMMENT 'パスワード更新日時',
	PASSWORD_REGESTERATION_DATETIME DATETIME NOT NULL COMMENT 'パスワード登録日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員セキュリティ'
2014-06-25 14:31:06,047 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_WITHDRAW
(
	WITHDRAWAL_REASON_ID INT COMMENT '退会理由ID : 会員の退会理由ID',
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト',
	WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT 'withdrawal_datetime : 退会日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員退会'
2014-06-25 14:31:06,091 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	TWEET_DATETIME DATETIME NOT NULL COMMENT 'TWEET日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-06-25 14:31:06,139 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FOLLOW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-25 14:31:06,227 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOWERS
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-25 14:31:06,331 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-25 14:31:06,430 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-25 14:31:06,526 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_WITHDRAW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-25 14:31:06,627 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-25 14:31:06,736 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=13 failure=0
2014-06-25 14:31:06,738 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=15 failure=0 (in 2 files)
2014-06-25 14:31:06,740 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-06-25 14:31:06,786 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-06-25 14:31:06,787 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-06-25 14:31:06,788 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-06-25 14:31:06,790 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-06-25 14:31:06,791 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-06-25 14:31:06,792 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-06-25 14:31:06,815 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-06-25 14:31:06,816 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-06-25 14:31:06,817 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-06-25 14:31:07,105 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-25 14:31:07,106 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-25 14:31:07,107 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-25 14:31:07,162 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{1, Stojkovic@gmail.com, Pixy, Example, 1965/03/03, 2014-06-24 00:00:00.0, 2014-06-25 14:31:07.161}
2014-06-25 14:31:07,210 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{2, Savicevic@gmail.com, Genius, Tom, 1966/09/15, 2014-06-25 00:00:00.0, 2014-06-25 14:31:07.21}
2014-06-25 14:31:07,212 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{3, Mijatovic@gmail.com, Mijato, Raven, null, 2014-06-26 00:00:00.0, 2014-06-25 14:31:07.211}
2014-06-25 14:31:07,213 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{4, Stankovic@gmail.com, Stanko, Example, 1978/09/11, 2014-06-27 00:00:00.0, 2014-06-25 14:31:07.213}
2014-06-25 14:31:07,214 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{5, Milosevic@gmail.com, Milose, Example, null, 2014-06-28 00:00:00.0, 2014-06-25 14:31:07.214}
2014-06-25 14:31:07,215 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{6, Mihajlovic@gmail.com, FreeKick, Example, 1969/02/20, 2014-06-29 00:00:00.0, 2014-06-25 14:31:07.215}
2014-06-25 14:31:07,217 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{7, アカギ@gmail.com, Akagi, Example, null, 2014-06-30 00:00:00.0, 2014-06-25 14:31:07.217}
2014-06-25 14:31:07,219 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{8, Kezman@gmial.com, RedCard, Example, null, 2014-07-01 00:00:00.0, 2014-06-25 14:31:07.219}
2014-06-25 14:31:07,220 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{9, Maslovar@gmail.com, JEFUnited, Example, 1967/02/20, 2014-07-02 00:00:00.0, 2014-06-25 14:31:07.22}
2014-06-25 14:31:07,222 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{10, 諸葛亮孔明@gmail.com, ShokatsuGoGo, Example, null, 2014-07-03 00:00:00.0, 2014-06-25 14:31:07.222}
2014-06-25 14:31:07,225 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{11, Boban@gmail.com, Boban, Example, 1968/10/08, 2014-07-04 00:00:00.0, 2014-06-25 14:31:07.225}
2014-06-25 14:31:07,227 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{12, Suker@gmail.com, Suker, Example, 1968/01/01, 2014-07-05 00:00:00.0, 2014-06-25 14:31:07.227}
2014-06-25 14:31:07,229 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{13, Jarni@gmail.com, Jarni, Example, 1968/10/26, 2014-07-06 00:00:00.0, 2014-06-25 14:31:07.229}
2014-06-25 14:31:07,230 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{14, Boksic@gmail.com, Boksic, Example, 1970/01/21, 2014-07-07 00:00:00.0, 2014-06-25 14:31:07.23}
2014-06-25 14:31:07,232 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{15, Prosinecki@gmail.com, Prosinecki, Example, 1969/01/12, 2014-07-08 00:00:00.0, 2014-06-25 14:31:07.232}
2014-06-25 14:31:07,233 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{16, RobeltKovac@gmail.com, RobeltKovac, Example, null, 2014-07-09 00:00:00.0, 2014-06-25 14:31:07.233}
2014-06-25 14:31:07,235 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{17, NikoKovac@gmail.com, NikoKovac, Example, null, 2014-07-10 00:00:00.0, 2014-06-25 14:31:07.235}
2014-06-25 14:31:07,236 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{18, Jovanovic@gmail.com, Jovano, Example, 1981/04/18, 2014-07-11 00:00:00.0, 2014-06-25 14:31:07.236}
2014-06-25 14:31:07,238 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{19, Milko@gmail.com, Milko, Example, 1974/09/10, 2014-07-12 00:00:00.0, 2014-06-25 14:31:07.238}
2014-06-25 14:31:07,240 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{20, 諸葛瑾子瑜@gmail.com, ShokatsuKinKin, Example, null, 2014-07-13 00:00:00.0, 2014-06-25 14:31:07.24}
2014-06-25 14:31:07,252 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 20 rows are loaded to MEMBER
2014-06-25 14:31:07,255 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 3, 2006/12/24 23:59:59}
2014-06-25 14:31:07,256 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 6, 2007/11/11 16:16:16}
2014-06-25 14:31:07,257 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{3, 1, 2006/12/23 22:56:29}
2014-06-25 14:31:07,258 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{4, 6, 2007/11/01 02:13:00}
2014-06-25 14:31:07,259 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{5, 7, 2006/05/24 23:12:59}
2014-06-25 14:31:07,261 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{6, 6, 2005/11/11 16:32:01}
2014-06-25 14:31:07,262 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{7, 6, 2006/01/28 23:59:59}
2014-06-25 14:31:07,264 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{8, 6, 2007/11/09 16:23:00}
2014-06-25 14:31:07,264 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{9, 8, 2006/12/22 23:59:59}
2014-06-25 14:31:07,266 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{10, 6, 2007/11/11 09:01:00}
2014-06-25 14:31:07,267 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{11, 1, 2006/12/23 23:59:59}
2014-06-25 14:31:07,269 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{12, 9, 2007/11/15 12:43:00}
2014-06-25 14:31:07,270 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{13, 10, 2006/12/24 23:59:59}
2014-06-25 14:31:07,271 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{14, 6, 2007/04/01 16:23:01}
2014-06-25 14:31:07,273 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{15, 7, 2006/12/24 23:59:20}
2014-06-25 14:31:07,275 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{16, 6, 2007/05/01 12:23:02}
2014-06-25 14:31:07,276 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{17, 7, 2006/12/24 23:59:21}
2014-06-25 14:31:07,278 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{18, 6, 2007/06/11 17:23:03}
2014-06-25 14:31:07,278 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{19, 4, 2006/12/24 23:59:22}
2014-06-25 14:31:07,280 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{20, 3, 2007/11/01 16:12:04}
2014-06-25 14:31:07,281 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{21, 11, 2006/12/24 23:59:23}
2014-06-25 14:31:07,282 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{22, 1, 2007/11/01 16:23:05}
2014-06-25 14:31:07,284 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{23, 9, 2006/12/24 23:59:24}
2014-06-25 14:31:07,285 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{24, 8, 2007/11/01 16:23:06}
2014-06-25 14:31:07,286 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{25, 7, 2007/12/24 11:59:25}
2014-06-25 14:31:07,288 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{26, 6, 2007/06/21 01:23:57}
2014-06-25 14:31:07,289 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{27, 5, 2006/12/24 23:59:26}
2014-06-25 14:31:07,291 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{28, 3, 2007/11/01 16:23:08}
2014-06-25 14:31:07,292 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{29, 3, 2006/12/24 23:59:27}
2014-06-25 14:31:07,293 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{30, 10, 2007/11/01 16:23:09}
2014-06-25 14:31:07,295 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-25 14:31:07,307 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 30 rows are loaded to LOGIN
2014-06-25 14:31:07,308 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014/06/23, null}
2014-06-25 14:31:07,310 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014/06/24, null}
2014-06-25 14:31:07,311 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{3, ccc, 2014/06/25, 2014/06/25}
2014-06-25 14:31:07,312 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{4, ddd, 2014/06/26, null}
2014-06-25 14:31:07,313 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{5, eee2, 2014/06/27, null}
2014-06-25 14:31:07,314 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{6, fff, 2014/06/28, null}
2014-06-25 14:31:07,316 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{7, ggg3, 2014/06/29, 2014/06/25}
2014-06-25 14:31:07,317 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{8, hhh555, 2014/06/30, null}
2014-06-25 14:31:07,318 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{9, iii, 2014/07/01, 2014/06/25}
2014-06-25 14:31:07,320 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{10, jjj, 2014/07/02, null}
2014-06-25 14:31:07,321 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-25 14:31:07,339 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to MEMBER_SECURITY
2014-06-25 14:31:07,340 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 2013-06-13 00:00:00.0}
2014-06-25 14:31:07,343 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{2, 2345, 清君頼りになるー！, 2013-06-14 00:00:00.0}
2014-06-25 14:31:07,345 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{3, 3456, GLD, 2013-06-15 00:00:00.0}
2014-06-25 14:31:07,346 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{4, 875, BRZ, 2013-06-16 00:00:00.0}
2014-06-25 14:31:07,347 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{5, 1111, BRZ, 2013-06-17 00:00:00.0}
2014-06-25 14:31:07,349 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{6, 5422, SIL, 2013-06-18 00:00:00.0}
2014-06-25 14:31:07,350 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{7, 24678, SIL, 2013-06-19 00:00:00.0}
2014-06-25 14:31:07,351 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{8, 234, SIL, 2013-06-20 00:00:00.0}
2014-06-25 14:31:07,352 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{9, 3, SIL, 2013-06-21 00:00:00.0}
2014-06-25 14:31:07,354 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{10, 98765, PLT, 2013-06-22 00:00:00.0}
2014-06-25 14:31:07,355 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-25 14:31:07,374 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to TWEET
2014-06-25 14:31:07,377 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{3, 1, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123}
2014-06-25 14:31:07,387 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{6, 1, null, 2007/11/11 16:00:00.456}
2014-06-25 14:31:07,394 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{13, 2, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789}
2014-06-25 14:31:07,404 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{16, 3, コバチが２人いるため, 2007/11/13 16:00:00.456}
2014-06-25 14:31:07,424 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 4 rows are loaded to MEMBER_WITHDRAW
2014-06-25 14:31:07,428 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():379) - ...Checking implicit set of classification
2014-06-25 14:31:07,448 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - 
2014-06-25 14:31:07,451 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * * * * * * * **
2014-06-25 14:31:07,453 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2014-06-25 14:31:07,454 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * Take Finally *
2014-06-25 14:31:07,455 [main] INFO  (DfTakeFinallyProcess#takeFinally():225) - *              *
2014-06-25 14:31:07,456 [main] INFO  (DfTakeFinallyProcess#takeFinally():226) - * * * * * * * **
2014-06-25 14:31:07,472 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: take-finally.sql
2014-06-25 14:31:07,474 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2014-06-25 14:31:07,476 [main] INFO  (DfSqlFileFireMan#fire():90) - {Take Finally}: success=0 failure=0 (in 1 files)
2014-06-25 14:31:07,479 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-25 14:31:07,485 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m04s181ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=15 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=1
  (ut)
  o 20-member.xls

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-06-25 14:31:08,386 [main] INFO  (TorqueJDBCTransformTask#begin():100) - +------------------------------------------+
2014-06-25 14:31:08,388 [main] INFO  (TorqueJDBCTransformTask#begin():101) - |                                          |
2014-06-25 14:31:08,389 [main] INFO  (TorqueJDBCTransformTask#begin():102) - |                   JDBC                   |
2014-06-25 14:31:08,389 [main] INFO  (TorqueJDBCTransformTask#begin():103) - |                                          |
2014-06-25 14:31:08,391 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2014-06-25 14:31:08,431 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-25 14:31:08,432 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-25 14:31:08,432 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-25 14:31:08,435 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-25 14:31:08,478 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2014-06-25 14:31:08,478 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2014-06-25 14:31:08,479 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1469) - ...Loading previous schema (schema diff process)
2014-06-25 14:31:08,490 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-25 14:31:08,548 [main] INFO  (DfSchemaXmlSerializer#generateXML():361) - ...Getting DB connection
2014-06-25 14:31:08,552 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-25 14:31:08,727 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-25 14:31:08,728 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-25 14:31:08,730 [main] INFO  (DfSchemaXmlSerializer#generateXML():364) - ...Getting DB meta data
2014-06-25 14:31:08,732 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-25 14:31:08,733 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-25 14:31:08,733 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-25 14:31:08,745 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2014-06-25 14:31:08,747 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2014-06-25 14:31:08,761 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - 
2014-06-25 14:31:08,761 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2014-06-25 14:31:08,762 [main] INFO  (DfSchemaXmlSerializer#processTable():423) - $ [Table List]
2014-06-25 14:31:08,763 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.follow(TABLE) // フォロー
2014-06-25 14:31:08,799 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.followers(TABLE) // フォロワー
2014-06-25 14:31:08,813 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.login(TABLE) // ログイン
2014-06-25 14:31:08,827 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member(TABLE) // 会員
2014-06-25 14:31:08,841 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_security(TABLE) // 会員セキュリティ
2014-06-25 14:31:08,854 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_withdraw(TABLE) // 会員退会
2014-06-25 14:31:08,868 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.tweet(TABLE) // TWEET
2014-06-25 14:31:08,881 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 
2014-06-25 14:31:08,882 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ [Table Count]
2014-06-25 14:31:08,882 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ 7
2014-06-25 14:31:08,884 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - $ = = = = = = = = = =/
2014-06-25 14:31:08,885 [main] INFO  (DfSchemaXmlSerializer#processTable():439) - 
2014-06-25 14:31:08,889 [main] INFO  (DfSchemaXmlSerializer#processSequence():799) - ...Getting sequences
2014-06-25 14:31:08,894 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2014-06-25 14:31:08,894 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-twitter.xml
2014-06-25 14:31:08,894 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2014-06-25 14:31:08,910 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1487) - ...Loading next schema (schema diff process)
2014-06-25 14:31:08,913 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-25 14:31:08,949 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1492) -  -> different from previous (schema diff)
2014-06-25 14:31:08,951 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1494) - ...Serializing schema-diff:
2014-06-25 14:31:08,951 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1495) -   filePath = ./schema/project-history-twitter.diffmap
2014-06-25 14:31:08,988 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-25 14:31:08,994 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s605ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2014-06-25 14:31:09,903 [main] INFO  (TorqueDocumentationTask#begin():171) - +------------------------------------------+
2014-06-25 14:31:09,907 [main] INFO  (TorqueDocumentationTask#begin():172) - |                                          |
2014-06-25 14:31:09,907 [main] INFO  (TorqueDocumentationTask#begin():173) - |                   Doc                    |
2014-06-25 14:31:09,908 [main] INFO  (TorqueDocumentationTask#begin():181) - |                                          |
2014-06-25 14:31:09,909 [main] INFO  (TorqueDocumentationTask#begin():182) - +------------------------------------------+
2014-06-25 14:31:09,967 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-25 14:31:09,968 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-25 14:31:09,968 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-25 14:31:09,970 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-25 14:31:09,973 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():242) - 
2014-06-25 14:31:09,974 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():243) - * * * * * * * * * * *
2014-06-25 14:31:09,975 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():244) - *                   *
2014-06-25 14:31:09,976 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():245) - *    Schema HTML    *
2014-06-25 14:31:09,977 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - *                   *
2014-06-25 14:31:09,979 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2014-06-25 14:31:10,139 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-25 14:31:10,200 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("doc/ControlDocument.vm", c);
2014-06-25 14:31:10,273 [main] INFO  (Database#doEnableDocumentOutputDirectory():1180) - ...Setting up documentOutputDirectory: ./output/doc
2014-06-25 14:31:10,284 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-25 14:31:10,285 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-25 14:31:10,287 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-25 14:31:10,290 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-25 14:31:10,290 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-25 14:31:10,293 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-25 14:31:10,295 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-25 14:31:10,295 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-25 14:31:10,298 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-25 14:31:10,307 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():150) - ...Loading schema history
2014-06-25 14:31:10,343 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():154) -  -> found history: count=8
2014-06-25 14:31:10,621 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-25 14:31:10,637 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s730ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Doc}
2014-06-25 14:31:13,509 [main] INFO  (TorqueDataModelTask#begin():105) - +------------------------------------------+
2014-06-25 14:31:13,512 [main] INFO  (TorqueDataModelTask#begin():106) - |                                          |
2014-06-25 14:31:13,512 [main] INFO  (TorqueDataModelTask#begin():107) - |                 Generate                 |
2014-06-25 14:31:13,513 [main] INFO  (TorqueDataModelTask#begin():108) - |                                          |
2014-06-25 14:31:13,514 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2014-06-25 14:31:13,552 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-25 14:31:13,553 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-25 14:31:13,553 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-25 14:31:13,555 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-25 14:31:13,575 [main] INFO  (TorqueDataModelTask#setupControlTemplate():160) - 
2014-06-25 14:31:13,575 [main] INFO  (TorqueDataModelTask#setupControlTemplate():161) - ...Using Java control: om/ControlGenerateJava.vm
2014-06-25 14:31:13,715 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-25 14:31:13,760 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlGenerateJava.vm", c);
2014-06-25 14:31:13,869 [main] INFO  (Database#doEnableGenerateOutputDirectory():1148) - ...Setting up generateOutputDirectory: ../src/main/java
2014-06-25 14:31:13,878 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-25 14:31:13,879 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-25 14:31:13,882 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-25 14:31:13,886 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-25 14:31:13,887 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-25 14:31:13,891 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-25 14:31:13,895 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-25 14:31:13,896 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-25 14:31:13,900 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-25 14:31:13,918 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - /=============================
2014-06-25 14:31:13,919 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():60) - ...Initializing include query.
2014-06-25 14:31:13,920 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - String
2014-06-25 14:31:13,921 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Number
2014-06-25 14:31:13,923 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Date
2014-06-25 14:31:13,925 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotEqual -> []
2014-06-25 14:31:13,926 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   InScope -> []
2014-06-25 14:31:13,927 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotInScope -> []
2014-06-25 14:31:13,929 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - OrderBy
2014-06-25 14:31:13,930 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():62) - ========/
2014-06-25 14:31:13,949 [main] INFO  (Database#info():2577) - public void parseAllCommon() {
2014-06-25 14:31:13,952 [main] INFO  (Database#info():2577) -     parse('DBCurrent');
2014-06-25 14:31:13,961 [main] INFO  (Database#info():2577) -     parse('DBFluteConfig');
2014-06-25 14:31:13,990 [main] INFO  (Database#info():2577) -     parse('DBFluteInitializer');
2014-06-25 14:31:13,996 [main] INFO  (Database#info():2577) -     parse('DBMetaInstanceHandler');
2014-06-25 14:31:14,013 [main] INFO  (Database#info():2577) -     parse('EntityDefinedCommonColumn');
2014-06-25 14:31:14,019 [main] INFO  (Database#info():2577) -     parse('ImplementedBehaviorSelector');
2014-06-25 14:31:14,024 [main] INFO  (Database#info():2577) -     parse('ImplementedCommonColumnAutoSetupper');
2014-06-25 14:31:14,030 [main] INFO  (Database#info():2577) -     parse('ImplementedInvokerAssistant');
2014-06-25 14:31:14,035 [main] INFO  (Database#info():2577) -     parse('ImplementedSqlClauseCreator');
2014-06-25 14:31:14,039 [main] INFO  (Database#info():2577) - }
2014-06-25 14:31:14,039 [main] INFO  (Database#info():2577) - public void parseContainerConfig() {
2014-06-25 14:31:14,041 [main] INFO  (Database#info():2577) -     parse('../resources/dbflute.dicon')
2014-06-25 14:31:14,049 [main] INFO  (Database#info():2577) - }
2014-06-25 14:31:14,054 [main] INFO  (DfOldClassHandler#info():886) - public void deleteOldTableClass() {
2014-06-25 14:31:14,074 [main] INFO  (DfOldClassHandler#info():886) - }
2014-06-25 14:31:14,075 [main] INFO  (Database#info():2577) - public void parseTableClass() {
2014-06-25 14:31:14,076 [main] INFO  (Database#info():2577) -     parse('follow');
2014-06-25 14:31:14,350 [main] INFO  (Database#info():2577) -     parse('followers');
2014-06-25 14:31:14,530 [main] INFO  (Database#info():2577) -     parse('login');
2014-06-25 14:31:14,721 [main] INFO  (Database#info():2577) -     parse('member');
2014-06-25 14:31:14,985 [main] INFO  (Database#info():2577) -     parse('member_security');
2014-06-25 14:31:15,087 [main] INFO  (Database#info():2577) -     parse('member_withdraw');
2014-06-25 14:31:15,188 [main] INFO  (Database#info():2577) -     parse('tweet');
2014-06-25 14:31:15,298 [main] INFO  (Database#info():2577) - }
2014-06-25 14:31:15,298 [main] INFO  (Database#info():2577) -  
2014-06-25 14:31:15,337 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-25 14:31:15,343 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s831ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Generate}
2014-06-25 14:31:16,663 [main] INFO  (DfOutsideSqlTestTask#begin():72) - +------------------------------------------+
2014-06-25 14:31:16,665 [main] INFO  (DfOutsideSqlTestTask#begin():73) - |                                          |
2014-06-25 14:31:16,666 [main] INFO  (DfOutsideSqlTestTask#begin():74) - |              OutsideSqlTest              |
2014-06-25 14:31:16,667 [main] INFO  (DfOutsideSqlTestTask#begin():75) - |                                          |
2014-06-25 14:31:16,668 [main] INFO  (DfOutsideSqlTestTask#begin():76) - +------------------------------------------+
2014-06-25 14:31:16,716 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-25 14:31:16,716 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-25 14:31:16,717 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-25 14:31:16,719 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-25 14:31:16,759 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-25 14:31:16,765 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s098ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2014-06-25 14:31:17,726 [main] INFO  (DfSql2EntityTask#begin():100) - +------------------------------------------+
2014-06-25 14:31:17,730 [main] INFO  (DfSql2EntityTask#begin():101) - |                                          |
2014-06-25 14:31:17,730 [main] INFO  (DfSql2EntityTask#begin():102) - |                Sql2Entity                |
2014-06-25 14:31:17,731 [main] INFO  (DfSql2EntityTask#begin():103) - |                                          |
2014-06-25 14:31:17,733 [main] INFO  (DfSql2EntityTask#begin():104) - +------------------------------------------+
2014-06-25 14:31:17,790 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-25 14:31:17,791 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-25 14:31:17,791 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-25 14:31:17,793 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-25 14:31:17,813 [main] INFO  (DfSql2EntityTask#setupControlTemplate():170) - 
2014-06-25 14:31:17,813 [main] INFO  (DfSql2EntityTask#setupControlTemplate():171) - ...Using Java control: om/ControlSql2EntityJava.vm
2014-06-25 14:31:17,822 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-25 14:31:17,879 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-25 14:31:18,060 [main] INFO  (DfSql2EntityTask#initControlContext():301) - 
2014-06-25 14:31:18,061 [main] INFO  (DfSql2EntityTask#initControlContext():302) - ...Preparing generation of customize-entities and parameter-beans
2014-06-25 14:31:18,062 [main] INFO  (DfSql2EntityTask#initControlContext():303) - * * * * * * * * * *
2014-06-25 14:31:18,063 [main] INFO  (DfSql2EntityTask#initControlContext():304) - * CustomizeEntity *
2014-06-25 14:31:18,064 [main] INFO  (DfSql2EntityTask#initControlContext():305) - * * * * * * * * * *
2014-06-25 14:31:18,066 [main] INFO  (DfSql2EntityTask#showParameterBean():871) - * * * * * * * * *
2014-06-25 14:31:18,067 [main] INFO  (DfSql2EntityTask#showParameterBean():872) - * ParameterBean *
2014-06-25 14:31:18,068 [main] INFO  (DfSql2EntityTask#showParameterBean():873) - * * * * * * * * *
2014-06-25 14:31:18,074 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlSql2EntityJava.vm", c);
2014-06-25 14:31:18,187 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1164) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2014-06-25 14:31:18,190 [main] INFO  (DfOldClassHandler#info():886) - public void deleteOldCustomizeClass() {
2014-06-25 14:31:18,200 [main] INFO  (DfOldClassHandler#info():886) - }
2014-06-25 14:31:18,200 [main] INFO  (Database#info():2577) - public void parseCustomizeEntity() {
2014-06-25 14:31:18,203 [main] INFO  (Database#info():2577) - }
2014-06-25 14:31:18,215 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():293) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2014-06-25 14:31:18,223 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-25 14:31:18,229 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s500ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2014-06-25 14:34:18,495 [main] INFO  (DfReplaceSchemaTask#begin():87) - +------------------------------------------+
2014-06-25 14:34:18,498 [main] INFO  (DfReplaceSchemaTask#begin():88) - |                                          |
2014-06-25 14:34:18,499 [main] INFO  (DfReplaceSchemaTask#begin():89) - |              ReplaceSchema               |
2014-06-25 14:34:18,516 [main] INFO  (DfReplaceSchemaTask#begin():97) - |                                          |
2014-06-25 14:34:18,517 [main] INFO  (DfReplaceSchemaTask#begin():98) - +------------------------------------------+
2014-06-25 14:34:18,519 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():329) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2014-06-25 14:34:20,569 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-25 14:34:20,572 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-25 14:34:20,575 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-25 14:34:20,577 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-25 14:34:20,597 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-25 14:34:20,827 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-25 14:34:20,828 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-25 14:34:20,847 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():207) - 
2014-06-25 14:34:20,848 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():208) - * * * * * * * * * * *
2014-06-25 14:34:20,848 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():209) - *                   *
2014-06-25 14:34:20,850 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():210) - * Initialize Schema *
2014-06-25 14:34:20,851 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():211) - *                   *
2014-06-25 14:34:20,853 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():212) - * * * * * * * * * * *
2014-06-25 14:34:20,870 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-25 14:34:20,871 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-25 14:34:20,872 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-25 14:34:20,932 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table follow
2014-06-25 14:34:20,972 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table followers
2014-06-25 14:34:20,999 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table login
2014-06-25 14:34:21,030 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_security
2014-06-25 14:34:21,075 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_withdraw
2014-06-25 14:34:21,113 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table tweet
2014-06-25 14:34:21,162 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_1
2014-06-25 14:34:21,173 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table followers drop foreign key followers_ibfk_1
2014-06-25 14:34:21,182 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table login drop foreign key login_ibfk_1
2014-06-25 14:34:21,192 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_security drop foreign key member_security_ibfk_1
2014-06-25 14:34:21,203 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_withdraw drop foreign key member_withdraw_ibfk_1
2014-06-25 14:34:21,214 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table tweet drop foreign key tweet_ibfk_1
2014-06-25 14:34:21,230 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table follow
2014-06-25 14:34:21,242 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table followers
2014-06-25 14:34:21,257 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table login
2014-06-25 14:34:21,275 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member
2014-06-25 14:34:21,292 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_security
2014-06-25 14:34:21,315 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_withdraw
2014-06-25 14:34:21,340 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table tweet
2014-06-25 14:34:21,394 [main] INFO  (DfCreateSchemaProcess#createSchema():244) - 
2014-06-25 14:34:21,395 [main] INFO  (DfCreateSchemaProcess#createSchema():245) - * * * * * * * * *
2014-06-25 14:34:21,395 [main] INFO  (DfCreateSchemaProcess#createSchema():246) - *               *
2014-06-25 14:34:21,398 [main] INFO  (DfCreateSchemaProcess#createSchema():247) - * Create Schema *
2014-06-25 14:34:21,399 [main] INFO  (DfCreateSchemaProcess#createSchema():248) - *               *
2014-06-25 14:34:21,400 [main] INFO  (DfCreateSchemaProcess#createSchema():249) - * * * * * * * * *
2014-06-25 14:34:21,407 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-00-system.sql
2014-06-25 14:34:21,410 [main] INFO  (DfReplaceSchemaProperties#checkTargetEnvType():277) - ...Checking envType: ut in [ut]
2014-06-25 14:34:21,411 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:checkEnv(ut)#

-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database twitter
2014-06-25 14:34:21,419 [main] INFO  (DfCreateSchemaProcess$1#dispatch():273) - ...Creating a connection to system
2014-06-25 14:34:21,421 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():514) - ...Creating a connection for additional user: root
2014-06-25 14:34:21,433 [main] INFO  (DfCreateSchemaProcess$1#dispatch():299) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2014-06-25 14:34:21,435 [main] INFO  (DfCreateSchemaProcess$1#dispatch():301) -  -> Can't create database 'twitter'; database exists
2014-06-25 14:34:21,437 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():411) - ...Reviving the user 'system' until the end of this SQL file
2014-06-25 14:34:21,438 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on twitter.*
  to twitter@localhost identified by 'twitter'
2014-06-25 14:34:21,445 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2014-06-25 14:34:21,448 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2014-06-25 14:34:21,449 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-10-basic.sql
2014-06-25 14:34:21,450 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():348) - ...Saying good-bye to the user 'system' again
2014-06-25 14:34:21,451 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():352) - ...Clearing revived users
2014-06-25 14:34:21,452 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():359) - ...Coming back to the main user from the user 'system'
2014-06-25 14:34:21,455 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FOLLOW
(
	FOLLOW_ID INT(100) NOT NULL UNIQUE COMMENT 'フォローID',
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PRIMARY KEY (FOLLOW_ID)
) COMMENT = 'フォロー'
2014-06-25 14:34:21,501 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE FOLLOWERS
(
	FOLLOWERSID INT(100) NOT NULL UNIQUE COMMENT 'フォロワーID',
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PRIMARY KEY (FOLLOWERSID)
) COMMENT = 'フォロワー'
2014-06-25 14:34:21,559 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE LOGIN
(
	LOGIN_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ログインID : ログインした瞬間のID
',
	LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	PRIMARY KEY (LOGIN_ID)
) COMMENT = 'ログイン'
2014-06-25 14:34:21,618 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER
(
	MEMBER_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員のID
',
	EMAIL_ADDRESS VARCHAR(100) NOT NULL UNIQUE COMMENT 'メールアドレス : 会員のメールアドレス',
	USER_NAME VARCHAR(50) NOT NULL UNIQUE COMMENT '会員ユーザ名 : 会員のユーザ名',
	UPDATE_DATETIME DATETIME COMMENT '更新日時',
	BIRTHDATE DATE COMMENT '生年月日 : 会員の生年月日',
	PROFILE VARCHAR(200) COMMENT 'プロフィール',
	NAME VARCHAR(50) NOT NULL COMMENT '名前',
	REGESTER_DATETIME DATETIME NOT NULL COMMENT '登録日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員'
2014-06-25 14:34:21,702 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PASSWORD VARCHAR(50) NOT NULL COMMENT 'パスワード',
	PASSWORD_UPDATE_DATETIME DATETIME COMMENT 'パスワード更新日時',
	PASSWORD_REGESTERATION_DATETIME DATETIME NOT NULL COMMENT 'パスワード登録日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員セキュリティ'
2014-06-25 14:34:21,750 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_WITHDRAW
(
	WITHDRAWAL_REASON_ID INT COMMENT '退会理由ID : 会員の退会理由ID',
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト',
	WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT 'withdrawal_datetime : 退会日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員退会'
2014-06-25 14:34:21,824 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	TWEET_DATETIME DATETIME NOT NULL COMMENT 'TWEET日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-06-25 14:34:21,877 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FOLLOW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-25 14:34:21,975 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOWERS
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-25 14:34:22,073 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-25 14:34:22,158 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-25 14:34:22,247 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_WITHDRAW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-25 14:34:22,353 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-25 14:34:22,464 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=13 failure=0
2014-06-25 14:34:22,466 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=15 failure=0 (in 2 files)
2014-06-25 14:34:22,468 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-06-25 14:34:22,530 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-06-25 14:34:22,531 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-06-25 14:34:22,532 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-06-25 14:34:22,533 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-06-25 14:34:22,534 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-06-25 14:34:22,536 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-06-25 14:34:22,559 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-06-25 14:34:22,559 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-06-25 14:34:22,560 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-06-25 14:34:22,836 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-25 14:34:22,837 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-25 14:34:22,838 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-25 14:34:22,892 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{1, Stojkovic@gmail.com, Pixy, Example, 1965/03/03, 2014-06-24 00:00:00.0, 2014-06-25 14:34:22.892}
2014-06-25 14:34:22,939 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{2, Savicevic@gmail.com, Genius, Tom, 1966/09/15, 2014-06-25 00:00:00.0, 2014-06-25 14:34:22.939}
2014-06-25 14:34:22,941 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{3, Mijatovic@gmail.com, Mijato, Raven, null, 2014-06-26 00:00:00.0, 2014-06-25 14:34:22.941}
2014-06-25 14:34:22,942 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{4, Stankovic@gmail.com, Stanko, Example, 1978/09/11, 2014-06-27 00:00:00.0, 2014-06-25 14:34:22.942}
2014-06-25 14:34:22,943 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{5, Milosevic@gmail.com, Milose, Example, null, 2014-06-28 00:00:00.0, 2014-06-25 14:34:22.943}
2014-06-25 14:34:22,944 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{6, Mihajlovic@gmail.com, FreeKick, Example, 1969/02/20, 2014-06-29 00:00:00.0, 2014-06-25 14:34:22.944}
2014-06-25 14:34:22,946 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{7, アカギ@gmail.com, Akagi, Example, null, 2014-06-30 00:00:00.0, 2014-06-25 14:34:22.946}
2014-06-25 14:34:22,949 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{8, Kezman@gmial.com, RedCard, Example, null, 2014-07-01 00:00:00.0, 2014-06-25 14:34:22.949}
2014-06-25 14:34:22,950 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{9, Maslovar@gmail.com, JEFUnited, Example, 1967/02/20, 2014-07-02 00:00:00.0, 2014-06-25 14:34:22.95}
2014-06-25 14:34:22,952 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{10, 諸葛亮孔明@gmail.com, ShokatsuGoGo, Example, null, 2014-07-03 00:00:00.0, 2014-06-25 14:34:22.952}
2014-06-25 14:34:22,955 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{11, Boban@gmail.com, Boban, Example, 1968/10/08, 2014-07-04 00:00:00.0, 2014-06-25 14:34:22.955}
2014-06-25 14:34:22,956 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{12, Suker@gmail.com, Suker, Example, 1968/01/01, 2014-07-05 00:00:00.0, 2014-06-25 14:34:22.956}
2014-06-25 14:34:22,958 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{13, Jarni@gmail.com, Jarni, Example, 1968/10/26, 2014-07-06 00:00:00.0, 2014-06-25 14:34:22.958}
2014-06-25 14:34:22,960 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{14, Boksic@gmail.com, Boksic, Example, 1970/01/21, 2014-07-07 00:00:00.0, 2014-06-25 14:34:22.959}
2014-06-25 14:34:22,961 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{15, Prosinecki@gmail.com, Prosinecki, Example, 1969/01/12, 2014-07-08 00:00:00.0, 2014-06-25 14:34:22.961}
2014-06-25 14:34:22,963 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{16, RobeltKovac@gmail.com, RobeltKovac, Example, null, 2014-07-09 00:00:00.0, 2014-06-25 14:34:22.963}
2014-06-25 14:34:22,965 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{17, NikoKovac@gmail.com, NikoKovac, Example, null, 2014-07-10 00:00:00.0, 2014-06-25 14:34:22.965}
2014-06-25 14:34:22,966 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{18, Jovanovic@gmail.com, Jovano, Example, 1981/04/18, 2014-07-11 00:00:00.0, 2014-06-25 14:34:22.966}
2014-06-25 14:34:22,967 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{19, Milko@gmail.com, Milko, Example, 1974/09/10, 2014-07-12 00:00:00.0, 2014-06-25 14:34:22.967}
2014-06-25 14:34:22,968 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{20, 諸葛瑾子瑜@gmail.com, ShokatsuKinKin, Example, null, 2014-07-13 00:00:00.0, 2014-06-25 14:34:22.968}
2014-06-25 14:34:22,986 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 20 rows are loaded to MEMBER
2014-06-25 14:34:22,989 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 3, 2006/12/24 23:59:59}
2014-06-25 14:34:22,990 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 6, 2007/11/11 16:16:16}
2014-06-25 14:34:22,991 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{3, 1, 2006/12/23 22:56:29}
2014-06-25 14:34:22,992 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{4, 6, 2007/11/01 02:13:00}
2014-06-25 14:34:22,993 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{5, 7, 2006/05/24 23:12:59}
2014-06-25 14:34:22,994 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{6, 6, 2005/11/11 16:32:01}
2014-06-25 14:34:22,996 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{7, 6, 2006/01/28 23:59:59}
2014-06-25 14:34:22,997 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{8, 6, 2007/11/09 16:23:00}
2014-06-25 14:34:22,998 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{9, 8, 2006/12/22 23:59:59}
2014-06-25 14:34:23,000 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{10, 6, 2007/11/11 09:01:00}
2014-06-25 14:34:23,001 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{11, 1, 2006/12/23 23:59:59}
2014-06-25 14:34:23,002 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{12, 9, 2007/11/15 12:43:00}
2014-06-25 14:34:23,004 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{13, 10, 2006/12/24 23:59:59}
2014-06-25 14:34:23,005 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{14, 6, 2007/04/01 16:23:01}
2014-06-25 14:34:23,007 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{15, 7, 2006/12/24 23:59:20}
2014-06-25 14:34:23,008 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{16, 6, 2007/05/01 12:23:02}
2014-06-25 14:34:23,009 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{17, 7, 2006/12/24 23:59:21}
2014-06-25 14:34:23,010 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{18, 6, 2007/06/11 17:23:03}
2014-06-25 14:34:23,012 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{19, 4, 2006/12/24 23:59:22}
2014-06-25 14:34:23,013 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{20, 3, 2007/11/01 16:12:04}
2014-06-25 14:34:23,014 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{21, 11, 2006/12/24 23:59:23}
2014-06-25 14:34:23,016 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{22, 1, 2007/11/01 16:23:05}
2014-06-25 14:34:23,017 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{23, 9, 2006/12/24 23:59:24}
2014-06-25 14:34:23,019 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{24, 8, 2007/11/01 16:23:06}
2014-06-25 14:34:23,020 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{25, 7, 2007/12/24 11:59:25}
2014-06-25 14:34:23,021 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{26, 6, 2007/06/21 01:23:57}
2014-06-25 14:34:23,023 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{27, 5, 2006/12/24 23:59:26}
2014-06-25 14:34:23,024 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{28, 3, 2007/11/01 16:23:08}
2014-06-25 14:34:23,025 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{29, 3, 2006/12/24 23:59:27}
2014-06-25 14:34:23,027 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{30, 10, 2007/11/01 16:23:09}
2014-06-25 14:34:23,028 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-25 14:34:23,042 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 30 rows are loaded to LOGIN
2014-06-25 14:34:23,044 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014/06/23, null}
2014-06-25 14:34:23,045 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014/06/24, null}
2014-06-25 14:34:23,046 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{3, ccc, 2014/06/25, 2014/06/25}
2014-06-25 14:34:23,047 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{4, ddd, 2014/06/26, null}
2014-06-25 14:34:23,048 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{5, eee2, 2014/06/27, null}
2014-06-25 14:34:23,050 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{6, fff, 2014/06/28, null}
2014-06-25 14:34:23,051 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{7, ggg3, 2014/06/29, 2014/06/25}
2014-06-25 14:34:23,053 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{8, hhh555, 2014/06/30, null}
2014-06-25 14:34:23,054 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{9, iii, 2014/07/01, 2014/06/25}
2014-06-25 14:34:23,056 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{10, jjj, 2014/07/02, null}
2014-06-25 14:34:23,056 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-25 14:34:23,068 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to MEMBER_SECURITY
2014-06-25 14:34:23,069 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 2013-06-13 00:00:00.0}
2014-06-25 14:34:23,072 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{2, 2345, 清君頼りになるー！, 2013-06-14 00:00:00.0}
2014-06-25 14:34:23,073 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{3, 3456, GLD, 2013-06-15 00:00:00.0}
2014-06-25 14:34:23,074 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{4, 875, BRZ, 2013-06-16 00:00:00.0}
2014-06-25 14:34:23,076 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{5, 1111, BRZ, 2013-06-17 00:00:00.0}
2014-06-25 14:34:23,077 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{6, 5422, SIL, 2013-06-18 00:00:00.0}
2014-06-25 14:34:23,078 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{7, 24678, SIL, 2013-06-19 00:00:00.0}
2014-06-25 14:34:23,081 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{8, 234, SIL, 2013-06-20 00:00:00.0}
2014-06-25 14:34:23,082 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{9, 3, SIL, 2013-06-21 00:00:00.0}
2014-06-25 14:34:23,083 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{10, 98765, PLT, 2013-06-22 00:00:00.0}
2014-06-25 14:34:23,084 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-25 14:34:23,092 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to TWEET
2014-06-25 14:34:23,108 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{3, 1, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123}
2014-06-25 14:34:23,112 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{6, 1, null, 2007/11/11 16:00:00.456}
2014-06-25 14:34:23,115 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{13, 2, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789}
2014-06-25 14:34:23,119 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{16, 3, コバチが２人いるため, 2007/11/13 16:00:00.456}
2014-06-25 14:34:23,128 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 4 rows are loaded to MEMBER_WITHDRAW
2014-06-25 14:34:23,133 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():379) - ...Checking implicit set of classification
2014-06-25 14:34:23,151 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - 
2014-06-25 14:34:23,152 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * * * * * * * **
2014-06-25 14:34:23,153 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2014-06-25 14:34:23,154 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * Take Finally *
2014-06-25 14:34:23,155 [main] INFO  (DfTakeFinallyProcess#takeFinally():225) - *              *
2014-06-25 14:34:23,157 [main] INFO  (DfTakeFinallyProcess#takeFinally():226) - * * * * * * * **
2014-06-25 14:34:23,170 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: take-finally.sql
2014-06-25 14:34:23,172 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2014-06-25 14:34:23,173 [main] INFO  (DfSqlFileFireMan#fire():90) - {Take Finally}: success=0 failure=0 (in 1 files)
2014-06-25 14:34:23,176 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-25 14:34:23,182 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m04s682ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=15 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=1
  (ut)
  o 20-member.xls

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-06-25 14:34:24,102 [main] INFO  (TorqueJDBCTransformTask#begin():100) - +------------------------------------------+
2014-06-25 14:34:24,105 [main] INFO  (TorqueJDBCTransformTask#begin():101) - |                                          |
2014-06-25 14:34:24,105 [main] INFO  (TorqueJDBCTransformTask#begin():102) - |                   JDBC                   |
2014-06-25 14:34:24,106 [main] INFO  (TorqueJDBCTransformTask#begin():103) - |                                          |
2014-06-25 14:34:24,107 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2014-06-25 14:34:24,146 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-25 14:34:24,146 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-25 14:34:24,147 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-25 14:34:24,149 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-25 14:34:24,189 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2014-06-25 14:34:24,190 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2014-06-25 14:34:24,191 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1469) - ...Loading previous schema (schema diff process)
2014-06-25 14:34:24,201 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-25 14:34:24,265 [main] INFO  (DfSchemaXmlSerializer#generateXML():361) - ...Getting DB connection
2014-06-25 14:34:24,271 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-25 14:34:24,458 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-25 14:34:24,458 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-25 14:34:24,460 [main] INFO  (DfSchemaXmlSerializer#generateXML():364) - ...Getting DB meta data
2014-06-25 14:34:24,462 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-25 14:34:24,463 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-25 14:34:24,464 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-25 14:34:24,475 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2014-06-25 14:34:24,479 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2014-06-25 14:34:24,490 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - 
2014-06-25 14:34:24,491 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2014-06-25 14:34:24,491 [main] INFO  (DfSchemaXmlSerializer#processTable():423) - $ [Table List]
2014-06-25 14:34:24,493 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.follow(TABLE) // フォロー
2014-06-25 14:34:24,534 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.followers(TABLE) // フォロワー
2014-06-25 14:34:24,546 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.login(TABLE) // ログイン
2014-06-25 14:34:24,560 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member(TABLE) // 会員
2014-06-25 14:34:24,575 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_security(TABLE) // 会員セキュリティ
2014-06-25 14:34:24,589 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_withdraw(TABLE) // 会員退会
2014-06-25 14:34:24,602 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.tweet(TABLE) // TWEET
2014-06-25 14:34:24,616 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 
2014-06-25 14:34:24,616 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ [Table Count]
2014-06-25 14:34:24,617 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ 7
2014-06-25 14:34:24,618 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - $ = = = = = = = = = =/
2014-06-25 14:34:24,620 [main] INFO  (DfSchemaXmlSerializer#processTable():439) - 
2014-06-25 14:34:24,623 [main] INFO  (DfSchemaXmlSerializer#processSequence():799) - ...Getting sequences
2014-06-25 14:34:24,628 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2014-06-25 14:34:24,628 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-twitter.xml
2014-06-25 14:34:24,629 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2014-06-25 14:34:24,645 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1487) - ...Loading next schema (schema diff process)
2014-06-25 14:34:24,647 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-25 14:34:24,690 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1492) -  -> different from previous (schema diff)
2014-06-25 14:34:24,692 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1494) - ...Serializing schema-diff:
2014-06-25 14:34:24,692 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1495) -   filePath = ./schema/project-history-twitter.diffmap
2014-06-25 14:34:24,719 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-25 14:34:24,728 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s623ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2014-06-25 14:34:25,647 [main] INFO  (TorqueDocumentationTask#begin():171) - +------------------------------------------+
2014-06-25 14:34:25,650 [main] INFO  (TorqueDocumentationTask#begin():172) - |                                          |
2014-06-25 14:34:25,651 [main] INFO  (TorqueDocumentationTask#begin():173) - |                   Doc                    |
2014-06-25 14:34:25,651 [main] INFO  (TorqueDocumentationTask#begin():181) - |                                          |
2014-06-25 14:34:25,653 [main] INFO  (TorqueDocumentationTask#begin():182) - +------------------------------------------+
2014-06-25 14:34:25,713 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-25 14:34:25,713 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-25 14:34:25,714 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-25 14:34:25,715 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-25 14:34:25,719 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():242) - 
2014-06-25 14:34:25,719 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():243) - * * * * * * * * * * *
2014-06-25 14:34:25,720 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():244) - *                   *
2014-06-25 14:34:25,721 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():245) - *    Schema HTML    *
2014-06-25 14:34:25,723 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - *                   *
2014-06-25 14:34:25,724 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2014-06-25 14:34:25,881 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-25 14:34:25,947 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("doc/ControlDocument.vm", c);
2014-06-25 14:34:26,016 [main] INFO  (Database#doEnableDocumentOutputDirectory():1180) - ...Setting up documentOutputDirectory: ./output/doc
2014-06-25 14:34:26,030 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-25 14:34:26,032 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-25 14:34:26,035 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-25 14:34:26,038 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-25 14:34:26,039 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-25 14:34:26,043 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-25 14:34:26,047 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-25 14:34:26,047 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-25 14:34:26,051 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-25 14:34:26,063 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():150) - ...Loading schema history
2014-06-25 14:34:26,112 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():154) -  -> found history: count=9
2014-06-25 14:34:26,400 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-25 14:34:26,416 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s766ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Doc}
2014-06-25 14:34:29,269 [main] INFO  (TorqueDataModelTask#begin():105) - +------------------------------------------+
2014-06-25 14:34:29,271 [main] INFO  (TorqueDataModelTask#begin():106) - |                                          |
2014-06-25 14:34:29,272 [main] INFO  (TorqueDataModelTask#begin():107) - |                 Generate                 |
2014-06-25 14:34:29,272 [main] INFO  (TorqueDataModelTask#begin():108) - |                                          |
2014-06-25 14:34:29,274 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2014-06-25 14:34:29,313 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-25 14:34:29,314 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-25 14:34:29,314 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-25 14:34:29,316 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-25 14:34:29,334 [main] INFO  (TorqueDataModelTask#setupControlTemplate():160) - 
2014-06-25 14:34:29,335 [main] INFO  (TorqueDataModelTask#setupControlTemplate():161) - ...Using Java control: om/ControlGenerateJava.vm
2014-06-25 14:34:29,473 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-25 14:34:29,514 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlGenerateJava.vm", c);
2014-06-25 14:34:29,621 [main] INFO  (Database#doEnableGenerateOutputDirectory():1148) - ...Setting up generateOutputDirectory: ../src/main/java
2014-06-25 14:34:29,630 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-25 14:34:29,632 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-25 14:34:29,635 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-25 14:34:29,639 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-25 14:34:29,640 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-25 14:34:29,643 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-25 14:34:29,648 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-25 14:34:29,648 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-25 14:34:29,652 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-25 14:34:29,669 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - /=============================
2014-06-25 14:34:29,669 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():60) - ...Initializing include query.
2014-06-25 14:34:29,670 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - String
2014-06-25 14:34:29,671 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Number
2014-06-25 14:34:29,673 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Date
2014-06-25 14:34:29,674 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotEqual -> []
2014-06-25 14:34:29,675 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   InScope -> []
2014-06-25 14:34:29,677 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotInScope -> []
2014-06-25 14:34:29,678 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - OrderBy
2014-06-25 14:34:29,680 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():62) - ========/
2014-06-25 14:34:29,697 [main] INFO  (Database#info():2577) - public void parseAllCommon() {
2014-06-25 14:34:29,700 [main] INFO  (Database#info():2577) -     parse('DBCurrent');
2014-06-25 14:34:29,709 [main] INFO  (Database#info():2577) -     parse('DBFluteConfig');
2014-06-25 14:34:29,736 [main] INFO  (Database#info():2577) -     parse('DBFluteInitializer');
2014-06-25 14:34:29,740 [main] INFO  (Database#info():2577) -     parse('DBMetaInstanceHandler');
2014-06-25 14:34:29,756 [main] INFO  (Database#info():2577) -     parse('EntityDefinedCommonColumn');
2014-06-25 14:34:29,760 [main] INFO  (Database#info():2577) -     parse('ImplementedBehaviorSelector');
2014-06-25 14:34:29,764 [main] INFO  (Database#info():2577) -     parse('ImplementedCommonColumnAutoSetupper');
2014-06-25 14:34:29,768 [main] INFO  (Database#info():2577) -     parse('ImplementedInvokerAssistant');
2014-06-25 14:34:29,771 [main] INFO  (Database#info():2577) -     parse('ImplementedSqlClauseCreator');
2014-06-25 14:34:29,774 [main] INFO  (Database#info():2577) - }
2014-06-25 14:34:29,774 [main] INFO  (Database#info():2577) - public void parseContainerConfig() {
2014-06-25 14:34:29,775 [main] INFO  (Database#info():2577) -     parse('../resources/dbflute.dicon')
2014-06-25 14:34:29,783 [main] INFO  (Database#info():2577) - }
2014-06-25 14:34:29,788 [main] INFO  (DfOldClassHandler#info():886) - public void deleteOldTableClass() {
2014-06-25 14:34:29,809 [main] INFO  (DfOldClassHandler#info():886) - }
2014-06-25 14:34:29,810 [main] INFO  (Database#info():2577) - public void parseTableClass() {
2014-06-25 14:34:29,811 [main] INFO  (Database#info():2577) -     parse('follow');
2014-06-25 14:34:30,063 [main] INFO  (Database#info():2577) -     parse('followers');
2014-06-25 14:34:30,256 [main] INFO  (Database#info():2577) -     parse('login');
2014-06-25 14:34:30,454 [main] INFO  (Database#info():2577) -     parse('member');
2014-06-25 14:34:30,726 [main] INFO  (Database#info():2577) -     parse('member_security');
2014-06-25 14:34:30,844 [main] INFO  (Database#info():2577) -     parse('member_withdraw');
2014-06-25 14:34:30,930 [main] INFO  (Database#info():2577) -     parse('tweet');
2014-06-25 14:34:31,026 [main] INFO  (Database#info():2577) - }
2014-06-25 14:34:31,027 [main] INFO  (Database#info():2577) -  
2014-06-25 14:34:31,053 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-25 14:34:31,061 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s789ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Generate}
2014-06-25 14:34:32,003 [main] INFO  (DfOutsideSqlTestTask#begin():72) - +------------------------------------------+
2014-06-25 14:34:32,006 [main] INFO  (DfOutsideSqlTestTask#begin():73) - |                                          |
2014-06-25 14:34:32,006 [main] INFO  (DfOutsideSqlTestTask#begin():74) - |              OutsideSqlTest              |
2014-06-25 14:34:32,007 [main] INFO  (DfOutsideSqlTestTask#begin():75) - |                                          |
2014-06-25 14:34:32,008 [main] INFO  (DfOutsideSqlTestTask#begin():76) - +------------------------------------------+
2014-06-25 14:34:32,062 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-25 14:34:32,062 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-25 14:34:32,063 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-25 14:34:32,064 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-25 14:34:32,102 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-25 14:34:32,108 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s100ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2014-06-25 14:34:32,942 [main] INFO  (DfSql2EntityTask#begin():100) - +------------------------------------------+
2014-06-25 14:34:32,944 [main] INFO  (DfSql2EntityTask#begin():101) - |                                          |
2014-06-25 14:34:32,944 [main] INFO  (DfSql2EntityTask#begin():102) - |                Sql2Entity                |
2014-06-25 14:34:32,945 [main] INFO  (DfSql2EntityTask#begin():103) - |                                          |
2014-06-25 14:34:32,946 [main] INFO  (DfSql2EntityTask#begin():104) - +------------------------------------------+
2014-06-25 14:34:32,985 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-25 14:34:32,985 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-25 14:34:32,986 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-25 14:34:32,987 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-25 14:34:33,004 [main] INFO  (DfSql2EntityTask#setupControlTemplate():170) - 
2014-06-25 14:34:33,005 [main] INFO  (DfSql2EntityTask#setupControlTemplate():171) - ...Using Java control: om/ControlSql2EntityJava.vm
2014-06-25 14:34:33,012 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-25 14:34:33,058 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-25 14:34:33,206 [main] INFO  (DfSql2EntityTask#initControlContext():301) - 
2014-06-25 14:34:33,206 [main] INFO  (DfSql2EntityTask#initControlContext():302) - ...Preparing generation of customize-entities and parameter-beans
2014-06-25 14:34:33,207 [main] INFO  (DfSql2EntityTask#initControlContext():303) - * * * * * * * * * *
2014-06-25 14:34:33,208 [main] INFO  (DfSql2EntityTask#initControlContext():304) - * CustomizeEntity *
2014-06-25 14:34:33,210 [main] INFO  (DfSql2EntityTask#initControlContext():305) - * * * * * * * * * *
2014-06-25 14:34:33,211 [main] INFO  (DfSql2EntityTask#showParameterBean():871) - * * * * * * * * *
2014-06-25 14:34:33,212 [main] INFO  (DfSql2EntityTask#showParameterBean():872) - * ParameterBean *
2014-06-25 14:34:33,214 [main] INFO  (DfSql2EntityTask#showParameterBean():873) - * * * * * * * * *
2014-06-25 14:34:33,219 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlSql2EntityJava.vm", c);
2014-06-25 14:34:33,315 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1164) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2014-06-25 14:34:33,318 [main] INFO  (DfOldClassHandler#info():886) - public void deleteOldCustomizeClass() {
2014-06-25 14:34:33,328 [main] INFO  (DfOldClassHandler#info():886) - }
2014-06-25 14:34:33,329 [main] INFO  (Database#info():2577) - public void parseCustomizeEntity() {
2014-06-25 14:34:33,332 [main] INFO  (Database#info():2577) - }
2014-06-25 14:34:33,343 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():293) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2014-06-25 14:34:33,352 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-25 14:34:33,358 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s413ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2014-06-26 10:20:14,738 [main] INFO  (DfReplaceSchemaTask#begin():87) - +------------------------------------------+
2014-06-26 10:20:14,743 [main] INFO  (DfReplaceSchemaTask#begin():88) - |                                          |
2014-06-26 10:20:14,744 [main] INFO  (DfReplaceSchemaTask#begin():89) - |              ReplaceSchema               |
2014-06-26 10:20:14,769 [main] INFO  (DfReplaceSchemaTask#begin():97) - |                                          |
2014-06-26 10:20:14,770 [main] INFO  (DfReplaceSchemaTask#begin():98) - +------------------------------------------+
2014-06-26 10:20:14,772 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():329) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2014-06-26 10:20:16,514 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-26 10:20:16,515 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-26 10:20:16,516 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-26 10:20:16,518 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-26 10:20:16,530 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-26 10:20:16,766 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-26 10:20:16,767 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-26 10:20:16,788 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():207) - 
2014-06-26 10:20:16,789 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():208) - * * * * * * * * * * *
2014-06-26 10:20:16,790 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():209) - *                   *
2014-06-26 10:20:16,791 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():210) - * Initialize Schema *
2014-06-26 10:20:16,793 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():211) - *                   *
2014-06-26 10:20:16,794 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():212) - * * * * * * * * * * *
2014-06-26 10:20:16,817 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-26 10:20:16,818 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-26 10:20:16,819 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-26 10:20:16,880 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table follow
2014-06-26 10:20:16,928 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table followers
2014-06-26 10:20:16,978 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table login
2014-06-26 10:20:17,038 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_security
2014-06-26 10:20:17,086 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_withdraw
2014-06-26 10:20:17,149 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table tweet
2014-06-26 10:20:17,174 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_1
2014-06-26 10:20:17,187 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table followers drop foreign key followers_ibfk_1
2014-06-26 10:20:17,197 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table login drop foreign key login_ibfk_1
2014-06-26 10:20:17,207 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_security drop foreign key member_security_ibfk_1
2014-06-26 10:20:17,222 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_withdraw drop foreign key member_withdraw_ibfk_1
2014-06-26 10:20:17,236 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table tweet drop foreign key tweet_ibfk_1
2014-06-26 10:20:17,246 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table follow
2014-06-26 10:20:17,261 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table followers
2014-06-26 10:20:17,281 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table login
2014-06-26 10:20:17,300 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member
2014-06-26 10:20:17,335 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_security
2014-06-26 10:20:17,354 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_withdraw
2014-06-26 10:20:17,379 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table tweet
2014-06-26 10:20:17,504 [main] INFO  (DfCreateSchemaProcess#createSchema():244) - 
2014-06-26 10:20:17,506 [main] INFO  (DfCreateSchemaProcess#createSchema():245) - * * * * * * * * *
2014-06-26 10:20:17,508 [main] INFO  (DfCreateSchemaProcess#createSchema():246) - *               *
2014-06-26 10:20:17,514 [main] INFO  (DfCreateSchemaProcess#createSchema():247) - * Create Schema *
2014-06-26 10:20:17,517 [main] INFO  (DfCreateSchemaProcess#createSchema():248) - *               *
2014-06-26 10:20:17,519 [main] INFO  (DfCreateSchemaProcess#createSchema():249) - * * * * * * * * *
2014-06-26 10:20:17,534 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-00-system.sql
2014-06-26 10:20:17,537 [main] INFO  (DfReplaceSchemaProperties#checkTargetEnvType():277) - ...Checking envType: ut in [ut]
2014-06-26 10:20:17,538 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:checkEnv(ut)#

-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database twitter
2014-06-26 10:20:17,545 [main] INFO  (DfCreateSchemaProcess$1#dispatch():273) - ...Creating a connection to system
2014-06-26 10:20:17,548 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():514) - ...Creating a connection for additional user: root
2014-06-26 10:20:17,562 [main] INFO  (DfCreateSchemaProcess$1#dispatch():299) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2014-06-26 10:20:17,564 [main] INFO  (DfCreateSchemaProcess$1#dispatch():301) -  -> Can't create database 'twitter'; database exists
2014-06-26 10:20:17,566 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():411) - ...Reviving the user 'system' until the end of this SQL file
2014-06-26 10:20:17,568 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on twitter.*
  to twitter@localhost identified by 'twitter'
2014-06-26 10:20:17,575 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2014-06-26 10:20:17,580 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2014-06-26 10:20:17,582 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-10-basic.sql
2014-06-26 10:20:17,586 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():348) - ...Saying good-bye to the user 'system' again
2014-06-26 10:20:17,588 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():352) - ...Clearing revived users
2014-06-26 10:20:17,593 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():359) - ...Coming back to the main user from the user 'system'
2014-06-26 10:20:17,595 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FOLLOW
(
	FOLLOW_ID INT(100) NOT NULL UNIQUE COMMENT 'フォローID',
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PRIMARY KEY (FOLLOW_ID)
) COMMENT = 'フォロー'
2014-06-26 10:20:17,636 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE FOLLOWERS
(
	FOLLOWERSID INT(100) NOT NULL UNIQUE COMMENT 'フォロワーID',
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PRIMARY KEY (FOLLOWERSID)
) COMMENT = 'フォロワー'
2014-06-26 10:20:17,693 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE LOGIN
(
	LOGIN_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ログインID : ログインした瞬間のID
',
	LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	PRIMARY KEY (LOGIN_ID)
) COMMENT = 'ログイン'
2014-06-26 10:20:17,750 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER
(
	MEMBER_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員のID
',
	EMAIL_ADDRESS VARCHAR(100) NOT NULL UNIQUE COMMENT 'メールアドレス : 会員のメールアドレス',
	USERNAME VARCHAR(50) NOT NULL UNIQUE COMMENT '会員ユーザ名 : 会員のユーザ名',
	UPDATE_DATETIME DATETIME COMMENT '更新日時',
	BIRTHDATE DATE COMMENT '生年月日 : 会員の生年月日',
	PROFILE VARCHAR(200) COMMENT 'プロフィール',
	REGESTER_DATETIME DATETIME NOT NULL COMMENT '登録日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員'
2014-06-26 10:20:17,847 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PASSWORD VARCHAR(50) NOT NULL COMMENT 'パスワード',
	PASSWORD_UPDATE_DATETIME DATETIME COMMENT 'パスワード更新日時',
	PASSWORD_REGESTERATION_DATETIME DATETIME NOT NULL COMMENT 'パスワード登録日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員セキュリティ'
2014-06-26 10:20:17,913 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_WITHDRAW
(
	WITHDRAWAL_REASON_ID INT COMMENT '退会理由ID : 会員の退会理由ID',
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト',
	WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT 'withdrawal_datetime : 退会日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員退会'
2014-06-26 10:20:17,978 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	TWEET_DATETIME DATETIME NOT NULL COMMENT 'TWEET日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-06-26 10:20:18,031 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FOLLOW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-26 10:20:18,119 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOWERS
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-26 10:20:18,240 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-26 10:20:18,332 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-26 10:20:18,432 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_WITHDRAW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-26 10:20:18,542 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-26 10:20:18,642 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=13 failure=0
2014-06-26 10:20:18,645 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=15 failure=0 (in 2 files)
2014-06-26 10:20:18,647 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-06-26 10:20:18,705 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-06-26 10:20:18,706 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-06-26 10:20:18,706 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-06-26 10:20:18,708 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-06-26 10:20:18,709 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-06-26 10:20:18,711 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-06-26 10:20:18,736 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-06-26 10:20:18,737 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-06-26 10:20:18,737 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-06-26 10:20:19,064 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-26 10:20:19,065 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-26 10:20:19,066 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-26 10:20:19,124 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{1, Stojkovic@gmail.com, Pixy, 1965/03/03, 2014-06-24 00:00:00.0, 2014-06-26 10:20:19.124}
2014-06-26 10:20:19,179 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{2, Savicevic@gmail.com, Genius, 1966/09/15, 2014-06-25 00:00:00.0, 2014-06-26 10:20:19.179}
2014-06-26 10:20:19,181 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{3, Mijatovic@gmail.com, Mijato, null, 2014-06-26 00:00:00.0, 2014-06-26 10:20:19.181}
2014-06-26 10:20:19,182 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{4, Stankovic@gmail.com, Stanko, 1978/09/11, 2014-06-27 00:00:00.0, 2014-06-26 10:20:19.182}
2014-06-26 10:20:19,183 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{5, Milosevic@gmail.com, Milose, null, 2014-06-28 00:00:00.0, 2014-06-26 10:20:19.183}
2014-06-26 10:20:19,184 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{6, Mihajlovic@gmail.com, FreeKick, 1969/02/20, 2014-06-29 00:00:00.0, 2014-06-26 10:20:19.184}
2014-06-26 10:20:19,185 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{7, アカギ@gmail.com, Akagi, null, 2014-06-30 00:00:00.0, 2014-06-26 10:20:19.185}
2014-06-26 10:20:19,189 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{8, Kezman@gmial.com, RedCard, null, 2014-07-01 00:00:00.0, 2014-06-26 10:20:19.189}
2014-06-26 10:20:19,190 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{9, Maslovar@gmail.com, JEFUnited, 1967/02/20, 2014-07-02 00:00:00.0, 2014-06-26 10:20:19.19}
2014-06-26 10:20:19,192 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{10, 諸葛亮孔明@gmail.com, ShokatsuGoGo, null, 2014-07-03 00:00:00.0, 2014-06-26 10:20:19.192}
2014-06-26 10:20:19,195 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{11, Boban@gmail.com, Boban, 1968/10/08, 2014-07-04 00:00:00.0, 2014-06-26 10:20:19.195}
2014-06-26 10:20:19,197 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{12, Suker@gmail.com, Suker, 1968/01/01, 2014-07-05 00:00:00.0, 2014-06-26 10:20:19.197}
2014-06-26 10:20:19,198 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{13, Jarni@gmail.com, Jarni, 1968/10/26, 2014-07-06 00:00:00.0, 2014-06-26 10:20:19.198}
2014-06-26 10:20:19,201 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{14, Boksic@gmail.com, Boksic, 1970/01/21, 2014-07-07 00:00:00.0, 2014-06-26 10:20:19.201}
2014-06-26 10:20:19,203 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{15, Prosinecki@gmail.com, Prosinecki, 1969/01/12, 2014-07-08 00:00:00.0, 2014-06-26 10:20:19.202}
2014-06-26 10:20:19,204 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{16, RobeltKovac@gmail.com, RobeltKovac, null, 2014-07-09 00:00:00.0, 2014-06-26 10:20:19.204}
2014-06-26 10:20:19,206 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{17, NikoKovac@gmail.com, NikoKovac, null, 2014-07-10 00:00:00.0, 2014-06-26 10:20:19.206}
2014-06-26 10:20:19,207 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{18, Jovanovic@gmail.com, Jovano, 1981/04/18, 2014-07-11 00:00:00.0, 2014-06-26 10:20:19.207}
2014-06-26 10:20:19,209 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{19, Milko@gmail.com, Milko, 1974/09/10, 2014-07-12 00:00:00.0, 2014-06-26 10:20:19.209}
2014-06-26 10:20:19,210 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{20, 諸葛瑾子瑜@gmail.com, ShokatsuKinKin, null, 2014-07-13 00:00:00.0, 2014-06-26 10:20:19.21}
2014-06-26 10:20:19,223 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 20 rows are loaded to MEMBER
2014-06-26 10:20:19,226 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 3, 2006/12/24 23:59:59}
2014-06-26 10:20:19,227 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 6, 2007/11/11 16:16:16}
2014-06-26 10:20:19,228 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{3, 1, 2006/12/23 22:56:29}
2014-06-26 10:20:19,229 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{4, 6, 2007/11/01 02:13:00}
2014-06-26 10:20:19,230 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{5, 7, 2006/05/24 23:12:59}
2014-06-26 10:20:19,231 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{6, 6, 2005/11/11 16:32:01}
2014-06-26 10:20:19,232 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{7, 6, 2006/01/28 23:59:59}
2014-06-26 10:20:19,234 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{8, 6, 2007/11/09 16:23:00}
2014-06-26 10:20:19,235 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{9, 8, 2006/12/22 23:59:59}
2014-06-26 10:20:19,237 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{10, 6, 2007/11/11 09:01:00}
2014-06-26 10:20:19,238 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{11, 1, 2006/12/23 23:59:59}
2014-06-26 10:20:19,240 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{12, 9, 2007/11/15 12:43:00}
2014-06-26 10:20:19,241 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{13, 10, 2006/12/24 23:59:59}
2014-06-26 10:20:19,243 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{14, 6, 2007/04/01 16:23:01}
2014-06-26 10:20:19,244 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{15, 7, 2006/12/24 23:59:20}
2014-06-26 10:20:19,245 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{16, 6, 2007/05/01 12:23:02}
2014-06-26 10:20:19,246 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{17, 7, 2006/12/24 23:59:21}
2014-06-26 10:20:19,248 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{18, 6, 2007/06/11 17:23:03}
2014-06-26 10:20:19,249 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{19, 4, 2006/12/24 23:59:22}
2014-06-26 10:20:19,250 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{20, 3, 2007/11/01 16:12:04}
2014-06-26 10:20:19,252 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{21, 11, 2006/12/24 23:59:23}
2014-06-26 10:20:19,253 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{22, 1, 2007/11/01 16:23:05}
2014-06-26 10:20:19,255 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{23, 9, 2006/12/24 23:59:24}
2014-06-26 10:20:19,256 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{24, 8, 2007/11/01 16:23:06}
2014-06-26 10:20:19,257 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{25, 7, 2007/12/24 11:59:25}
2014-06-26 10:20:19,259 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{26, 6, 2007/06/21 01:23:57}
2014-06-26 10:20:19,260 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{27, 5, 2006/12/24 23:59:26}
2014-06-26 10:20:19,261 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{28, 3, 2007/11/01 16:23:08}
2014-06-26 10:20:19,262 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{29, 3, 2006/12/24 23:59:27}
2014-06-26 10:20:19,264 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{30, 10, 2007/11/01 16:23:09}
2014-06-26 10:20:19,265 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-26 10:20:19,280 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 30 rows are loaded to LOGIN
2014-06-26 10:20:19,281 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014/06/23, null}
2014-06-26 10:20:19,283 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014/06/24, null}
2014-06-26 10:20:19,284 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{3, ccc, 2014/06/25, 2014/06/25}
2014-06-26 10:20:19,285 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{4, ddd, 2014/06/26, null}
2014-06-26 10:20:19,286 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{5, eee2, 2014/06/27, null}
2014-06-26 10:20:19,288 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{6, fff, 2014/06/28, null}
2014-06-26 10:20:19,289 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{7, ggg3, 2014/06/29, 2014/06/25}
2014-06-26 10:20:19,291 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{8, hhh555, 2014/06/30, null}
2014-06-26 10:20:19,292 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{9, iii, 2014/07/01, 2014/06/25}
2014-06-26 10:20:19,293 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{10, jjj, 2014/07/02, null}
2014-06-26 10:20:19,295 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-26 10:20:19,307 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to MEMBER_SECURITY
2014-06-26 10:20:19,308 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 2013-06-13 00:00:00.0}
2014-06-26 10:20:19,310 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{2, 2345, 清君頼りになるー！, 2013-06-14 00:00:00.0}
2014-06-26 10:20:19,312 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{3, 3456, GLD, 2013-06-15 00:00:00.0}
2014-06-26 10:20:19,313 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{4, 875, BRZ, 2013-06-16 00:00:00.0}
2014-06-26 10:20:19,314 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{5, 1111, BRZ, 2013-06-17 00:00:00.0}
2014-06-26 10:20:19,315 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{6, 5422, SIL, 2013-06-18 00:00:00.0}
2014-06-26 10:20:19,317 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{7, 24678, SIL, 2013-06-19 00:00:00.0}
2014-06-26 10:20:19,318 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{8, 234, SIL, 2013-06-20 00:00:00.0}
2014-06-26 10:20:19,320 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{9, 3, SIL, 2013-06-21 00:00:00.0}
2014-06-26 10:20:19,321 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{10, 98765, PLT, 2013-06-22 00:00:00.0}
2014-06-26 10:20:19,323 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-26 10:20:19,332 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to TWEET
2014-06-26 10:20:19,334 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{3, 1, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123}
2014-06-26 10:20:19,338 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{6, 1, null, 2007/11/11 16:00:00.456}
2014-06-26 10:20:19,339 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{13, 2, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789}
2014-06-26 10:20:19,343 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{16, 3, コバチが２人いるため, 2007/11/13 16:00:00.456}
2014-06-26 10:20:19,351 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 4 rows are loaded to MEMBER_WITHDRAW
2014-06-26 10:20:19,355 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():379) - ...Checking implicit set of classification
2014-06-26 10:20:19,377 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - 
2014-06-26 10:20:19,378 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * * * * * * * **
2014-06-26 10:20:19,378 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2014-06-26 10:20:19,380 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * Take Finally *
2014-06-26 10:20:19,381 [main] INFO  (DfTakeFinallyProcess#takeFinally():225) - *              *
2014-06-26 10:20:19,383 [main] INFO  (DfTakeFinallyProcess#takeFinally():226) - * * * * * * * **
2014-06-26 10:20:19,397 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: take-finally.sql
2014-06-26 10:20:19,398 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2014-06-26 10:20:19,399 [main] INFO  (DfSqlFileFireMan#fire():90) - {Take Finally}: success=0 failure=0 (in 1 files)
2014-06-26 10:20:19,402 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-26 10:20:19,408 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m04s665ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=15 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=1
  (ut)
  o 20-member.xls

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-06-26 10:20:20,327 [main] INFO  (TorqueJDBCTransformTask#begin():100) - +------------------------------------------+
2014-06-26 10:20:20,329 [main] INFO  (TorqueJDBCTransformTask#begin():101) - |                                          |
2014-06-26 10:20:20,330 [main] INFO  (TorqueJDBCTransformTask#begin():102) - |                   JDBC                   |
2014-06-26 10:20:20,330 [main] INFO  (TorqueJDBCTransformTask#begin():103) - |                                          |
2014-06-26 10:20:20,332 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2014-06-26 10:20:20,373 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-26 10:20:20,374 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-26 10:20:20,375 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-26 10:20:20,375 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-26 10:20:20,430 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2014-06-26 10:20:20,430 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2014-06-26 10:20:20,431 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1469) - ...Loading previous schema (schema diff process)
2014-06-26 10:20:20,444 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-26 10:20:20,522 [main] INFO  (DfSchemaXmlSerializer#generateXML():361) - ...Getting DB connection
2014-06-26 10:20:20,527 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-26 10:20:20,711 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-26 10:20:20,712 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-26 10:20:20,714 [main] INFO  (DfSchemaXmlSerializer#generateXML():364) - ...Getting DB meta data
2014-06-26 10:20:20,717 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-26 10:20:20,718 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-26 10:20:20,719 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-26 10:20:20,731 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2014-06-26 10:20:20,735 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2014-06-26 10:20:20,755 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - 
2014-06-26 10:20:20,755 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2014-06-26 10:20:20,756 [main] INFO  (DfSchemaXmlSerializer#processTable():423) - $ [Table List]
2014-06-26 10:20:20,758 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.follow(TABLE) // フォロー
2014-06-26 10:20:20,803 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.followers(TABLE) // フォロワー
2014-06-26 10:20:20,818 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.login(TABLE) // ログイン
2014-06-26 10:20:20,832 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member(TABLE) // 会員
2014-06-26 10:20:20,846 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_security(TABLE) // 会員セキュリティ
2014-06-26 10:20:20,859 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_withdraw(TABLE) // 会員退会
2014-06-26 10:20:20,872 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.tweet(TABLE) // TWEET
2014-06-26 10:20:20,885 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 
2014-06-26 10:20:20,885 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ [Table Count]
2014-06-26 10:20:20,886 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ 7
2014-06-26 10:20:20,888 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - $ = = = = = = = = = =/
2014-06-26 10:20:20,889 [main] INFO  (DfSchemaXmlSerializer#processTable():439) - 
2014-06-26 10:20:20,896 [main] INFO  (DfSchemaXmlSerializer#processSequence():799) - ...Getting sequences
2014-06-26 10:20:20,902 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2014-06-26 10:20:20,902 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-twitter.xml
2014-06-26 10:20:20,903 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2014-06-26 10:20:20,958 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1487) - ...Loading next schema (schema diff process)
2014-06-26 10:20:20,965 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-26 10:20:21,032 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1492) -  -> different from previous (schema diff)
2014-06-26 10:20:21,035 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1494) - ...Serializing schema-diff:
2014-06-26 10:20:21,035 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1495) -   filePath = ./schema/project-history-twitter.diffmap
2014-06-26 10:20:21,055 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-26 10:20:21,062 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s731ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2014-06-26 10:20:22,103 [main] INFO  (TorqueDocumentationTask#begin():171) - +------------------------------------------+
2014-06-26 10:20:22,105 [main] INFO  (TorqueDocumentationTask#begin():172) - |                                          |
2014-06-26 10:20:22,106 [main] INFO  (TorqueDocumentationTask#begin():173) - |                   Doc                    |
2014-06-26 10:20:22,106 [main] INFO  (TorqueDocumentationTask#begin():181) - |                                          |
2014-06-26 10:20:22,108 [main] INFO  (TorqueDocumentationTask#begin():182) - +------------------------------------------+
2014-06-26 10:20:22,160 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-26 10:20:22,161 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-26 10:20:22,161 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-26 10:20:22,163 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-26 10:20:22,167 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():242) - 
2014-06-26 10:20:22,168 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():243) - * * * * * * * * * * *
2014-06-26 10:20:22,169 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():244) - *                   *
2014-06-26 10:20:22,170 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():245) - *    Schema HTML    *
2014-06-26 10:20:22,171 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - *                   *
2014-06-26 10:20:22,173 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2014-06-26 10:20:22,356 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-26 10:20:22,420 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("doc/ControlDocument.vm", c);
2014-06-26 10:20:22,492 [main] INFO  (Database#doEnableDocumentOutputDirectory():1180) - ...Setting up documentOutputDirectory: ./output/doc
2014-06-26 10:20:22,505 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-26 10:20:22,506 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-26 10:20:22,509 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-26 10:20:22,511 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-26 10:20:22,512 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-26 10:20:22,515 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-26 10:20:22,517 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-26 10:20:22,518 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-26 10:20:22,521 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-26 10:20:22,530 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():150) - ...Loading schema history
2014-06-26 10:20:22,570 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():154) -  -> found history: count=10
2014-06-26 10:20:22,829 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-26 10:20:22,886 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s781ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Doc}
2014-06-26 10:20:25,706 [main] INFO  (TorqueDataModelTask#begin():105) - +------------------------------------------+
2014-06-26 10:20:25,709 [main] INFO  (TorqueDataModelTask#begin():106) - |                                          |
2014-06-26 10:20:25,710 [main] INFO  (TorqueDataModelTask#begin():107) - |                 Generate                 |
2014-06-26 10:20:25,711 [main] INFO  (TorqueDataModelTask#begin():108) - |                                          |
2014-06-26 10:20:25,712 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2014-06-26 10:20:25,751 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-26 10:20:25,752 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-26 10:20:25,753 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-26 10:20:25,754 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-26 10:20:25,772 [main] INFO  (TorqueDataModelTask#setupControlTemplate():160) - 
2014-06-26 10:20:25,773 [main] INFO  (TorqueDataModelTask#setupControlTemplate():161) - ...Using Java control: om/ControlGenerateJava.vm
2014-06-26 10:20:25,929 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-26 10:20:25,971 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlGenerateJava.vm", c);
2014-06-26 10:20:26,094 [main] INFO  (Database#doEnableGenerateOutputDirectory():1148) - ...Setting up generateOutputDirectory: ../src/main/java
2014-06-26 10:20:26,102 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-26 10:20:26,102 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-26 10:20:26,106 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-26 10:20:26,108 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-26 10:20:26,109 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-26 10:20:26,112 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-26 10:20:26,115 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-26 10:20:26,131 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-26 10:20:26,134 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-26 10:20:26,155 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - /=============================
2014-06-26 10:20:26,155 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():60) - ...Initializing include query.
2014-06-26 10:20:26,156 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - String
2014-06-26 10:20:26,157 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Number
2014-06-26 10:20:26,159 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Date
2014-06-26 10:20:26,160 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotEqual -> []
2014-06-26 10:20:26,161 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   InScope -> []
2014-06-26 10:20:26,163 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotInScope -> []
2014-06-26 10:20:26,164 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - OrderBy
2014-06-26 10:20:26,165 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():62) - ========/
2014-06-26 10:20:26,182 [main] INFO  (Database#info():2577) - public void parseAllCommon() {
2014-06-26 10:20:26,186 [main] INFO  (Database#info():2577) -     parse('DBCurrent');
2014-06-26 10:20:26,197 [main] INFO  (Database#info():2577) -     parse('DBFluteConfig');
2014-06-26 10:20:26,227 [main] INFO  (Database#info():2577) -     parse('DBFluteInitializer');
2014-06-26 10:20:26,234 [main] INFO  (Database#info():2577) -     parse('DBMetaInstanceHandler');
2014-06-26 10:20:26,252 [main] INFO  (Database#info():2577) -     parse('EntityDefinedCommonColumn');
2014-06-26 10:20:26,258 [main] INFO  (Database#info():2577) -     parse('ImplementedBehaviorSelector');
2014-06-26 10:20:26,265 [main] INFO  (Database#info():2577) -     parse('ImplementedCommonColumnAutoSetupper');
2014-06-26 10:20:26,273 [main] INFO  (Database#info():2577) -     parse('ImplementedInvokerAssistant');
2014-06-26 10:20:26,280 [main] INFO  (Database#info():2577) -     parse('ImplementedSqlClauseCreator');
2014-06-26 10:20:26,284 [main] INFO  (Database#info():2577) - }
2014-06-26 10:20:26,285 [main] INFO  (Database#info():2577) - public void parseContainerConfig() {
2014-06-26 10:20:26,286 [main] INFO  (Database#info():2577) -     parse('../resources/dbflute.dicon')
2014-06-26 10:20:26,295 [main] INFO  (Database#info():2577) - }
2014-06-26 10:20:26,301 [main] INFO  (DfOldClassHandler#info():886) - public void deleteOldTableClass() {
2014-06-26 10:20:26,322 [main] INFO  (DfOldClassHandler#info():886) - }
2014-06-26 10:20:26,323 [main] INFO  (Database#info():2577) - public void parseTableClass() {
2014-06-26 10:20:26,324 [main] INFO  (Database#info():2577) -     parse('follow');
2014-06-26 10:20:26,595 [main] INFO  (Database#info():2577) -     parse('followers');
2014-06-26 10:20:26,761 [main] INFO  (Database#info():2577) -     parse('login');
2014-06-26 10:20:26,951 [main] INFO  (Database#info():2577) -     parse('member');
2014-06-26 10:20:27,258 [main] INFO  (Database#info():2577) -     parse('member_security');
2014-06-26 10:20:27,353 [main] INFO  (Database#info():2577) -     parse('member_withdraw');
2014-06-26 10:20:27,441 [main] INFO  (Database#info():2577) -     parse('tweet');
2014-06-26 10:20:27,525 [main] INFO  (Database#info():2577) - }
2014-06-26 10:20:27,525 [main] INFO  (Database#info():2577) -  
2014-06-26 10:20:27,550 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-26 10:20:27,556 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s847ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Generate}
2014-06-26 10:20:28,806 [main] INFO  (DfOutsideSqlTestTask#begin():72) - +------------------------------------------+
2014-06-26 10:20:28,810 [main] INFO  (DfOutsideSqlTestTask#begin():73) - |                                          |
2014-06-26 10:20:28,812 [main] INFO  (DfOutsideSqlTestTask#begin():74) - |              OutsideSqlTest              |
2014-06-26 10:20:28,814 [main] INFO  (DfOutsideSqlTestTask#begin():75) - |                                          |
2014-06-26 10:20:28,816 [main] INFO  (DfOutsideSqlTestTask#begin():76) - +------------------------------------------+
2014-06-26 10:20:28,880 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-26 10:20:28,882 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-26 10:20:28,883 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-26 10:20:28,884 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-26 10:20:28,943 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-26 10:20:28,952 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s140ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2014-06-26 10:20:30,401 [main] INFO  (DfSql2EntityTask#begin():100) - +------------------------------------------+
2014-06-26 10:20:30,405 [main] INFO  (DfSql2EntityTask#begin():101) - |                                          |
2014-06-26 10:20:30,405 [main] INFO  (DfSql2EntityTask#begin():102) - |                Sql2Entity                |
2014-06-26 10:20:30,406 [main] INFO  (DfSql2EntityTask#begin():103) - |                                          |
2014-06-26 10:20:30,407 [main] INFO  (DfSql2EntityTask#begin():104) - +------------------------------------------+
2014-06-26 10:20:30,461 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-26 10:20:30,462 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-26 10:20:30,462 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-26 10:20:30,464 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-26 10:20:30,484 [main] INFO  (DfSql2EntityTask#setupControlTemplate():170) - 
2014-06-26 10:20:30,485 [main] INFO  (DfSql2EntityTask#setupControlTemplate():171) - ...Using Java control: om/ControlSql2EntityJava.vm
2014-06-26 10:20:30,497 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-26 10:20:30,575 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-26 10:20:30,782 [main] INFO  (DfSql2EntityTask#initControlContext():301) - 
2014-06-26 10:20:30,782 [main] INFO  (DfSql2EntityTask#initControlContext():302) - ...Preparing generation of customize-entities and parameter-beans
2014-06-26 10:20:30,783 [main] INFO  (DfSql2EntityTask#initControlContext():303) - * * * * * * * * * *
2014-06-26 10:20:30,784 [main] INFO  (DfSql2EntityTask#initControlContext():304) - * CustomizeEntity *
2014-06-26 10:20:30,786 [main] INFO  (DfSql2EntityTask#initControlContext():305) - * * * * * * * * * *
2014-06-26 10:20:30,787 [main] INFO  (DfSql2EntityTask#showParameterBean():871) - * * * * * * * * *
2014-06-26 10:20:30,788 [main] INFO  (DfSql2EntityTask#showParameterBean():872) - * ParameterBean *
2014-06-26 10:20:30,790 [main] INFO  (DfSql2EntityTask#showParameterBean():873) - * * * * * * * * *
2014-06-26 10:20:30,796 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlSql2EntityJava.vm", c);
2014-06-26 10:20:30,935 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1164) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2014-06-26 10:20:30,940 [main] INFO  (DfOldClassHandler#info():886) - public void deleteOldCustomizeClass() {
2014-06-26 10:20:30,958 [main] INFO  (DfOldClassHandler#info():886) - }
2014-06-26 10:20:30,959 [main] INFO  (Database#info():2577) - public void parseCustomizeEntity() {
2014-06-26 10:20:30,964 [main] INFO  (Database#info():2577) - }
2014-06-26 10:20:30,995 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():293) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2014-06-26 10:20:31,008 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-26 10:20:31,019 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s613ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2014-06-26 10:25:05,712 [main] INFO  (DfReplaceSchemaTask#begin():87) - +------------------------------------------+
2014-06-26 10:25:05,715 [main] INFO  (DfReplaceSchemaTask#begin():88) - |                                          |
2014-06-26 10:25:05,716 [main] INFO  (DfReplaceSchemaTask#begin():89) - |              ReplaceSchema               |
2014-06-26 10:25:05,735 [main] INFO  (DfReplaceSchemaTask#begin():97) - |                                          |
2014-06-26 10:25:05,735 [main] INFO  (DfReplaceSchemaTask#begin():98) - +------------------------------------------+
2014-06-26 10:25:05,737 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():329) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2014-06-26 10:25:07,606 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-26 10:25:07,608 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-26 10:25:07,609 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-26 10:25:07,611 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-26 10:25:07,620 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-26 10:25:07,864 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-26 10:25:07,865 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-26 10:25:07,885 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():207) - 
2014-06-26 10:25:07,885 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():208) - * * * * * * * * * * *
2014-06-26 10:25:07,886 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():209) - *                   *
2014-06-26 10:25:07,887 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():210) - * Initialize Schema *
2014-06-26 10:25:07,889 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():211) - *                   *
2014-06-26 10:25:07,890 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():212) - * * * * * * * * * * *
2014-06-26 10:25:07,912 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-26 10:25:07,913 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-26 10:25:07,913 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-26 10:25:07,959 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table follow
2014-06-26 10:25:07,996 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table followers
2014-06-26 10:25:08,022 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table login
2014-06-26 10:25:08,054 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_security
2014-06-26 10:25:08,096 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_withdraw
2014-06-26 10:25:08,141 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table tweet
2014-06-26 10:25:08,171 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_1
2014-06-26 10:25:08,189 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table followers drop foreign key followers_ibfk_1
2014-06-26 10:25:08,199 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table login drop foreign key login_ibfk_1
2014-06-26 10:25:08,209 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_security drop foreign key member_security_ibfk_1
2014-06-26 10:25:08,219 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_withdraw drop foreign key member_withdraw_ibfk_1
2014-06-26 10:25:08,229 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table tweet drop foreign key tweet_ibfk_1
2014-06-26 10:25:08,244 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table follow
2014-06-26 10:25:08,256 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table followers
2014-06-26 10:25:08,272 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table login
2014-06-26 10:25:08,296 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member
2014-06-26 10:25:08,316 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_security
2014-06-26 10:25:08,334 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_withdraw
2014-06-26 10:25:08,353 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table tweet
2014-06-26 10:25:08,461 [main] INFO  (DfCreateSchemaProcess#createSchema():244) - 
2014-06-26 10:25:08,463 [main] INFO  (DfCreateSchemaProcess#createSchema():245) - * * * * * * * * *
2014-06-26 10:25:08,465 [main] INFO  (DfCreateSchemaProcess#createSchema():246) - *               *
2014-06-26 10:25:08,469 [main] INFO  (DfCreateSchemaProcess#createSchema():247) - * Create Schema *
2014-06-26 10:25:08,470 [main] INFO  (DfCreateSchemaProcess#createSchema():248) - *               *
2014-06-26 10:25:08,471 [main] INFO  (DfCreateSchemaProcess#createSchema():249) - * * * * * * * * *
2014-06-26 10:25:08,476 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-00-system.sql
2014-06-26 10:25:08,479 [main] INFO  (DfReplaceSchemaProperties#checkTargetEnvType():277) - ...Checking envType: ut in [ut]
2014-06-26 10:25:08,480 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:checkEnv(ut)#

-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database twitter
2014-06-26 10:25:08,488 [main] INFO  (DfCreateSchemaProcess$1#dispatch():273) - ...Creating a connection to system
2014-06-26 10:25:08,490 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():514) - ...Creating a connection for additional user: root
2014-06-26 10:25:08,502 [main] INFO  (DfCreateSchemaProcess$1#dispatch():299) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2014-06-26 10:25:08,503 [main] INFO  (DfCreateSchemaProcess$1#dispatch():301) -  -> Can't create database 'twitter'; database exists
2014-06-26 10:25:08,505 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():411) - ...Reviving the user 'system' until the end of this SQL file
2014-06-26 10:25:08,506 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on twitter.*
  to twitter@localhost identified by 'twitter'
2014-06-26 10:25:08,514 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2014-06-26 10:25:08,518 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2014-06-26 10:25:08,518 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-10-basic.sql
2014-06-26 10:25:08,519 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():348) - ...Saying good-bye to the user 'system' again
2014-06-26 10:25:08,520 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():352) - ...Clearing revived users
2014-06-26 10:25:08,522 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():359) - ...Coming back to the main user from the user 'system'
2014-06-26 10:25:08,524 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FOLLOW
(
	FOLLOW_ID INT(100) NOT NULL UNIQUE COMMENT 'フォローID',
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PRIMARY KEY (FOLLOW_ID)
) COMMENT = 'フォロー'
2014-06-26 10:25:08,572 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE FOLLOWERS
(
	FOLLOWERSID INT(100) NOT NULL UNIQUE COMMENT 'フォロワーID',
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PRIMARY KEY (FOLLOWERSID)
) COMMENT = 'フォロワー'
2014-06-26 10:25:08,627 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE LOGIN
(
	LOGIN_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ログインID : ログインした瞬間のID
',
	LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	PRIMARY KEY (LOGIN_ID)
) COMMENT = 'ログイン'
2014-06-26 10:25:08,693 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER
(
	MEMBER_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員のID
',
	EMAIL_ADDRESS VARCHAR(100) NOT NULL UNIQUE COMMENT 'メールアドレス : 会員のメールアドレス',
	USERNAME VARCHAR(50) NOT NULL UNIQUE COMMENT '会員ユーザ名 : 会員のユーザ名',
	UPDATE_DATETIME DATETIME COMMENT '更新日時',
	BIRTHDATE DATE COMMENT '生年月日 : 会員の生年月日',
	PROFILE VARCHAR(200) COMMENT 'プロフィール',
	REGESTER_DATETIME DATETIME NOT NULL COMMENT '登録日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員'
2014-06-26 10:25:08,786 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PASSWORD VARCHAR(50) NOT NULL COMMENT 'パスワード',
	PASSWORD_UPDATE_DATETIME DATETIME COMMENT 'パスワード更新日時',
	PASSWORD_REGESTERATION_DATETIME DATETIME NOT NULL COMMENT 'パスワード登録日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員セキュリティ'
2014-06-26 10:25:08,852 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_WITHDRAW
(
	WITHDRAWAL_REASON_ID INT COMMENT '退会理由ID : 会員の退会理由ID',
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト',
	WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT 'withdrawal_datetime : 退会日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員退会'
2014-06-26 10:25:08,910 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	TWEET_DATETIME DATETIME NOT NULL COMMENT 'TWEET日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-06-26 10:25:08,969 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FOLLOW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-26 10:25:09,067 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOWERS
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-26 10:25:09,172 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-26 10:25:09,266 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-26 10:25:09,360 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_WITHDRAW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-26 10:25:09,449 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-26 10:25:09,544 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=13 failure=0
2014-06-26 10:25:09,546 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=15 failure=0 (in 2 files)
2014-06-26 10:25:09,548 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-06-26 10:25:09,603 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-06-26 10:25:09,604 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-06-26 10:25:09,605 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-06-26 10:25:09,606 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-06-26 10:25:09,608 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-06-26 10:25:09,609 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-06-26 10:25:09,632 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-06-26 10:25:09,632 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-06-26 10:25:09,633 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-06-26 10:25:09,910 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-26 10:25:09,911 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-26 10:25:09,912 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-26 10:25:09,968 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{1, Stojkovic@gmail.com, Pixy, 1965/03/03, 2014-06-24 00:00:00.0, 2014-06-26 10:25:09.967}
2014-06-26 10:25:10,014 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{2, Savicevic@gmail.com, Genius, 1966/09/15, 2014-06-25 00:00:00.0, 2014-06-26 10:25:10.014}
2014-06-26 10:25:10,016 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{3, Mijatovic@gmail.com, Mijato, null, 2014-06-26 00:00:00.0, 2014-06-26 10:25:10.016}
2014-06-26 10:25:10,017 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{4, Stankovic@gmail.com, Stanko, 1978/09/11, 2014-06-27 00:00:00.0, 2014-06-26 10:25:10.017}
2014-06-26 10:25:10,019 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{5, Milosevic@gmail.com, Milose, null, 2014-06-28 00:00:00.0, 2014-06-26 10:25:10.019}
2014-06-26 10:25:10,020 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{6, Mihajlovic@gmail.com, FreeKick, 1969/02/20, 2014-06-29 00:00:00.0, 2014-06-26 10:25:10.02}
2014-06-26 10:25:10,021 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{7, アカギ@gmail.com, Akagi, null, 2014-06-30 00:00:00.0, 2014-06-26 10:25:10.021}
2014-06-26 10:25:10,024 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{8, Kezman@gmial.com, RedCard, null, 2014-07-01 00:00:00.0, 2014-06-26 10:25:10.024}
2014-06-26 10:25:10,025 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{9, Maslovar@gmail.com, JEFUnited, 1967/02/20, 2014-07-02 00:00:00.0, 2014-06-26 10:25:10.025}
2014-06-26 10:25:10,027 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{10, 諸葛亮孔明@gmail.com, ShokatsuGoGo, null, 2014-07-03 00:00:00.0, 2014-06-26 10:25:10.026}
2014-06-26 10:25:10,029 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{11, Boban@gmail.com, Boban, 1968/10/08, 2014-07-04 00:00:00.0, 2014-06-26 10:25:10.029}
2014-06-26 10:25:10,031 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{12, Suker@gmail.com, Suker, 1968/01/01, 2014-07-05 00:00:00.0, 2014-06-26 10:25:10.031}
2014-06-26 10:25:10,032 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{13, Jarni@gmail.com, Jarni, 1968/10/26, 2014-07-06 00:00:00.0, 2014-06-26 10:25:10.032}
2014-06-26 10:25:10,034 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{14, Boksic@gmail.com, Boksic, 1970/01/21, 2014-07-07 00:00:00.0, 2014-06-26 10:25:10.034}
2014-06-26 10:25:10,035 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{15, Prosinecki@gmail.com, Prosinecki, 1969/01/12, 2014-07-08 00:00:00.0, 2014-06-26 10:25:10.035}
2014-06-26 10:25:10,037 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{16, RobeltKovac@gmail.com, RobeltKovac, null, 2014-07-09 00:00:00.0, 2014-06-26 10:25:10.037}
2014-06-26 10:25:10,038 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{17, NikoKovac@gmail.com, NikoKovac, null, 2014-07-10 00:00:00.0, 2014-06-26 10:25:10.038}
2014-06-26 10:25:10,039 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{18, Jovanovic@gmail.com, Jovano, 1981/04/18, 2014-07-11 00:00:00.0, 2014-06-26 10:25:10.039}
2014-06-26 10:25:10,041 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{19, Milko@gmail.com, Milko, 1974/09/10, 2014-07-12 00:00:00.0, 2014-06-26 10:25:10.041}
2014-06-26 10:25:10,042 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{20, 諸葛瑾子瑜@gmail.com, ShokatsuKinKin, null, 2014-07-13 00:00:00.0, 2014-06-26 10:25:10.042}
2014-06-26 10:25:10,064 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 20 rows are loaded to MEMBER
2014-06-26 10:25:10,067 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 3, 2006/12/24 23:59:59}
2014-06-26 10:25:10,068 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 6, 2007/11/11 16:16:16}
2014-06-26 10:25:10,070 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{3, 1, 2006/12/23 22:56:29}
2014-06-26 10:25:10,070 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{4, 6, 2007/11/01 02:13:00}
2014-06-26 10:25:10,072 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{5, 7, 2006/05/24 23:12:59}
2014-06-26 10:25:10,073 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{6, 6, 2005/11/11 16:32:01}
2014-06-26 10:25:10,074 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{7, 6, 2006/01/28 23:59:59}
2014-06-26 10:25:10,076 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{8, 6, 2007/11/09 16:23:00}
2014-06-26 10:25:10,077 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{9, 8, 2006/12/22 23:59:59}
2014-06-26 10:25:10,078 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{10, 6, 2007/11/11 09:01:00}
2014-06-26 10:25:10,080 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{11, 1, 2006/12/23 23:59:59}
2014-06-26 10:25:10,081 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{12, 9, 2007/11/15 12:43:00}
2014-06-26 10:25:10,082 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{13, 10, 2006/12/24 23:59:59}
2014-06-26 10:25:10,084 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{14, 6, 2007/04/01 16:23:01}
2014-06-26 10:25:10,085 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{15, 7, 2006/12/24 23:59:20}
2014-06-26 10:25:10,087 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{16, 6, 2007/05/01 12:23:02}
2014-06-26 10:25:10,088 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{17, 7, 2006/12/24 23:59:21}
2014-06-26 10:25:10,089 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{18, 6, 2007/06/11 17:23:03}
2014-06-26 10:25:10,091 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{19, 4, 2006/12/24 23:59:22}
2014-06-26 10:25:10,092 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{20, 3, 2007/11/01 16:12:04}
2014-06-26 10:25:10,093 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{21, 11, 2006/12/24 23:59:23}
2014-06-26 10:25:10,095 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{22, 1, 2007/11/01 16:23:05}
2014-06-26 10:25:10,096 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{23, 9, 2006/12/24 23:59:24}
2014-06-26 10:25:10,098 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{24, 8, 2007/11/01 16:23:06}
2014-06-26 10:25:10,099 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{25, 7, 2007/12/24 11:59:25}
2014-06-26 10:25:10,101 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{26, 6, 2007/06/21 01:23:57}
2014-06-26 10:25:10,102 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{27, 5, 2006/12/24 23:59:26}
2014-06-26 10:25:10,103 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{28, 3, 2007/11/01 16:23:08}
2014-06-26 10:25:10,104 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{29, 3, 2006/12/24 23:59:27}
2014-06-26 10:25:10,106 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{30, 10, 2007/11/01 16:23:09}
2014-06-26 10:25:10,107 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-26 10:25:10,120 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 30 rows are loaded to LOGIN
2014-06-26 10:25:10,121 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014/06/23, null}
2014-06-26 10:25:10,123 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014/06/24, null}
2014-06-26 10:25:10,124 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{3, ccc, 2014/06/25, 2014/06/25}
2014-06-26 10:25:10,125 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{4, ddd, 2014/06/26, null}
2014-06-26 10:25:10,127 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{5, eee2, 2014/06/27, null}
2014-06-26 10:25:10,128 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{6, fff, 2014/06/28, null}
2014-06-26 10:25:10,129 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{7, ggg3, 2014/06/29, 2014/06/25}
2014-06-26 10:25:10,130 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{8, hhh555, 2014/06/30, null}
2014-06-26 10:25:10,131 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{9, iii, 2014/07/01, 2014/06/25}
2014-06-26 10:25:10,133 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{10, jjj, 2014/07/02, null}
2014-06-26 10:25:10,135 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-26 10:25:10,147 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to MEMBER_SECURITY
2014-06-26 10:25:10,148 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 2013-06-13 00:00:00.0}
2014-06-26 10:25:10,151 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{2, 2345, 清君頼りになるー！, 2013-06-14 00:00:00.0}
2014-06-26 10:25:10,153 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{3, 3456, GLD, 2013-06-15 00:00:00.0}
2014-06-26 10:25:10,154 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{4, 875, BRZ, 2013-06-16 00:00:00.0}
2014-06-26 10:25:10,155 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{5, 1111, BRZ, 2013-06-17 00:00:00.0}
2014-06-26 10:25:10,157 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{6, 5422, SIL, 2013-06-18 00:00:00.0}
2014-06-26 10:25:10,158 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{7, 24678, SIL, 2013-06-19 00:00:00.0}
2014-06-26 10:25:10,159 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{8, 234, SIL, 2013-06-20 00:00:00.0}
2014-06-26 10:25:10,161 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{9, 3, SIL, 2013-06-21 00:00:00.0}
2014-06-26 10:25:10,162 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{10, 98765, PLT, 2013-06-22 00:00:00.0}
2014-06-26 10:25:10,164 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-26 10:25:10,173 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to TWEET
2014-06-26 10:25:10,175 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{3, 1, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123}
2014-06-26 10:25:10,180 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{6, 1, null, 2007/11/11 16:00:00.456}
2014-06-26 10:25:10,183 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{13, 2, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789}
2014-06-26 10:25:10,187 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{16, 3, コバチが２人いるため, 2007/11/13 16:00:00.456}
2014-06-26 10:25:10,197 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 4 rows are loaded to MEMBER_WITHDRAW
2014-06-26 10:25:10,202 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():379) - ...Checking implicit set of classification
2014-06-26 10:25:10,221 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - 
2014-06-26 10:25:10,222 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * * * * * * * **
2014-06-26 10:25:10,222 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2014-06-26 10:25:10,224 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * Take Finally *
2014-06-26 10:25:10,225 [main] INFO  (DfTakeFinallyProcess#takeFinally():225) - *              *
2014-06-26 10:25:10,227 [main] INFO  (DfTakeFinallyProcess#takeFinally():226) - * * * * * * * **
2014-06-26 10:25:10,239 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: take-finally.sql
2014-06-26 10:25:10,241 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2014-06-26 10:25:10,242 [main] INFO  (DfSqlFileFireMan#fire():90) - {Take Finally}: success=0 failure=0 (in 1 files)
2014-06-26 10:25:10,244 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-26 10:25:10,250 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m04s533ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=15 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=1
  (ut)
  o 20-member.xls

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-06-26 10:25:11,162 [main] INFO  (TorqueJDBCTransformTask#begin():100) - +------------------------------------------+
2014-06-26 10:25:11,165 [main] INFO  (TorqueJDBCTransformTask#begin():101) - |                                          |
2014-06-26 10:25:11,166 [main] INFO  (TorqueJDBCTransformTask#begin():102) - |                   JDBC                   |
2014-06-26 10:25:11,166 [main] INFO  (TorqueJDBCTransformTask#begin():103) - |                                          |
2014-06-26 10:25:11,168 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2014-06-26 10:25:11,208 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-26 10:25:11,209 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-26 10:25:11,210 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-26 10:25:11,211 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-26 10:25:11,257 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2014-06-26 10:25:11,257 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2014-06-26 10:25:11,258 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1469) - ...Loading previous schema (schema diff process)
2014-06-26 10:25:11,268 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-26 10:25:11,329 [main] INFO  (DfSchemaXmlSerializer#generateXML():361) - ...Getting DB connection
2014-06-26 10:25:11,334 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-26 10:25:11,517 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-26 10:25:11,518 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-26 10:25:11,521 [main] INFO  (DfSchemaXmlSerializer#generateXML():364) - ...Getting DB meta data
2014-06-26 10:25:11,523 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-26 10:25:11,524 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-26 10:25:11,525 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-26 10:25:11,536 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2014-06-26 10:25:11,539 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2014-06-26 10:25:11,552 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - 
2014-06-26 10:25:11,553 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2014-06-26 10:25:11,554 [main] INFO  (DfSchemaXmlSerializer#processTable():423) - $ [Table List]
2014-06-26 10:25:11,555 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.follow(TABLE) // フォロー
2014-06-26 10:25:11,591 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.followers(TABLE) // フォロワー
2014-06-26 10:25:11,605 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.login(TABLE) // ログイン
2014-06-26 10:25:11,619 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member(TABLE) // 会員
2014-06-26 10:25:11,633 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_security(TABLE) // 会員セキュリティ
2014-06-26 10:25:11,646 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_withdraw(TABLE) // 会員退会
2014-06-26 10:25:11,659 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.tweet(TABLE) // TWEET
2014-06-26 10:25:11,674 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 
2014-06-26 10:25:11,675 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ [Table Count]
2014-06-26 10:25:11,675 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ 7
2014-06-26 10:25:11,677 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - $ = = = = = = = = = =/
2014-06-26 10:25:11,678 [main] INFO  (DfSchemaXmlSerializer#processTable():439) - 
2014-06-26 10:25:11,681 [main] INFO  (DfSchemaXmlSerializer#processSequence():799) - ...Getting sequences
2014-06-26 10:25:11,685 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2014-06-26 10:25:11,686 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-twitter.xml
2014-06-26 10:25:11,686 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2014-06-26 10:25:11,702 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1487) - ...Loading next schema (schema diff process)
2014-06-26 10:25:11,704 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-26 10:25:11,743 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1502) -  -> same as previous (schema diff)
2014-06-26 10:25:11,744 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-26 10:25:11,751 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s584ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2014-06-26 10:25:12,702 [main] INFO  (TorqueDocumentationTask#begin():171) - +------------------------------------------+
2014-06-26 10:25:12,705 [main] INFO  (TorqueDocumentationTask#begin():172) - |                                          |
2014-06-26 10:25:12,705 [main] INFO  (TorqueDocumentationTask#begin():173) - |                   Doc                    |
2014-06-26 10:25:12,706 [main] INFO  (TorqueDocumentationTask#begin():181) - |                                          |
2014-06-26 10:25:12,708 [main] INFO  (TorqueDocumentationTask#begin():182) - +------------------------------------------+
2014-06-26 10:25:12,754 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-26 10:25:12,755 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-26 10:25:12,756 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-26 10:25:12,757 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-26 10:25:12,763 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():242) - 
2014-06-26 10:25:12,763 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():243) - * * * * * * * * * * *
2014-06-26 10:25:12,764 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():244) - *                   *
2014-06-26 10:25:12,766 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():245) - *    Schema HTML    *
2014-06-26 10:25:12,767 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - *                   *
2014-06-26 10:25:12,768 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2014-06-26 10:25:12,952 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-26 10:25:13,015 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("doc/ControlDocument.vm", c);
2014-06-26 10:25:13,089 [main] INFO  (Database#doEnableDocumentOutputDirectory():1180) - ...Setting up documentOutputDirectory: ./output/doc
2014-06-26 10:25:13,099 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-26 10:25:13,100 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-26 10:25:13,102 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-26 10:25:13,104 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-26 10:25:13,104 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-26 10:25:13,106 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-26 10:25:13,109 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-26 10:25:13,109 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-26 10:25:13,112 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-26 10:25:13,121 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():150) - ...Loading schema history
2014-06-26 10:25:13,157 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():154) -  -> found history: count=10
2014-06-26 10:25:13,366 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-26 10:25:13,381 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s676ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Doc}
2014-06-26 10:25:16,300 [main] INFO  (TorqueDataModelTask#begin():105) - +------------------------------------------+
2014-06-26 10:25:16,303 [main] INFO  (TorqueDataModelTask#begin():106) - |                                          |
2014-06-26 10:25:16,304 [main] INFO  (TorqueDataModelTask#begin():107) - |                 Generate                 |
2014-06-26 10:25:16,305 [main] INFO  (TorqueDataModelTask#begin():108) - |                                          |
2014-06-26 10:25:16,306 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2014-06-26 10:25:16,350 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-26 10:25:16,351 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-26 10:25:16,351 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-26 10:25:16,353 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-26 10:25:16,372 [main] INFO  (TorqueDataModelTask#setupControlTemplate():160) - 
2014-06-26 10:25:16,373 [main] INFO  (TorqueDataModelTask#setupControlTemplate():161) - ...Using Java control: om/ControlGenerateJava.vm
2014-06-26 10:25:16,512 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-26 10:25:16,553 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlGenerateJava.vm", c);
2014-06-26 10:25:16,663 [main] INFO  (Database#doEnableGenerateOutputDirectory():1148) - ...Setting up generateOutputDirectory: ../src/main/java
2014-06-26 10:25:16,671 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-26 10:25:16,673 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-26 10:25:16,676 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-26 10:25:16,679 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-26 10:25:16,681 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-26 10:25:16,684 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-26 10:25:16,688 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-26 10:25:16,688 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-26 10:25:16,692 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-26 10:25:16,714 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - /=============================
2014-06-26 10:25:16,714 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():60) - ...Initializing include query.
2014-06-26 10:25:16,715 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - String
2014-06-26 10:25:16,717 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Number
2014-06-26 10:25:16,718 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Date
2014-06-26 10:25:16,719 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotEqual -> []
2014-06-26 10:25:16,721 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   InScope -> []
2014-06-26 10:25:16,722 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotInScope -> []
2014-06-26 10:25:16,723 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - OrderBy
2014-06-26 10:25:16,725 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():62) - ========/
2014-06-26 10:25:16,745 [main] INFO  (Database#info():2577) - public void parseAllCommon() {
2014-06-26 10:25:16,748 [main] INFO  (Database#info():2577) -     parse('DBCurrent');
2014-06-26 10:25:16,757 [main] INFO  (Database#info():2577) -     parse('DBFluteConfig');
2014-06-26 10:25:16,780 [main] INFO  (Database#info():2577) -     parse('DBFluteInitializer');
2014-06-26 10:25:16,785 [main] INFO  (Database#info():2577) -     parse('DBMetaInstanceHandler');
2014-06-26 10:25:16,807 [main] INFO  (Database#info():2577) -     parse('EntityDefinedCommonColumn');
2014-06-26 10:25:16,812 [main] INFO  (Database#info():2577) -     parse('ImplementedBehaviorSelector');
2014-06-26 10:25:16,817 [main] INFO  (Database#info():2577) -     parse('ImplementedCommonColumnAutoSetupper');
2014-06-26 10:25:16,822 [main] INFO  (Database#info():2577) -     parse('ImplementedInvokerAssistant');
2014-06-26 10:25:16,826 [main] INFO  (Database#info():2577) -     parse('ImplementedSqlClauseCreator');
2014-06-26 10:25:16,828 [main] INFO  (Database#info():2577) - }
2014-06-26 10:25:16,829 [main] INFO  (Database#info():2577) - public void parseContainerConfig() {
2014-06-26 10:25:16,831 [main] INFO  (Database#info():2577) -     parse('../resources/dbflute.dicon')
2014-06-26 10:25:16,841 [main] INFO  (Database#info():2577) - }
2014-06-26 10:25:16,847 [main] INFO  (DfOldClassHandler#info():886) - public void deleteOldTableClass() {
2014-06-26 10:25:16,876 [main] INFO  (DfOldClassHandler#info():886) - }
2014-06-26 10:25:16,876 [main] INFO  (Database#info():2577) - public void parseTableClass() {
2014-06-26 10:25:16,877 [main] INFO  (Database#info():2577) -     parse('follow');
2014-06-26 10:25:17,206 [main] INFO  (Database#info():2577) -     parse('followers');
2014-06-26 10:25:17,427 [main] INFO  (Database#info():2577) -     parse('login');
2014-06-26 10:25:17,667 [main] INFO  (Database#info():2577) -     parse('member');
2014-06-26 10:25:17,921 [main] INFO  (Database#info():2577) -     parse('member_security');
2014-06-26 10:25:18,041 [main] INFO  (Database#info():2577) -     parse('member_withdraw');
2014-06-26 10:25:18,132 [main] INFO  (Database#info():2577) -     parse('tweet');
2014-06-26 10:25:18,225 [main] INFO  (Database#info():2577) - }
2014-06-26 10:25:18,226 [main] INFO  (Database#info():2577) -  
2014-06-26 10:25:18,245 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-26 10:25:18,251 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s948ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Generate}
2014-06-26 10:25:19,107 [main] INFO  (DfOutsideSqlTestTask#begin():72) - +------------------------------------------+
2014-06-26 10:25:19,109 [main] INFO  (DfOutsideSqlTestTask#begin():73) - |                                          |
2014-06-26 10:25:19,110 [main] INFO  (DfOutsideSqlTestTask#begin():74) - |              OutsideSqlTest              |
2014-06-26 10:25:19,110 [main] INFO  (DfOutsideSqlTestTask#begin():75) - |                                          |
2014-06-26 10:25:19,112 [main] INFO  (DfOutsideSqlTestTask#begin():76) - +------------------------------------------+
2014-06-26 10:25:19,153 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-26 10:25:19,154 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-26 10:25:19,154 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-26 10:25:19,156 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-26 10:25:19,190 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-26 10:25:19,195 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s084ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2014-06-26 10:25:20,041 [main] INFO  (DfSql2EntityTask#begin():100) - +------------------------------------------+
2014-06-26 10:25:20,045 [main] INFO  (DfSql2EntityTask#begin():101) - |                                          |
2014-06-26 10:25:20,045 [main] INFO  (DfSql2EntityTask#begin():102) - |                Sql2Entity                |
2014-06-26 10:25:20,046 [main] INFO  (DfSql2EntityTask#begin():103) - |                                          |
2014-06-26 10:25:20,048 [main] INFO  (DfSql2EntityTask#begin():104) - +------------------------------------------+
2014-06-26 10:25:20,095 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-26 10:25:20,096 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-26 10:25:20,097 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-26 10:25:20,098 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-26 10:25:20,117 [main] INFO  (DfSql2EntityTask#setupControlTemplate():170) - 
2014-06-26 10:25:20,117 [main] INFO  (DfSql2EntityTask#setupControlTemplate():171) - ...Using Java control: om/ControlSql2EntityJava.vm
2014-06-26 10:25:20,126 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-26 10:25:20,179 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-26 10:25:20,357 [main] INFO  (DfSql2EntityTask#initControlContext():301) - 
2014-06-26 10:25:20,357 [main] INFO  (DfSql2EntityTask#initControlContext():302) - ...Preparing generation of customize-entities and parameter-beans
2014-06-26 10:25:20,358 [main] INFO  (DfSql2EntityTask#initControlContext():303) - * * * * * * * * * *
2014-06-26 10:25:20,360 [main] INFO  (DfSql2EntityTask#initControlContext():304) - * CustomizeEntity *
2014-06-26 10:25:20,361 [main] INFO  (DfSql2EntityTask#initControlContext():305) - * * * * * * * * * *
2014-06-26 10:25:20,362 [main] INFO  (DfSql2EntityTask#showParameterBean():871) - * * * * * * * * *
2014-06-26 10:25:20,364 [main] INFO  (DfSql2EntityTask#showParameterBean():872) - * ParameterBean *
2014-06-26 10:25:20,366 [main] INFO  (DfSql2EntityTask#showParameterBean():873) - * * * * * * * * *
2014-06-26 10:25:20,371 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlSql2EntityJava.vm", c);
2014-06-26 10:25:20,466 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1164) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2014-06-26 10:25:20,469 [main] INFO  (DfOldClassHandler#info():886) - public void deleteOldCustomizeClass() {
2014-06-26 10:25:20,480 [main] INFO  (DfOldClassHandler#info():886) - }
2014-06-26 10:25:20,480 [main] INFO  (Database#info():2577) - public void parseCustomizeEntity() {
2014-06-26 10:25:20,483 [main] INFO  (Database#info():2577) - }
2014-06-26 10:25:20,496 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():293) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2014-06-26 10:25:20,504 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-26 10:25:20,510 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s466ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2014-06-26 11:00:37,343 [main] INFO  (DfReplaceSchemaTask#begin():87) - +------------------------------------------+
2014-06-26 11:00:37,346 [main] INFO  (DfReplaceSchemaTask#begin():88) - |                                          |
2014-06-26 11:00:37,347 [main] INFO  (DfReplaceSchemaTask#begin():89) - |              ReplaceSchema               |
2014-06-26 11:00:37,369 [main] INFO  (DfReplaceSchemaTask#begin():97) - |                                          |
2014-06-26 11:00:37,369 [main] INFO  (DfReplaceSchemaTask#begin():98) - +------------------------------------------+
2014-06-26 11:00:37,372 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():329) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2014-06-26 11:00:39,788 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-26 11:00:39,791 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-26 11:00:39,793 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-26 11:00:39,795 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-26 11:00:39,820 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-26 11:00:40,061 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-26 11:00:40,062 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-26 11:00:40,082 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():207) - 
2014-06-26 11:00:40,082 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():208) - * * * * * * * * * * *
2014-06-26 11:00:40,083 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():209) - *                   *
2014-06-26 11:00:40,085 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():210) - * Initialize Schema *
2014-06-26 11:00:40,087 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():211) - *                   *
2014-06-26 11:00:40,088 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():212) - * * * * * * * * * * *
2014-06-26 11:00:40,106 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-26 11:00:40,107 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-26 11:00:40,108 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-26 11:00:40,154 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table follow
2014-06-26 11:00:40,211 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table followers
2014-06-26 11:00:40,263 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table login
2014-06-26 11:00:40,299 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_security
2014-06-26 11:00:40,342 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_withdraw
2014-06-26 11:00:40,392 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table tweet
2014-06-26 11:00:40,429 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_1
2014-06-26 11:00:40,447 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table followers drop foreign key followers_ibfk_1
2014-06-26 11:00:40,462 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table login drop foreign key login_ibfk_1
2014-06-26 11:00:40,478 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_security drop foreign key member_security_ibfk_1
2014-06-26 11:00:40,508 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_withdraw drop foreign key member_withdraw_ibfk_1
2014-06-26 11:00:40,535 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table tweet drop foreign key tweet_ibfk_1
2014-06-26 11:00:40,562 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table follow
2014-06-26 11:00:40,592 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table followers
2014-06-26 11:00:40,618 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table login
2014-06-26 11:00:40,638 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member
2014-06-26 11:00:40,663 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_security
2014-06-26 11:00:40,685 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_withdraw
2014-06-26 11:00:40,711 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table tweet
2014-06-26 11:00:40,790 [main] INFO  (DfCreateSchemaProcess#createSchema():244) - 
2014-06-26 11:00:40,791 [main] INFO  (DfCreateSchemaProcess#createSchema():245) - * * * * * * * * *
2014-06-26 11:00:40,794 [main] INFO  (DfCreateSchemaProcess#createSchema():246) - *               *
2014-06-26 11:00:40,795 [main] INFO  (DfCreateSchemaProcess#createSchema():247) - * Create Schema *
2014-06-26 11:00:40,796 [main] INFO  (DfCreateSchemaProcess#createSchema():248) - *               *
2014-06-26 11:00:40,798 [main] INFO  (DfCreateSchemaProcess#createSchema():249) - * * * * * * * * *
2014-06-26 11:00:40,804 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-00-system.sql
2014-06-26 11:00:40,809 [main] INFO  (DfReplaceSchemaProperties#checkTargetEnvType():277) - ...Checking envType: ut in [ut]
2014-06-26 11:00:40,811 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:checkEnv(ut)#

-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database twitter
2014-06-26 11:00:40,818 [main] INFO  (DfCreateSchemaProcess$1#dispatch():273) - ...Creating a connection to system
2014-06-26 11:00:40,821 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():514) - ...Creating a connection for additional user: root
2014-06-26 11:00:40,833 [main] INFO  (DfCreateSchemaProcess$1#dispatch():299) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2014-06-26 11:00:40,834 [main] INFO  (DfCreateSchemaProcess$1#dispatch():301) -  -> Can't create database 'twitter'; database exists
2014-06-26 11:00:40,836 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():411) - ...Reviving the user 'system' until the end of this SQL file
2014-06-26 11:00:40,837 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on twitter.*
  to twitter@localhost identified by 'twitter'
2014-06-26 11:00:40,843 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2014-06-26 11:00:40,846 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2014-06-26 11:00:40,847 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-10-basic.sql
2014-06-26 11:00:40,848 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():348) - ...Saying good-bye to the user 'system' again
2014-06-26 11:00:40,849 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():352) - ...Clearing revived users
2014-06-26 11:00:40,850 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():359) - ...Coming back to the main user from the user 'system'
2014-06-26 11:00:40,853 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FOLLOW
(
	FOLLOW_ID INT(100) NOT NULL UNIQUE COMMENT 'フォローID',
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PRIMARY KEY (FOLLOW_ID)
) COMMENT = 'フォロー'
2014-06-26 11:00:40,897 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE FOLLOWERS
(
	FOLLOWERSID INT(100) NOT NULL UNIQUE COMMENT 'フォロワーID',
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PRIMARY KEY (FOLLOWERSID)
) COMMENT = 'フォロワー'
2014-06-26 11:00:40,977 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE LOGIN
(
	LOGIN_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ログインID : ログインした瞬間のID
',
	LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	PRIMARY KEY (LOGIN_ID)
) COMMENT = 'ログイン'
2014-06-26 11:00:41,038 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER
(
	MEMBER_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員のID
',
	EMAIL_ADDRESS VARCHAR(100) NOT NULL UNIQUE COMMENT 'メールアドレス : 会員のメールアドレス',
	USERNAME VARCHAR(50) NOT NULL UNIQUE COMMENT '会員ユーザ名 : 会員のユーザ名',
	UPDATE_DATETIME DATETIME COMMENT '更新日時',
	BIRTHDATE DATE COMMENT '生年月日 : 会員の生年月日',
	PROFILE VARCHAR(200) COMMENT 'プロフィール',
	REGESTER_DATETIME DATETIME NOT NULL COMMENT '登録日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員'
2014-06-26 11:00:41,119 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PASSWORD VARCHAR(50) NOT NULL COMMENT 'パスワード',
	PASSWORD_UPDATE_DATETIME DATETIME COMMENT 'パスワード更新日時',
	PASSWORD_REGESTERATION_DATETIME DATETIME NOT NULL COMMENT 'パスワード登録日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員セキュリティ'
2014-06-26 11:00:41,181 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_WITHDRAW
(
	WITHDRAWAL_REASON_ID INT COMMENT '退会理由ID : 会員の退会理由ID',
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト',
	WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT 'withdrawal_datetime : 退会日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員退会'
2014-06-26 11:00:41,238 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	TWEET_DATETIME DATETIME NOT NULL COMMENT 'TWEET日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-06-26 11:00:41,294 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FOLLOW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-26 11:00:41,377 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOWERS
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-26 11:00:41,466 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-26 11:00:41,558 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-26 11:00:41,667 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_WITHDRAW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-26 11:00:41,785 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-26 11:00:41,900 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=13 failure=0
2014-06-26 11:00:41,903 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=15 failure=0 (in 2 files)
2014-06-26 11:00:41,905 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-06-26 11:00:41,946 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-06-26 11:00:41,947 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-06-26 11:00:41,948 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-06-26 11:00:41,949 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-06-26 11:00:41,951 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-06-26 11:00:41,952 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-06-26 11:00:41,975 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-06-26 11:00:41,976 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-06-26 11:00:41,976 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-06-26 11:00:42,255 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-26 11:00:42,256 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-26 11:00:42,257 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-26 11:00:42,313 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{1, Stojkovic@gmail.com, Pixy, 1965/03/03, 2014-06-24 00:00:00.0, 2014-06-26 11:00:42.312}
2014-06-26 11:00:42,358 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{2, Savicevic@gmail.com, Genius, 1966/09/15, 2014-06-25 00:00:00.0, 2014-06-26 11:00:42.358}
2014-06-26 11:00:42,360 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{3, Mijatovic@gmail.com, Mijato, null, 2014-06-26 00:00:00.0, 2014-06-26 11:00:42.36}
2014-06-26 11:00:42,361 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{4, Stankovic@gmail.com, Stanko, 1978/09/11, 2014-06-27 00:00:00.0, 2014-06-26 11:00:42.361}
2014-06-26 11:00:42,362 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{5, Milosevic@gmail.com, Milose, null, 2014-06-28 00:00:00.0, 2014-06-26 11:00:42.362}
2014-06-26 11:00:42,363 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{6, Mihajlovic@gmail.com, FreeKick, 1969/02/20, 2014-06-29 00:00:00.0, 2014-06-26 11:00:42.363}
2014-06-26 11:00:42,365 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{7, アカギ@gmail.com, Akagi, null, 2014-06-30 00:00:00.0, 2014-06-26 11:00:42.365}
2014-06-26 11:00:42,368 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{8, Kezman@gmial.com, RedCard, null, 2014-07-01 00:00:00.0, 2014-06-26 11:00:42.368}
2014-06-26 11:00:42,369 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{9, Maslovar@gmail.com, JEFUnited, 1967/02/20, 2014-07-02 00:00:00.0, 2014-06-26 11:00:42.369}
2014-06-26 11:00:42,371 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{10, 諸葛亮孔明@gmail.com, ShokatsuGoGo, null, 2014-07-03 00:00:00.0, 2014-06-26 11:00:42.371}
2014-06-26 11:00:42,373 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{11, Boban@gmail.com, Boban, 1968/10/08, 2014-07-04 00:00:00.0, 2014-06-26 11:00:42.373}
2014-06-26 11:00:42,375 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{12, Suker@gmail.com, Suker, 1968/01/01, 2014-07-05 00:00:00.0, 2014-06-26 11:00:42.375}
2014-06-26 11:00:42,377 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{13, Jarni@gmail.com, Jarni, 1968/10/26, 2014-07-06 00:00:00.0, 2014-06-26 11:00:42.377}
2014-06-26 11:00:42,378 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{14, Boksic@gmail.com, Boksic, 1970/01/21, 2014-07-07 00:00:00.0, 2014-06-26 11:00:42.378}
2014-06-26 11:00:42,380 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{15, Prosinecki@gmail.com, Prosinecki, 1969/01/12, 2014-07-08 00:00:00.0, 2014-06-26 11:00:42.38}
2014-06-26 11:00:42,381 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{16, RobeltKovac@gmail.com, RobeltKovac, null, 2014-07-09 00:00:00.0, 2014-06-26 11:00:42.381}
2014-06-26 11:00:42,382 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{17, NikoKovac@gmail.com, NikoKovac, null, 2014-07-10 00:00:00.0, 2014-06-26 11:00:42.382}
2014-06-26 11:00:42,384 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{18, Jovanovic@gmail.com, Jovano, 1981/04/18, 2014-07-11 00:00:00.0, 2014-06-26 11:00:42.384}
2014-06-26 11:00:42,386 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{19, Milko@gmail.com, Milko, 1974/09/10, 2014-07-12 00:00:00.0, 2014-06-26 11:00:42.385}
2014-06-26 11:00:42,387 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{20, 諸葛瑾子瑜@gmail.com, ShokatsuKinKin, null, 2014-07-13 00:00:00.0, 2014-06-26 11:00:42.387}
2014-06-26 11:00:42,402 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 20 rows are loaded to MEMBER
2014-06-26 11:00:42,405 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 3, 2006/12/24 23:59:59}
2014-06-26 11:00:42,406 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 6, 2007/11/11 16:16:16}
2014-06-26 11:00:42,407 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{3, 1, 2006/12/23 22:56:29}
2014-06-26 11:00:42,408 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{4, 6, 2007/11/01 02:13:00}
2014-06-26 11:00:42,410 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{5, 7, 2006/05/24 23:12:59}
2014-06-26 11:00:42,411 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{6, 6, 2005/11/11 16:32:01}
2014-06-26 11:00:42,412 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{7, 6, 2006/01/28 23:59:59}
2014-06-26 11:00:42,414 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{8, 6, 2007/11/09 16:23:00}
2014-06-26 11:00:42,415 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{9, 8, 2006/12/22 23:59:59}
2014-06-26 11:00:42,416 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{10, 6, 2007/11/11 09:01:00}
2014-06-26 11:00:42,417 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{11, 1, 2006/12/23 23:59:59}
2014-06-26 11:00:42,419 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{12, 9, 2007/11/15 12:43:00}
2014-06-26 11:00:42,421 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{13, 10, 2006/12/24 23:59:59}
2014-06-26 11:00:42,422 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{14, 6, 2007/04/01 16:23:01}
2014-06-26 11:00:42,423 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{15, 7, 2006/12/24 23:59:20}
2014-06-26 11:00:42,424 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{16, 6, 2007/05/01 12:23:02}
2014-06-26 11:00:42,426 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{17, 7, 2006/12/24 23:59:21}
2014-06-26 11:00:42,427 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{18, 6, 2007/06/11 17:23:03}
2014-06-26 11:00:42,428 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{19, 4, 2006/12/24 23:59:22}
2014-06-26 11:00:42,430 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{20, 3, 2007/11/01 16:12:04}
2014-06-26 11:00:42,431 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{21, 11, 2006/12/24 23:59:23}
2014-06-26 11:00:42,432 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{22, 1, 2007/11/01 16:23:05}
2014-06-26 11:00:42,434 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{23, 9, 2006/12/24 23:59:24}
2014-06-26 11:00:42,435 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{24, 8, 2007/11/01 16:23:06}
2014-06-26 11:00:42,437 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{25, 7, 2007/12/24 11:59:25}
2014-06-26 11:00:42,438 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{26, 6, 2007/06/21 01:23:57}
2014-06-26 11:00:42,439 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{27, 5, 2006/12/24 23:59:26}
2014-06-26 11:00:42,441 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{28, 3, 2007/11/01 16:23:08}
2014-06-26 11:00:42,442 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{29, 3, 2006/12/24 23:59:27}
2014-06-26 11:00:42,443 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{30, 10, 2007/11/01 16:23:09}
2014-06-26 11:00:42,445 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-26 11:00:42,460 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 30 rows are loaded to LOGIN
2014-06-26 11:00:42,461 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014/06/23, null}
2014-06-26 11:00:42,463 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014/06/24, null}
2014-06-26 11:00:42,464 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{3, ccc, 2014/06/25, 2014/06/25}
2014-06-26 11:00:42,465 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{4, ddd, 2014/06/26, null}
2014-06-26 11:00:42,466 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{5, eee2, 2014/06/27, null}
2014-06-26 11:00:42,468 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{6, fff, 2014/06/28, null}
2014-06-26 11:00:42,469 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{7, ggg3, 2014/06/29, 2014/06/25}
2014-06-26 11:00:42,471 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{8, hhh555, 2014/06/30, null}
2014-06-26 11:00:42,472 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{9, iii, 2014/07/01, 2014/06/25}
2014-06-26 11:00:42,473 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{10, jjj, 2014/07/02, null}
2014-06-26 11:00:42,474 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-26 11:00:42,486 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to MEMBER_SECURITY
2014-06-26 11:00:42,488 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 2013-06-13 00:00:00.0}
2014-06-26 11:00:42,490 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{2, 2345, 清君頼りになるー！, 2013-06-14 00:00:00.0}
2014-06-26 11:00:42,492 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{3, 3456, GLD, 2013-06-15 00:00:00.0}
2014-06-26 11:00:42,492 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{4, 875, BRZ, 2013-06-16 00:00:00.0}
2014-06-26 11:00:42,494 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{5, 1111, BRZ, 2013-06-17 00:00:00.0}
2014-06-26 11:00:42,495 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{6, 5422, SIL, 2013-06-18 00:00:00.0}
2014-06-26 11:00:42,497 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{7, 24678, SIL, 2013-06-19 00:00:00.0}
2014-06-26 11:00:42,498 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{8, 234, SIL, 2013-06-20 00:00:00.0}
2014-06-26 11:00:42,500 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{9, 3, SIL, 2013-06-21 00:00:00.0}
2014-06-26 11:00:42,503 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{10, 98765, PLT, 2013-06-22 00:00:00.0}
2014-06-26 11:00:42,504 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-26 11:00:42,510 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to TWEET
2014-06-26 11:00:42,532 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{3, 1, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123}
2014-06-26 11:00:42,535 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{6, 1, null, 2007/11/11 16:00:00.456}
2014-06-26 11:00:42,539 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{13, 2, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789}
2014-06-26 11:00:42,541 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{16, 3, コバチが２人いるため, 2007/11/13 16:00:00.456}
2014-06-26 11:00:42,559 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 4 rows are loaded to MEMBER_WITHDRAW
2014-06-26 11:00:42,563 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():379) - ...Checking implicit set of classification
2014-06-26 11:00:42,576 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - 
2014-06-26 11:00:42,577 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * * * * * * * **
2014-06-26 11:00:42,578 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2014-06-26 11:00:42,579 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * Take Finally *
2014-06-26 11:00:42,580 [main] INFO  (DfTakeFinallyProcess#takeFinally():225) - *              *
2014-06-26 11:00:42,582 [main] INFO  (DfTakeFinallyProcess#takeFinally():226) - * * * * * * * **
2014-06-26 11:00:42,591 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: take-finally.sql
2014-06-26 11:00:42,593 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2014-06-26 11:00:42,594 [main] INFO  (DfSqlFileFireMan#fire():90) - {Take Finally}: success=0 failure=0 (in 1 files)
2014-06-26 11:00:42,597 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-26 11:00:42,602 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m05s255ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=15 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=1
  (ut)
  o 20-member.xls

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-06-26 11:00:43,508 [main] INFO  (TorqueJDBCTransformTask#begin():100) - +------------------------------------------+
2014-06-26 11:00:43,511 [main] INFO  (TorqueJDBCTransformTask#begin():101) - |                                          |
2014-06-26 11:00:43,511 [main] INFO  (TorqueJDBCTransformTask#begin():102) - |                   JDBC                   |
2014-06-26 11:00:43,512 [main] INFO  (TorqueJDBCTransformTask#begin():103) - |                                          |
2014-06-26 11:00:43,513 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2014-06-26 11:00:43,553 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-26 11:00:43,554 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-26 11:00:43,555 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-26 11:00:43,555 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-26 11:00:43,597 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2014-06-26 11:00:43,598 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2014-06-26 11:00:43,598 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1469) - ...Loading previous schema (schema diff process)
2014-06-26 11:00:43,609 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-26 11:00:43,678 [main] INFO  (DfSchemaXmlSerializer#generateXML():361) - ...Getting DB connection
2014-06-26 11:00:43,682 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-26 11:00:43,857 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-26 11:00:43,857 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-26 11:00:43,859 [main] INFO  (DfSchemaXmlSerializer#generateXML():364) - ...Getting DB meta data
2014-06-26 11:00:43,861 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-26 11:00:43,862 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-26 11:00:43,862 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-26 11:00:43,873 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2014-06-26 11:00:43,876 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2014-06-26 11:00:43,888 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - 
2014-06-26 11:00:43,889 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2014-06-26 11:00:43,889 [main] INFO  (DfSchemaXmlSerializer#processTable():423) - $ [Table List]
2014-06-26 11:00:43,891 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.follow(TABLE) // フォロー
2014-06-26 11:00:43,926 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.followers(TABLE) // フォロワー
2014-06-26 11:00:43,939 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.login(TABLE) // ログイン
2014-06-26 11:00:43,952 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member(TABLE) // 会員
2014-06-26 11:00:43,965 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_security(TABLE) // 会員セキュリティ
2014-06-26 11:00:43,979 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_withdraw(TABLE) // 会員退会
2014-06-26 11:00:43,992 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.tweet(TABLE) // TWEET
2014-06-26 11:00:44,006 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 
2014-06-26 11:00:44,007 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ [Table Count]
2014-06-26 11:00:44,008 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ 7
2014-06-26 11:00:44,009 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - $ = = = = = = = = = =/
2014-06-26 11:00:44,011 [main] INFO  (DfSchemaXmlSerializer#processTable():439) - 
2014-06-26 11:00:44,013 [main] INFO  (DfSchemaXmlSerializer#processSequence():799) - ...Getting sequences
2014-06-26 11:00:44,018 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2014-06-26 11:00:44,019 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-twitter.xml
2014-06-26 11:00:44,019 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2014-06-26 11:00:44,034 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1487) - ...Loading next schema (schema diff process)
2014-06-26 11:00:44,036 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-26 11:00:44,074 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1502) -  -> same as previous (schema diff)
2014-06-26 11:00:44,074 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-26 11:00:44,080 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s568ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2014-06-26 11:00:45,036 [main] INFO  (TorqueDocumentationTask#begin():171) - +------------------------------------------+
2014-06-26 11:00:45,039 [main] INFO  (TorqueDocumentationTask#begin():172) - |                                          |
2014-06-26 11:00:45,039 [main] INFO  (TorqueDocumentationTask#begin():173) - |                   Doc                    |
2014-06-26 11:00:45,040 [main] INFO  (TorqueDocumentationTask#begin():181) - |                                          |
2014-06-26 11:00:45,041 [main] INFO  (TorqueDocumentationTask#begin():182) - +------------------------------------------+
2014-06-26 11:00:45,086 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-26 11:00:45,087 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-26 11:00:45,088 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-26 11:00:45,089 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-26 11:00:45,094 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():242) - 
2014-06-26 11:00:45,094 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():243) - * * * * * * * * * * *
2014-06-26 11:00:45,095 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():244) - *                   *
2014-06-26 11:00:45,096 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():245) - *    Schema HTML    *
2014-06-26 11:00:45,098 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - *                   *
2014-06-26 11:00:45,099 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2014-06-26 11:00:45,268 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-26 11:00:45,323 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("doc/ControlDocument.vm", c);
2014-06-26 11:00:45,405 [main] INFO  (Database#doEnableDocumentOutputDirectory():1180) - ...Setting up documentOutputDirectory: ./output/doc
2014-06-26 11:00:45,419 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-26 11:00:45,421 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-26 11:00:45,424 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-26 11:00:45,427 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-26 11:00:45,428 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-26 11:00:45,431 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-26 11:00:45,435 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-26 11:00:45,436 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-26 11:00:45,440 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-26 11:00:45,455 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():150) - ...Loading schema history
2014-06-26 11:00:45,517 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():154) -  -> found history: count=10
2014-06-26 11:00:45,762 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-26 11:00:45,778 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s739ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Doc}
2014-06-26 11:00:48,602 [main] INFO  (TorqueDataModelTask#begin():105) - +------------------------------------------+
2014-06-26 11:00:48,604 [main] INFO  (TorqueDataModelTask#begin():106) - |                                          |
2014-06-26 11:00:48,604 [main] INFO  (TorqueDataModelTask#begin():107) - |                 Generate                 |
2014-06-26 11:00:48,605 [main] INFO  (TorqueDataModelTask#begin():108) - |                                          |
2014-06-26 11:00:48,607 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2014-06-26 11:00:48,646 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-26 11:00:48,647 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-26 11:00:48,647 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-26 11:00:48,649 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-26 11:00:48,667 [main] INFO  (TorqueDataModelTask#setupControlTemplate():160) - 
2014-06-26 11:00:48,668 [main] INFO  (TorqueDataModelTask#setupControlTemplate():161) - ...Using Java control: om/ControlGenerateJava.vm
2014-06-26 11:00:48,805 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-26 11:00:48,846 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlGenerateJava.vm", c);
2014-06-26 11:00:48,976 [main] INFO  (Database#doEnableGenerateOutputDirectory():1148) - ...Setting up generateOutputDirectory: ../src/main/java
2014-06-26 11:00:48,985 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-26 11:00:48,986 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-26 11:00:48,989 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-26 11:00:48,990 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-26 11:00:48,991 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-26 11:00:48,993 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-26 11:00:48,996 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-26 11:00:48,996 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-26 11:00:48,999 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-26 11:00:49,018 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - /=============================
2014-06-26 11:00:49,018 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():60) - ...Initializing include query.
2014-06-26 11:00:49,019 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - String
2014-06-26 11:00:49,020 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Number
2014-06-26 11:00:49,022 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Date
2014-06-26 11:00:49,023 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotEqual -> []
2014-06-26 11:00:49,025 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   InScope -> []
2014-06-26 11:00:49,027 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotInScope -> []
2014-06-26 11:00:49,028 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - OrderBy
2014-06-26 11:00:49,029 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():62) - ========/
2014-06-26 11:00:49,049 [main] INFO  (Database#info():2577) - public void parseAllCommon() {
2014-06-26 11:00:49,052 [main] INFO  (Database#info():2577) -     parse('DBCurrent');
2014-06-26 11:00:49,060 [main] INFO  (Database#info():2577) -     parse('DBFluteConfig');
2014-06-26 11:00:49,080 [main] INFO  (Database#info():2577) -     parse('DBFluteInitializer');
2014-06-26 11:00:49,087 [main] INFO  (Database#info():2577) -     parse('DBMetaInstanceHandler');
2014-06-26 11:00:49,105 [main] INFO  (Database#info():2577) -     parse('EntityDefinedCommonColumn');
2014-06-26 11:00:49,110 [main] INFO  (Database#info():2577) -     parse('ImplementedBehaviorSelector');
2014-06-26 11:00:49,125 [main] INFO  (Database#info():2577) -     parse('ImplementedCommonColumnAutoSetupper');
2014-06-26 11:00:49,130 [main] INFO  (Database#info():2577) -     parse('ImplementedInvokerAssistant');
2014-06-26 11:00:49,133 [main] INFO  (Database#info():2577) -     parse('ImplementedSqlClauseCreator');
2014-06-26 11:00:49,136 [main] INFO  (Database#info():2577) - }
2014-06-26 11:00:49,136 [main] INFO  (Database#info():2577) - public void parseContainerConfig() {
2014-06-26 11:00:49,137 [main] INFO  (Database#info():2577) -     parse('../resources/dbflute.dicon')
2014-06-26 11:00:49,144 [main] INFO  (Database#info():2577) - }
2014-06-26 11:00:49,149 [main] INFO  (DfOldClassHandler#info():886) - public void deleteOldTableClass() {
2014-06-26 11:00:49,170 [main] INFO  (DfOldClassHandler#info():886) - }
2014-06-26 11:00:49,171 [main] INFO  (Database#info():2577) - public void parseTableClass() {
2014-06-26 11:00:49,172 [main] INFO  (Database#info():2577) -     parse('follow');
2014-06-26 11:00:49,364 [main] INFO  (Database#info():2577) -     parse('followers');
2014-06-26 11:00:49,540 [main] INFO  (Database#info():2577) -     parse('login');
2014-06-26 11:00:49,717 [main] INFO  (Database#info():2577) -     parse('member');
2014-06-26 11:00:49,953 [main] INFO  (Database#info():2577) -     parse('member_security');
2014-06-26 11:00:50,077 [main] INFO  (Database#info():2577) -     parse('member_withdraw');
2014-06-26 11:00:50,205 [main] INFO  (Database#info():2577) -     parse('tweet');
2014-06-26 11:00:50,286 [main] INFO  (Database#info():2577) - }
2014-06-26 11:00:50,287 [main] INFO  (Database#info():2577) -  
2014-06-26 11:00:50,308 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-26 11:00:50,314 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s709ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Generate}
2014-06-26 11:00:51,228 [main] INFO  (DfOutsideSqlTestTask#begin():72) - +------------------------------------------+
2014-06-26 11:00:51,232 [main] INFO  (DfOutsideSqlTestTask#begin():73) - |                                          |
2014-06-26 11:00:51,232 [main] INFO  (DfOutsideSqlTestTask#begin():74) - |              OutsideSqlTest              |
2014-06-26 11:00:51,233 [main] INFO  (DfOutsideSqlTestTask#begin():75) - |                                          |
2014-06-26 11:00:51,234 [main] INFO  (DfOutsideSqlTestTask#begin():76) - +------------------------------------------+
2014-06-26 11:00:51,295 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-26 11:00:51,296 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-26 11:00:51,296 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-26 11:00:51,298 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-26 11:00:51,336 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-26 11:00:51,341 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s109ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2014-06-26 11:00:52,201 [main] INFO  (DfSql2EntityTask#begin():100) - +------------------------------------------+
2014-06-26 11:00:52,203 [main] INFO  (DfSql2EntityTask#begin():101) - |                                          |
2014-06-26 11:00:52,204 [main] INFO  (DfSql2EntityTask#begin():102) - |                Sql2Entity                |
2014-06-26 11:00:52,204 [main] INFO  (DfSql2EntityTask#begin():103) - |                                          |
2014-06-26 11:00:52,206 [main] INFO  (DfSql2EntityTask#begin():104) - +------------------------------------------+
2014-06-26 11:00:52,243 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-26 11:00:52,244 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-26 11:00:52,244 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-26 11:00:52,246 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-26 11:00:52,262 [main] INFO  (DfSql2EntityTask#setupControlTemplate():170) - 
2014-06-26 11:00:52,263 [main] INFO  (DfSql2EntityTask#setupControlTemplate():171) - ...Using Java control: om/ControlSql2EntityJava.vm
2014-06-26 11:00:52,270 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-26 11:00:52,315 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-26 11:00:52,444 [main] INFO  (DfSql2EntityTask#initControlContext():301) - 
2014-06-26 11:00:52,444 [main] INFO  (DfSql2EntityTask#initControlContext():302) - ...Preparing generation of customize-entities and parameter-beans
2014-06-26 11:00:52,445 [main] INFO  (DfSql2EntityTask#initControlContext():303) - * * * * * * * * * *
2014-06-26 11:00:52,447 [main] INFO  (DfSql2EntityTask#initControlContext():304) - * CustomizeEntity *
2014-06-26 11:00:52,448 [main] INFO  (DfSql2EntityTask#initControlContext():305) - * * * * * * * * * *
2014-06-26 11:00:52,449 [main] INFO  (DfSql2EntityTask#showParameterBean():871) - * * * * * * * * *
2014-06-26 11:00:52,450 [main] INFO  (DfSql2EntityTask#showParameterBean():872) - * ParameterBean *
2014-06-26 11:00:52,452 [main] INFO  (DfSql2EntityTask#showParameterBean():873) - * * * * * * * * *
2014-06-26 11:00:52,457 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlSql2EntityJava.vm", c);
2014-06-26 11:00:52,558 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1164) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2014-06-26 11:00:52,562 [main] INFO  (DfOldClassHandler#info():886) - public void deleteOldCustomizeClass() {
2014-06-26 11:00:52,572 [main] INFO  (DfOldClassHandler#info():886) - }
2014-06-26 11:00:52,573 [main] INFO  (Database#info():2577) - public void parseCustomizeEntity() {
2014-06-26 11:00:52,576 [main] INFO  (Database#info():2577) - }
2014-06-26 11:00:52,588 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():293) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2014-06-26 11:00:52,596 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-26 11:00:52,602 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s399ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2014-06-26 11:02:55,163 [main] INFO  (DfReplaceSchemaTask#begin():87) - +------------------------------------------+
2014-06-26 11:02:55,166 [main] INFO  (DfReplaceSchemaTask#begin():88) - |                                          |
2014-06-26 11:02:55,167 [main] INFO  (DfReplaceSchemaTask#begin():89) - |              ReplaceSchema               |
2014-06-26 11:02:55,185 [main] INFO  (DfReplaceSchemaTask#begin():97) - |                                          |
2014-06-26 11:02:55,186 [main] INFO  (DfReplaceSchemaTask#begin():98) - +------------------------------------------+
2014-06-26 11:02:55,187 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():329) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2014-06-26 11:02:56,681 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-26 11:02:56,684 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-26 11:02:56,687 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-26 11:02:56,689 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-26 11:02:56,712 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-26 11:02:56,933 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-26 11:02:56,934 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-26 11:02:56,952 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():207) - 
2014-06-26 11:02:56,952 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():208) - * * * * * * * * * * *
2014-06-26 11:02:56,953 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():209) - *                   *
2014-06-26 11:02:56,955 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():210) - * Initialize Schema *
2014-06-26 11:02:56,956 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():211) - *                   *
2014-06-26 11:02:56,957 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():212) - * * * * * * * * * * *
2014-06-26 11:02:56,976 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-26 11:02:56,977 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-26 11:02:56,978 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-26 11:02:57,031 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table follow
2014-06-26 11:02:57,088 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table followers
2014-06-26 11:02:57,117 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table login
2014-06-26 11:02:57,146 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_security
2014-06-26 11:02:57,183 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_withdraw
2014-06-26 11:02:57,229 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table tweet
2014-06-26 11:02:57,253 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_1
2014-06-26 11:02:57,273 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table followers drop foreign key followers_ibfk_1
2014-06-26 11:02:57,282 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table login drop foreign key login_ibfk_1
2014-06-26 11:02:57,293 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_security drop foreign key member_security_ibfk_1
2014-06-26 11:02:57,303 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_withdraw drop foreign key member_withdraw_ibfk_1
2014-06-26 11:02:57,313 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table tweet drop foreign key tweet_ibfk_1
2014-06-26 11:02:57,323 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table follow
2014-06-26 11:02:57,334 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table followers
2014-06-26 11:02:57,345 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table login
2014-06-26 11:02:57,355 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member
2014-06-26 11:02:57,365 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_security
2014-06-26 11:02:57,375 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_withdraw
2014-06-26 11:02:57,385 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table tweet
2014-06-26 11:02:57,420 [main] INFO  (DfCreateSchemaProcess#createSchema():244) - 
2014-06-26 11:02:57,421 [main] INFO  (DfCreateSchemaProcess#createSchema():245) - * * * * * * * * *
2014-06-26 11:02:57,421 [main] INFO  (DfCreateSchemaProcess#createSchema():246) - *               *
2014-06-26 11:02:57,424 [main] INFO  (DfCreateSchemaProcess#createSchema():247) - * Create Schema *
2014-06-26 11:02:57,424 [main] INFO  (DfCreateSchemaProcess#createSchema():248) - *               *
2014-06-26 11:02:57,425 [main] INFO  (DfCreateSchemaProcess#createSchema():249) - * * * * * * * * *
2014-06-26 11:02:57,431 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-00-system.sql
2014-06-26 11:02:57,435 [main] INFO  (DfReplaceSchemaProperties#checkTargetEnvType():277) - ...Checking envType: ut in [ut]
2014-06-26 11:02:57,436 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:checkEnv(ut)#

-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database twitter
2014-06-26 11:02:57,443 [main] INFO  (DfCreateSchemaProcess$1#dispatch():273) - ...Creating a connection to system
2014-06-26 11:02:57,445 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():514) - ...Creating a connection for additional user: root
2014-06-26 11:02:57,457 [main] INFO  (DfCreateSchemaProcess$1#dispatch():299) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2014-06-26 11:02:57,458 [main] INFO  (DfCreateSchemaProcess$1#dispatch():301) -  -> Can't create database 'twitter'; database exists
2014-06-26 11:02:57,460 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():411) - ...Reviving the user 'system' until the end of this SQL file
2014-06-26 11:02:57,460 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on twitter.*
  to twitter@localhost identified by 'twitter'
2014-06-26 11:02:57,468 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2014-06-26 11:02:57,471 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2014-06-26 11:02:57,472 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-10-basic.sql
2014-06-26 11:02:57,473 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():348) - ...Saying good-bye to the user 'system' again
2014-06-26 11:02:57,474 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():352) - ...Clearing revived users
2014-06-26 11:02:57,475 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():359) - ...Coming back to the main user from the user 'system'
2014-06-26 11:02:57,480 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FOLLOW
(
	FOLLOW_ID INT(100) NOT NULL UNIQUE COMMENT 'フォローID',
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PRIMARY KEY (FOLLOW_ID)
) COMMENT = 'フォロー'
2014-06-26 11:02:57,535 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE FOLLOWERS
(
	FOLLOWERSID INT(100) NOT NULL UNIQUE COMMENT 'フォロワーID',
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PRIMARY KEY (FOLLOWERSID)
) COMMENT = 'フォロワー'
2014-06-26 11:02:57,588 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE LOGIN
(
	LOGIN_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ログインID : ログインした瞬間のID
',
	LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	PRIMARY KEY (LOGIN_ID)
) COMMENT = 'ログイン'
2014-06-26 11:02:57,641 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER
(
	MEMBER_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員のID
',
	EMAIL_ADDRESS VARCHAR(100) NOT NULL UNIQUE COMMENT 'メールアドレス : 会員のメールアドレス',
	USER_NAME VARCHAR(50) NOT NULL UNIQUE COMMENT '会員ユーザ名 : 会員のユーザ名',
	UPDATE_DATETIME DATETIME COMMENT '更新日時',
	BIRTHDATE DATE COMMENT '生年月日 : 会員の生年月日',
	PROFILE VARCHAR(200) COMMENT 'プロフィール',
	REGESTER_DATETIME DATETIME NOT NULL COMMENT '登録日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員'
2014-06-26 11:02:57,699 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PASSWORD VARCHAR(50) NOT NULL COMMENT 'パスワード',
	PASSWORD_UPDATE_DATETIME DATETIME COMMENT 'パスワード更新日時',
	PASSWORD_REGESTERATION_DATETIME DATETIME NOT NULL COMMENT 'パスワード登録日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員セキュリティ'
2014-06-26 11:02:57,755 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_WITHDRAW
(
	WITHDRAWAL_REASON_ID INT COMMENT '退会理由ID : 会員の退会理由ID',
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト',
	WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT 'withdrawal_datetime : 退会日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員退会'
2014-06-26 11:02:57,824 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	TWEET_DATETIME DATETIME NOT NULL COMMENT 'TWEET日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-06-26 11:02:57,878 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FOLLOW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-26 11:02:57,966 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOWERS
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-26 11:02:58,063 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-26 11:02:58,131 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-26 11:02:58,225 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_WITHDRAW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-26 11:02:58,311 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-26 11:02:58,381 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=13 failure=0
2014-06-26 11:02:58,382 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=15 failure=0 (in 2 files)
2014-06-26 11:02:58,383 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-06-26 11:02:58,440 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-06-26 11:02:58,441 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-06-26 11:02:58,441 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-06-26 11:02:58,443 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-06-26 11:02:58,444 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-06-26 11:02:58,446 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-06-26 11:02:58,468 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-06-26 11:02:58,469 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-06-26 11:02:58,470 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-06-26 11:02:58,750 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-26 11:02:58,751 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-26 11:02:58,751 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-26 11:02:58,807 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{1, Stojkovic@gmail.com, Pixy, 1965/03/03, 2014-06-24 00:00:00.0, 2014-06-26 11:02:58.807}
2014-06-26 11:02:58,854 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{2, Savicevic@gmail.com, Genius, 1966/09/15, 2014-06-25 00:00:00.0, 2014-06-26 11:02:58.854}
2014-06-26 11:02:58,855 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{3, Mijatovic@gmail.com, Mijato, null, 2014-06-26 00:00:00.0, 2014-06-26 11:02:58.855}
2014-06-26 11:02:58,856 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{4, Stankovic@gmail.com, Stanko, 1978/09/11, 2014-06-27 00:00:00.0, 2014-06-26 11:02:58.856}
2014-06-26 11:02:58,858 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{5, Milosevic@gmail.com, Milose, null, 2014-06-28 00:00:00.0, 2014-06-26 11:02:58.857}
2014-06-26 11:02:58,859 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{6, Mihajlovic@gmail.com, FreeKick, 1969/02/20, 2014-06-29 00:00:00.0, 2014-06-26 11:02:58.858}
2014-06-26 11:02:58,861 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{7, アカギ@gmail.com, Akagi, null, 2014-06-30 00:00:00.0, 2014-06-26 11:02:58.86}
2014-06-26 11:02:58,863 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{8, Kezman@gmial.com, RedCard, null, 2014-07-01 00:00:00.0, 2014-06-26 11:02:58.863}
2014-06-26 11:02:58,864 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{9, Maslovar@gmail.com, JEFUnited, 1967/02/20, 2014-07-02 00:00:00.0, 2014-06-26 11:02:58.864}
2014-06-26 11:02:58,866 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{10, 諸葛亮孔明@gmail.com, ShokatsuGoGo, null, 2014-07-03 00:00:00.0, 2014-06-26 11:02:58.866}
2014-06-26 11:02:58,869 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{11, Boban@gmail.com, Boban, 1968/10/08, 2014-07-04 00:00:00.0, 2014-06-26 11:02:58.869}
2014-06-26 11:02:58,872 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{12, Suker@gmail.com, Suker, 1968/01/01, 2014-07-05 00:00:00.0, 2014-06-26 11:02:58.872}
2014-06-26 11:02:58,874 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{13, Jarni@gmail.com, Jarni, 1968/10/26, 2014-07-06 00:00:00.0, 2014-06-26 11:02:58.873}
2014-06-26 11:02:58,875 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{14, Boksic@gmail.com, Boksic, 1970/01/21, 2014-07-07 00:00:00.0, 2014-06-26 11:02:58.875}
2014-06-26 11:02:58,877 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{15, Prosinecki@gmail.com, Prosinecki, 1969/01/12, 2014-07-08 00:00:00.0, 2014-06-26 11:02:58.877}
2014-06-26 11:02:58,878 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{16, RobeltKovac@gmail.com, RobeltKovac, null, 2014-07-09 00:00:00.0, 2014-06-26 11:02:58.878}
2014-06-26 11:02:58,879 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{17, NikoKovac@gmail.com, NikoKovac, null, 2014-07-10 00:00:00.0, 2014-06-26 11:02:58.879}
2014-06-26 11:02:58,881 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{18, Jovanovic@gmail.com, Jovano, 1981/04/18, 2014-07-11 00:00:00.0, 2014-06-26 11:02:58.88}
2014-06-26 11:02:58,882 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{19, Milko@gmail.com, Milko, 1974/09/10, 2014-07-12 00:00:00.0, 2014-06-26 11:02:58.882}
2014-06-26 11:02:58,883 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{20, 諸葛瑾子瑜@gmail.com, ShokatsuKinKin, null, 2014-07-13 00:00:00.0, 2014-06-26 11:02:58.883}
2014-06-26 11:02:58,900 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 20 rows are loaded to MEMBER
2014-06-26 11:02:58,903 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 3, 2006/12/24 23:59:59}
2014-06-26 11:02:58,904 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 6, 2007/11/11 16:16:16}
2014-06-26 11:02:58,905 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{3, 1, 2006/12/23 22:56:29}
2014-06-26 11:02:58,906 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{4, 6, 2007/11/01 02:13:00}
2014-06-26 11:02:58,907 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{5, 7, 2006/05/24 23:12:59}
2014-06-26 11:02:58,909 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{6, 6, 2005/11/11 16:32:01}
2014-06-26 11:02:58,910 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{7, 6, 2006/01/28 23:59:59}
2014-06-26 11:02:58,911 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{8, 6, 2007/11/09 16:23:00}
2014-06-26 11:02:58,913 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{9, 8, 2006/12/22 23:59:59}
2014-06-26 11:02:58,914 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{10, 6, 2007/11/11 09:01:00}
2014-06-26 11:02:58,915 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{11, 1, 2006/12/23 23:59:59}
2014-06-26 11:02:58,917 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{12, 9, 2007/11/15 12:43:00}
2014-06-26 11:02:58,918 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{13, 10, 2006/12/24 23:59:59}
2014-06-26 11:02:58,920 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{14, 6, 2007/04/01 16:23:01}
2014-06-26 11:02:58,921 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{15, 7, 2006/12/24 23:59:20}
2014-06-26 11:02:58,922 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{16, 6, 2007/05/01 12:23:02}
2014-06-26 11:02:58,924 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{17, 7, 2006/12/24 23:59:21}
2014-06-26 11:02:58,925 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{18, 6, 2007/06/11 17:23:03}
2014-06-26 11:02:58,926 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{19, 4, 2006/12/24 23:59:22}
2014-06-26 11:02:58,928 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{20, 3, 2007/11/01 16:12:04}
2014-06-26 11:02:58,929 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{21, 11, 2006/12/24 23:59:23}
2014-06-26 11:02:58,930 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{22, 1, 2007/11/01 16:23:05}
2014-06-26 11:02:58,932 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{23, 9, 2006/12/24 23:59:24}
2014-06-26 11:02:58,933 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{24, 8, 2007/11/01 16:23:06}
2014-06-26 11:02:58,934 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{25, 7, 2007/12/24 11:59:25}
2014-06-26 11:02:58,935 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{26, 6, 2007/06/21 01:23:57}
2014-06-26 11:02:58,937 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{27, 5, 2006/12/24 23:59:26}
2014-06-26 11:02:58,939 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{28, 3, 2007/11/01 16:23:08}
2014-06-26 11:02:58,940 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{29, 3, 2006/12/24 23:59:27}
2014-06-26 11:02:58,941 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{30, 10, 2007/11/01 16:23:09}
2014-06-26 11:02:58,943 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-26 11:02:58,957 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 30 rows are loaded to LOGIN
2014-06-26 11:02:58,959 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014/06/23, null}
2014-06-26 11:02:58,960 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014/06/24, null}
2014-06-26 11:02:58,961 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{3, ccc, 2014/06/25, 2014/06/25}
2014-06-26 11:02:58,962 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{4, ddd, 2014/06/26, null}
2014-06-26 11:02:58,963 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{5, eee2, 2014/06/27, null}
2014-06-26 11:02:58,964 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{6, fff, 2014/06/28, null}
2014-06-26 11:02:58,966 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{7, ggg3, 2014/06/29, 2014/06/25}
2014-06-26 11:02:58,968 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{8, hhh555, 2014/06/30, null}
2014-06-26 11:02:58,969 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{9, iii, 2014/07/01, 2014/06/25}
2014-06-26 11:02:58,970 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{10, jjj, 2014/07/02, null}
2014-06-26 11:02:58,971 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-26 11:02:58,995 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to MEMBER_SECURITY
2014-06-26 11:02:58,996 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 2013-06-13 00:00:00.0}
2014-06-26 11:02:58,999 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{2, 2345, 清君頼りになるー！, 2013-06-14 00:00:00.0}
2014-06-26 11:02:59,001 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{3, 3456, GLD, 2013-06-15 00:00:00.0}
2014-06-26 11:02:59,002 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{4, 875, BRZ, 2013-06-16 00:00:00.0}
2014-06-26 11:02:59,003 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{5, 1111, BRZ, 2013-06-17 00:00:00.0}
2014-06-26 11:02:59,004 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{6, 5422, SIL, 2013-06-18 00:00:00.0}
2014-06-26 11:02:59,006 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{7, 24678, SIL, 2013-06-19 00:00:00.0}
2014-06-26 11:02:59,007 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{8, 234, SIL, 2013-06-20 00:00:00.0}
2014-06-26 11:02:59,009 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{9, 3, SIL, 2013-06-21 00:00:00.0}
2014-06-26 11:02:59,012 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{10, 98765, PLT, 2013-06-22 00:00:00.0}
2014-06-26 11:02:59,013 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-26 11:02:59,022 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to TWEET
2014-06-26 11:02:59,043 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{3, 1, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123}
2014-06-26 11:02:59,045 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{6, 1, null, 2007/11/11 16:00:00.456}
2014-06-26 11:02:59,046 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{13, 2, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789}
2014-06-26 11:02:59,059 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{16, 3, コバチが２人いるため, 2007/11/13 16:00:00.456}
2014-06-26 11:02:59,083 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 4 rows are loaded to MEMBER_WITHDRAW
2014-06-26 11:02:59,086 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():379) - ...Checking implicit set of classification
2014-06-26 11:02:59,100 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - 
2014-06-26 11:02:59,101 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * * * * * * * **
2014-06-26 11:02:59,101 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2014-06-26 11:02:59,102 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * Take Finally *
2014-06-26 11:02:59,104 [main] INFO  (DfTakeFinallyProcess#takeFinally():225) - *              *
2014-06-26 11:02:59,105 [main] INFO  (DfTakeFinallyProcess#takeFinally():226) - * * * * * * * **
2014-06-26 11:02:59,116 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: take-finally.sql
2014-06-26 11:02:59,119 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2014-06-26 11:02:59,119 [main] INFO  (DfSqlFileFireMan#fire():90) - {Take Finally}: success=0 failure=0 (in 1 files)
2014-06-26 11:02:59,121 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-26 11:02:59,125 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m03s959ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=15 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=1
  (ut)
  o 20-member.xls

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-06-26 11:03:00,070 [main] INFO  (TorqueJDBCTransformTask#begin():100) - +------------------------------------------+
2014-06-26 11:03:00,072 [main] INFO  (TorqueJDBCTransformTask#begin():101) - |                                          |
2014-06-26 11:03:00,073 [main] INFO  (TorqueJDBCTransformTask#begin():102) - |                   JDBC                   |
2014-06-26 11:03:00,074 [main] INFO  (TorqueJDBCTransformTask#begin():103) - |                                          |
2014-06-26 11:03:00,075 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2014-06-26 11:03:00,115 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-26 11:03:00,116 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-26 11:03:00,117 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-26 11:03:00,118 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-26 11:03:00,164 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2014-06-26 11:03:00,165 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2014-06-26 11:03:00,165 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1469) - ...Loading previous schema (schema diff process)
2014-06-26 11:03:00,176 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-26 11:03:00,246 [main] INFO  (DfSchemaXmlSerializer#generateXML():361) - ...Getting DB connection
2014-06-26 11:03:00,251 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-26 11:03:00,429 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-26 11:03:00,429 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-26 11:03:00,432 [main] INFO  (DfSchemaXmlSerializer#generateXML():364) - ...Getting DB meta data
2014-06-26 11:03:00,434 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-26 11:03:00,435 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-26 11:03:00,436 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-26 11:03:00,447 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2014-06-26 11:03:00,450 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2014-06-26 11:03:00,462 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - 
2014-06-26 11:03:00,463 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2014-06-26 11:03:00,463 [main] INFO  (DfSchemaXmlSerializer#processTable():423) - $ [Table List]
2014-06-26 11:03:00,465 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.follow(TABLE) // フォロー
2014-06-26 11:03:00,502 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.followers(TABLE) // フォロワー
2014-06-26 11:03:00,515 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.login(TABLE) // ログイン
2014-06-26 11:03:00,529 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member(TABLE) // 会員
2014-06-26 11:03:00,542 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_security(TABLE) // 会員セキュリティ
2014-06-26 11:03:00,557 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_withdraw(TABLE) // 会員退会
2014-06-26 11:03:00,570 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.tweet(TABLE) // TWEET
2014-06-26 11:03:00,582 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 
2014-06-26 11:03:00,584 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ [Table Count]
2014-06-26 11:03:00,585 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ 7
2014-06-26 11:03:00,585 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - $ = = = = = = = = = =/
2014-06-26 11:03:00,587 [main] INFO  (DfSchemaXmlSerializer#processTable():439) - 
2014-06-26 11:03:00,590 [main] INFO  (DfSchemaXmlSerializer#processSequence():799) - ...Getting sequences
2014-06-26 11:03:00,596 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2014-06-26 11:03:00,596 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-twitter.xml
2014-06-26 11:03:00,597 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2014-06-26 11:03:00,613 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1487) - ...Loading next schema (schema diff process)
2014-06-26 11:03:00,615 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-26 11:03:00,659 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1492) -  -> different from previous (schema diff)
2014-06-26 11:03:00,660 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1494) - ...Serializing schema-diff:
2014-06-26 11:03:00,661 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1495) -   filePath = ./schema/project-history-twitter.diffmap
2014-06-26 11:03:00,677 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-26 11:03:00,684 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s609ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2014-06-26 11:03:01,616 [main] INFO  (TorqueDocumentationTask#begin():171) - +------------------------------------------+
2014-06-26 11:03:01,619 [main] INFO  (TorqueDocumentationTask#begin():172) - |                                          |
2014-06-26 11:03:01,620 [main] INFO  (TorqueDocumentationTask#begin():173) - |                   Doc                    |
2014-06-26 11:03:01,620 [main] INFO  (TorqueDocumentationTask#begin():181) - |                                          |
2014-06-26 11:03:01,622 [main] INFO  (TorqueDocumentationTask#begin():182) - +------------------------------------------+
2014-06-26 11:03:01,669 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-26 11:03:01,669 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-26 11:03:01,670 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-26 11:03:01,671 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-26 11:03:01,675 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():242) - 
2014-06-26 11:03:01,676 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():243) - * * * * * * * * * * *
2014-06-26 11:03:01,676 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():244) - *                   *
2014-06-26 11:03:01,678 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():245) - *    Schema HTML    *
2014-06-26 11:03:01,679 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - *                   *
2014-06-26 11:03:01,680 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2014-06-26 11:03:01,838 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-26 11:03:01,905 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("doc/ControlDocument.vm", c);
2014-06-26 11:03:01,978 [main] INFO  (Database#doEnableDocumentOutputDirectory():1180) - ...Setting up documentOutputDirectory: ./output/doc
2014-06-26 11:03:01,987 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-26 11:03:01,987 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-26 11:03:01,989 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-26 11:03:01,991 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-26 11:03:01,991 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-26 11:03:01,994 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-26 11:03:01,997 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-26 11:03:01,997 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-26 11:03:01,999 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-26 11:03:02,007 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():150) - ...Loading schema history
2014-06-26 11:03:02,062 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():154) -  -> found history: count=11
2014-06-26 11:03:02,296 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-26 11:03:02,308 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s689ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Doc}
2014-06-26 11:03:05,213 [main] INFO  (TorqueDataModelTask#begin():105) - +------------------------------------------+
2014-06-26 11:03:05,215 [main] INFO  (TorqueDataModelTask#begin():106) - |                                          |
2014-06-26 11:03:05,216 [main] INFO  (TorqueDataModelTask#begin():107) - |                 Generate                 |
2014-06-26 11:03:05,216 [main] INFO  (TorqueDataModelTask#begin():108) - |                                          |
2014-06-26 11:03:05,218 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2014-06-26 11:03:05,255 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-26 11:03:05,256 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-26 11:03:05,257 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-26 11:03:05,258 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-26 11:03:05,276 [main] INFO  (TorqueDataModelTask#setupControlTemplate():160) - 
2014-06-26 11:03:05,277 [main] INFO  (TorqueDataModelTask#setupControlTemplate():161) - ...Using Java control: om/ControlGenerateJava.vm
2014-06-26 11:03:05,414 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-26 11:03:05,460 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlGenerateJava.vm", c);
2014-06-26 11:03:05,593 [main] INFO  (Database#doEnableGenerateOutputDirectory():1148) - ...Setting up generateOutputDirectory: ../src/main/java
2014-06-26 11:03:05,602 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-26 11:03:05,604 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-26 11:03:05,607 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-26 11:03:05,610 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-26 11:03:05,610 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-26 11:03:05,613 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-26 11:03:05,615 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-26 11:03:05,616 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-26 11:03:05,619 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-26 11:03:05,636 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - /=============================
2014-06-26 11:03:05,636 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():60) - ...Initializing include query.
2014-06-26 11:03:05,637 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - String
2014-06-26 11:03:05,638 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Number
2014-06-26 11:03:05,640 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Date
2014-06-26 11:03:05,641 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotEqual -> []
2014-06-26 11:03:05,642 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   InScope -> []
2014-06-26 11:03:05,644 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotInScope -> []
2014-06-26 11:03:05,645 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - OrderBy
2014-06-26 11:03:05,647 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():62) - ========/
2014-06-26 11:03:05,663 [main] INFO  (Database#info():2577) - public void parseAllCommon() {
2014-06-26 11:03:05,666 [main] INFO  (Database#info():2577) -     parse('DBCurrent');
2014-06-26 11:03:05,673 [main] INFO  (Database#info():2577) -     parse('DBFluteConfig');
2014-06-26 11:03:05,692 [main] INFO  (Database#info():2577) -     parse('DBFluteInitializer');
2014-06-26 11:03:05,699 [main] INFO  (Database#info():2577) -     parse('DBMetaInstanceHandler');
2014-06-26 11:03:05,717 [main] INFO  (Database#info():2577) -     parse('EntityDefinedCommonColumn');
2014-06-26 11:03:05,721 [main] INFO  (Database#info():2577) -     parse('ImplementedBehaviorSelector');
2014-06-26 11:03:05,725 [main] INFO  (Database#info():2577) -     parse('ImplementedCommonColumnAutoSetupper');
2014-06-26 11:03:05,729 [main] INFO  (Database#info():2577) -     parse('ImplementedInvokerAssistant');
2014-06-26 11:03:05,732 [main] INFO  (Database#info():2577) -     parse('ImplementedSqlClauseCreator');
2014-06-26 11:03:05,734 [main] INFO  (Database#info():2577) - }
2014-06-26 11:03:05,735 [main] INFO  (Database#info():2577) - public void parseContainerConfig() {
2014-06-26 11:03:05,736 [main] INFO  (Database#info():2577) -     parse('../resources/dbflute.dicon')
2014-06-26 11:03:05,745 [main] INFO  (Database#info():2577) - }
2014-06-26 11:03:05,749 [main] INFO  (DfOldClassHandler#info():886) - public void deleteOldTableClass() {
2014-06-26 11:03:05,769 [main] INFO  (DfOldClassHandler#info():886) - }
2014-06-26 11:03:05,770 [main] INFO  (Database#info():2577) - public void parseTableClass() {
2014-06-26 11:03:05,771 [main] INFO  (Database#info():2577) -     parse('follow');
2014-06-26 11:03:05,994 [main] INFO  (Database#info():2577) -     parse('followers');
2014-06-26 11:03:06,171 [main] INFO  (Database#info():2577) -     parse('login');
2014-06-26 11:03:06,316 [main] INFO  (Database#info():2577) -     parse('member');
2014-06-26 11:03:06,597 [main] INFO  (Database#info():2577) -     parse('member_security');
2014-06-26 11:03:06,726 [main] INFO  (Database#info():2577) -     parse('member_withdraw');
2014-06-26 11:03:06,818 [main] INFO  (Database#info():2577) -     parse('tweet');
2014-06-26 11:03:06,902 [main] INFO  (Database#info():2577) - }
2014-06-26 11:03:06,902 [main] INFO  (Database#info():2577) -  
2014-06-26 11:03:06,926 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-26 11:03:06,933 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s717ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Generate}
2014-06-26 11:03:08,179 [main] INFO  (DfOutsideSqlTestTask#begin():72) - +------------------------------------------+
2014-06-26 11:03:08,182 [main] INFO  (DfOutsideSqlTestTask#begin():73) - |                                          |
2014-06-26 11:03:08,182 [main] INFO  (DfOutsideSqlTestTask#begin():74) - |              OutsideSqlTest              |
2014-06-26 11:03:08,183 [main] INFO  (DfOutsideSqlTestTask#begin():75) - |                                          |
2014-06-26 11:03:08,185 [main] INFO  (DfOutsideSqlTestTask#begin():76) - +------------------------------------------+
2014-06-26 11:03:08,236 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-26 11:03:08,236 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-26 11:03:08,237 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-26 11:03:08,238 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-26 11:03:08,280 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-26 11:03:08,286 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s102ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2014-06-26 11:03:09,187 [main] INFO  (DfSql2EntityTask#begin():100) - +------------------------------------------+
2014-06-26 11:03:09,190 [main] INFO  (DfSql2EntityTask#begin():101) - |                                          |
2014-06-26 11:03:09,190 [main] INFO  (DfSql2EntityTask#begin():102) - |                Sql2Entity                |
2014-06-26 11:03:09,191 [main] INFO  (DfSql2EntityTask#begin():103) - |                                          |
2014-06-26 11:03:09,193 [main] INFO  (DfSql2EntityTask#begin():104) - +------------------------------------------+
2014-06-26 11:03:09,231 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-26 11:03:09,232 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-26 11:03:09,233 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-26 11:03:09,234 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-26 11:03:09,252 [main] INFO  (DfSql2EntityTask#setupControlTemplate():170) - 
2014-06-26 11:03:09,253 [main] INFO  (DfSql2EntityTask#setupControlTemplate():171) - ...Using Java control: om/ControlSql2EntityJava.vm
2014-06-26 11:03:09,260 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-26 11:03:09,304 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-26 11:03:09,442 [main] INFO  (DfSql2EntityTask#initControlContext():301) - 
2014-06-26 11:03:09,442 [main] INFO  (DfSql2EntityTask#initControlContext():302) - ...Preparing generation of customize-entities and parameter-beans
2014-06-26 11:03:09,443 [main] INFO  (DfSql2EntityTask#initControlContext():303) - * * * * * * * * * *
2014-06-26 11:03:09,445 [main] INFO  (DfSql2EntityTask#initControlContext():304) - * CustomizeEntity *
2014-06-26 11:03:09,446 [main] INFO  (DfSql2EntityTask#initControlContext():305) - * * * * * * * * * *
2014-06-26 11:03:09,447 [main] INFO  (DfSql2EntityTask#showParameterBean():871) - * * * * * * * * *
2014-06-26 11:03:09,449 [main] INFO  (DfSql2EntityTask#showParameterBean():872) - * ParameterBean *
2014-06-26 11:03:09,450 [main] INFO  (DfSql2EntityTask#showParameterBean():873) - * * * * * * * * *
2014-06-26 11:03:09,456 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlSql2EntityJava.vm", c);
2014-06-26 11:03:09,548 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1164) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2014-06-26 11:03:09,551 [main] INFO  (DfOldClassHandler#info():886) - public void deleteOldCustomizeClass() {
2014-06-26 11:03:09,561 [main] INFO  (DfOldClassHandler#info():886) - }
2014-06-26 11:03:09,562 [main] INFO  (Database#info():2577) - public void parseCustomizeEntity() {
2014-06-26 11:03:09,564 [main] INFO  (Database#info():2577) - }
2014-06-26 11:03:09,576 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():293) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2014-06-26 11:03:09,584 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-26 11:03:09,590 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s400ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2014-06-27 09:05:18,325 [main] INFO  (DfReplaceSchemaTask#begin():87) - +------------------------------------------+
2014-06-27 09:05:18,331 [main] INFO  (DfReplaceSchemaTask#begin():88) - |                                          |
2014-06-27 09:05:18,332 [main] INFO  (DfReplaceSchemaTask#begin():89) - |              ReplaceSchema               |
2014-06-27 09:05:18,352 [main] INFO  (DfReplaceSchemaTask#begin():97) - |                                          |
2014-06-27 09:05:18,353 [main] INFO  (DfReplaceSchemaTask#begin():98) - +------------------------------------------+
2014-06-27 09:05:18,355 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():329) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2014-06-27 09:05:20,619 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 09:05:20,621 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 09:05:20,622 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 09:05:20,623 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 09:05:20,636 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-27 09:05:20,876 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-27 09:05:20,877 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-27 09:05:20,896 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():207) - 
2014-06-27 09:05:20,897 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():208) - * * * * * * * * * * *
2014-06-27 09:05:20,898 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():209) - *                   *
2014-06-27 09:05:20,899 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():210) - * Initialize Schema *
2014-06-27 09:05:20,900 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():211) - *                   *
2014-06-27 09:05:20,902 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():212) - * * * * * * * * * * *
2014-06-27 09:05:20,920 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-27 09:05:20,921 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-27 09:05:20,921 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-27 09:05:20,964 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table follow
2014-06-27 09:05:21,020 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table followers
2014-06-27 09:05:21,053 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table login
2014-06-27 09:05:21,077 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_security
2014-06-27 09:05:21,120 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_withdraw
2014-06-27 09:05:21,165 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table tweet
2014-06-27 09:05:21,193 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_1
2014-06-27 09:05:21,204 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table followers drop foreign key followers_ibfk_1
2014-06-27 09:05:21,214 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table login drop foreign key login_ibfk_1
2014-06-27 09:05:21,224 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_security drop foreign key member_security_ibfk_1
2014-06-27 09:05:21,233 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_withdraw drop foreign key member_withdraw_ibfk_1
2014-06-27 09:05:21,243 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table tweet drop foreign key tweet_ibfk_1
2014-06-27 09:05:21,257 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table follow
2014-06-27 09:05:21,275 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table followers
2014-06-27 09:05:21,299 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table login
2014-06-27 09:05:21,318 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member
2014-06-27 09:05:21,346 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_security
2014-06-27 09:05:21,365 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_withdraw
2014-06-27 09:05:21,384 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table tweet
2014-06-27 09:05:21,470 [main] INFO  (DfCreateSchemaProcess#createSchema():244) - 
2014-06-27 09:05:21,470 [main] INFO  (DfCreateSchemaProcess#createSchema():245) - * * * * * * * * *
2014-06-27 09:05:21,471 [main] INFO  (DfCreateSchemaProcess#createSchema():246) - *               *
2014-06-27 09:05:21,473 [main] INFO  (DfCreateSchemaProcess#createSchema():247) - * Create Schema *
2014-06-27 09:05:21,474 [main] INFO  (DfCreateSchemaProcess#createSchema():248) - *               *
2014-06-27 09:05:21,475 [main] INFO  (DfCreateSchemaProcess#createSchema():249) - * * * * * * * * *
2014-06-27 09:05:21,481 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-00-system.sql
2014-06-27 09:05:21,484 [main] INFO  (DfReplaceSchemaProperties#checkTargetEnvType():277) - ...Checking envType: ut in [ut]
2014-06-27 09:05:21,486 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:checkEnv(ut)#

-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database twitter
2014-06-27 09:05:21,493 [main] INFO  (DfCreateSchemaProcess$1#dispatch():273) - ...Creating a connection to system
2014-06-27 09:05:21,495 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():514) - ...Creating a connection for additional user: root
2014-06-27 09:05:21,511 [main] INFO  (DfCreateSchemaProcess$1#dispatch():299) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2014-06-27 09:05:21,513 [main] INFO  (DfCreateSchemaProcess$1#dispatch():301) -  -> Can't create database 'twitter'; database exists
2014-06-27 09:05:21,515 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():411) - ...Reviving the user 'system' until the end of this SQL file
2014-06-27 09:05:21,517 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on twitter.*
  to twitter@localhost identified by 'twitter'
2014-06-27 09:05:21,524 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2014-06-27 09:05:21,527 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2014-06-27 09:05:21,528 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-10-basic.sql
2014-06-27 09:05:21,529 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():348) - ...Saying good-bye to the user 'system' again
2014-06-27 09:05:21,530 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():352) - ...Clearing revived users
2014-06-27 09:05:21,532 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():359) - ...Coming back to the main user from the user 'system'
2014-06-27 09:05:21,536 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FOLLOW
(
	FOLLOW_ID INT(100) NOT NULL UNIQUE COMMENT 'フォローID',
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PRIMARY KEY (FOLLOW_ID)
) COMMENT = 'フォロー'
2014-06-27 09:05:21,571 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE FOLLOWERS
(
	FOLLOWERSID INT(100) NOT NULL UNIQUE COMMENT 'フォロワーID',
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PRIMARY KEY (FOLLOWERSID)
) COMMENT = 'フォロワー'
2014-06-27 09:05:21,631 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE LOGIN
(
	LOGIN_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ログインID : ログインした瞬間のID
',
	LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	PRIMARY KEY (LOGIN_ID)
) COMMENT = 'ログイン'
2014-06-27 09:05:21,683 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER
(
	MEMBER_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員のID
',
	EMAIL_ADDRESS VARCHAR(100) NOT NULL UNIQUE COMMENT 'メールアドレス : 会員のメールアドレス',
	USER_NAME VARCHAR(50) NOT NULL UNIQUE COMMENT '会員ユーザ名 : 会員のユーザ名',
	UPDATE_DATETIME DATETIME COMMENT '更新日時',
	BIRTHDATE DATE COMMENT '生年月日 : 会員の生年月日',
	PROFILE VARCHAR(200) COMMENT 'プロフィール',
	REGESTER_DATETIME DATETIME NOT NULL COMMENT '登録日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員'
2014-06-27 09:05:21,760 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PASSWORD VARCHAR(50) NOT NULL COMMENT 'パスワード',
	PASSWORD_UPDATE_DATETIME DATETIME COMMENT 'パスワード更新日時',
	PASSWORD_REGESTERATION_DATETIME DATETIME NOT NULL COMMENT 'パスワード登録日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員セキュリティ'
2014-06-27 09:05:21,822 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_WITHDRAW
(
	WITHDRAWAL_REASON_ID INT COMMENT '退会理由ID : 会員の退会理由ID',
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト',
	WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT 'withdrawal_datetime : 退会日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員退会'
2014-06-27 09:05:21,871 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	TWEET_DATETIME DATETIME NOT NULL COMMENT 'TWEET日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-06-27 09:05:21,930 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FOLLOW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 09:05:22,027 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOWERS
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 09:05:22,132 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 09:05:22,219 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 09:05:22,315 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_WITHDRAW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 09:05:22,391 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 09:05:22,454 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=13 failure=0
2014-06-27 09:05:22,455 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=15 failure=0 (in 2 files)
2014-06-27 09:05:22,455 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-06-27 09:05:22,493 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-06-27 09:05:22,493 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-06-27 09:05:22,494 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-06-27 09:05:22,495 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-06-27 09:05:22,497 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-06-27 09:05:22,499 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-06-27 09:05:22,523 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-06-27 09:05:22,524 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-06-27 09:05:22,525 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-06-27 09:05:22,824 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-27 09:05:22,825 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-27 09:05:22,826 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-27 09:05:22,882 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{1, Stojkovic@gmail.com, Pixy, 1965/03/03, 2014-06-24 00:00:00.0, 2014-06-27 09:05:22.881}
2014-06-27 09:05:22,938 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{2, Savicevic@gmail.com, Genius, 1966/09/15, 2014-06-25 00:00:00.0, 2014-06-27 09:05:22.938}
2014-06-27 09:05:22,940 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{3, Mijatovic@gmail.com, Mijato, null, 2014-06-26 00:00:00.0, 2014-06-27 09:05:22.94}
2014-06-27 09:05:22,941 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{4, Stankovic@gmail.com, Stanko, 1978/09/11, 2014-06-27 00:00:00.0, 2014-06-27 09:05:22.941}
2014-06-27 09:05:22,942 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{5, Milosevic@gmail.com, Milose, null, 2014-06-28 00:00:00.0, 2014-06-27 09:05:22.942}
2014-06-27 09:05:22,943 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{6, Mihajlovic@gmail.com, FreeKick, 1969/02/20, 2014-06-29 00:00:00.0, 2014-06-27 09:05:22.943}
2014-06-27 09:05:22,944 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{7, アカギ@gmail.com, Akagi, null, 2014-06-30 00:00:00.0, 2014-06-27 09:05:22.944}
2014-06-27 09:05:22,947 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{8, Kezman@gmial.com, RedCard, null, 2014-07-01 00:00:00.0, 2014-06-27 09:05:22.947}
2014-06-27 09:05:22,949 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{9, Maslovar@gmail.com, JEFUnited, 1967/02/20, 2014-07-02 00:00:00.0, 2014-06-27 09:05:22.949}
2014-06-27 09:05:22,951 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{10, 諸葛亮孔明@gmail.com, ShokatsuGoGo, null, 2014-07-03 00:00:00.0, 2014-06-27 09:05:22.95}
2014-06-27 09:05:22,953 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{11, Boban@gmail.com, Boban, 1968/10/08, 2014-07-04 00:00:00.0, 2014-06-27 09:05:22.953}
2014-06-27 09:05:22,955 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{12, Suker@gmail.com, Suker, 1968/01/01, 2014-07-05 00:00:00.0, 2014-06-27 09:05:22.955}
2014-06-27 09:05:22,957 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{13, Jarni@gmail.com, Jarni, 1968/10/26, 2014-07-06 00:00:00.0, 2014-06-27 09:05:22.957}
2014-06-27 09:05:22,958 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{14, Boksic@gmail.com, Boksic, 1970/01/21, 2014-07-07 00:00:00.0, 2014-06-27 09:05:22.958}
2014-06-27 09:05:22,960 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{15, Prosinecki@gmail.com, Prosinecki, 1969/01/12, 2014-07-08 00:00:00.0, 2014-06-27 09:05:22.96}
2014-06-27 09:05:22,962 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{16, RobeltKovac@gmail.com, RobeltKovac, null, 2014-07-09 00:00:00.0, 2014-06-27 09:05:22.962}
2014-06-27 09:05:22,963 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{17, NikoKovac@gmail.com, NikoKovac, null, 2014-07-10 00:00:00.0, 2014-06-27 09:05:22.963}
2014-06-27 09:05:22,965 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{18, Jovanovic@gmail.com, Jovano, 1981/04/18, 2014-07-11 00:00:00.0, 2014-06-27 09:05:22.965}
2014-06-27 09:05:22,966 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{19, Milko@gmail.com, Milko, 1974/09/10, 2014-07-12 00:00:00.0, 2014-06-27 09:05:22.966}
2014-06-27 09:05:22,968 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{20, 諸葛瑾子瑜@gmail.com, ShokatsuKinKin, null, 2014-07-13 00:00:00.0, 2014-06-27 09:05:22.968}
2014-06-27 09:05:22,984 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 20 rows are loaded to MEMBER
2014-06-27 09:05:22,987 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 3, 2006/12/24 23:59:59}
2014-06-27 09:05:22,988 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 6, 2007/11/11 16:16:16}
2014-06-27 09:05:22,989 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{3, 1, 2006/12/23 22:56:29}
2014-06-27 09:05:22,990 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{4, 6, 2007/11/01 02:13:00}
2014-06-27 09:05:22,991 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{5, 7, 2006/05/24 23:12:59}
2014-06-27 09:05:22,993 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{6, 6, 2005/11/11 16:32:01}
2014-06-27 09:05:22,994 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{7, 6, 2006/01/28 23:59:59}
2014-06-27 09:05:22,995 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{8, 6, 2007/11/09 16:23:00}
2014-06-27 09:05:22,997 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{9, 8, 2006/12/22 23:59:59}
2014-06-27 09:05:22,998 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{10, 6, 2007/11/11 09:01:00}
2014-06-27 09:05:23,000 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{11, 1, 2006/12/23 23:59:59}
2014-06-27 09:05:23,001 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{12, 9, 2007/11/15 12:43:00}
2014-06-27 09:05:23,002 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{13, 10, 2006/12/24 23:59:59}
2014-06-27 09:05:23,004 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{14, 6, 2007/04/01 16:23:01}
2014-06-27 09:05:23,005 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{15, 7, 2006/12/24 23:59:20}
2014-06-27 09:05:23,006 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{16, 6, 2007/05/01 12:23:02}
2014-06-27 09:05:23,008 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{17, 7, 2006/12/24 23:59:21}
2014-06-27 09:05:23,009 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{18, 6, 2007/06/11 17:23:03}
2014-06-27 09:05:23,010 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{19, 4, 2006/12/24 23:59:22}
2014-06-27 09:05:23,012 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{20, 3, 2007/11/01 16:12:04}
2014-06-27 09:05:23,013 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{21, 11, 2006/12/24 23:59:23}
2014-06-27 09:05:23,014 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{22, 1, 2007/11/01 16:23:05}
2014-06-27 09:05:23,016 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{23, 9, 2006/12/24 23:59:24}
2014-06-27 09:05:23,018 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{24, 8, 2007/11/01 16:23:06}
2014-06-27 09:05:23,019 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{25, 7, 2007/12/24 11:59:25}
2014-06-27 09:05:23,020 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{26, 6, 2007/06/21 01:23:57}
2014-06-27 09:05:23,022 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{27, 5, 2006/12/24 23:59:26}
2014-06-27 09:05:23,023 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{28, 3, 2007/11/01 16:23:08}
2014-06-27 09:05:23,024 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{29, 3, 2006/12/24 23:59:27}
2014-06-27 09:05:23,025 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{30, 10, 2007/11/01 16:23:09}
2014-06-27 09:05:23,027 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-27 09:05:23,039 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 30 rows are loaded to LOGIN
2014-06-27 09:05:23,040 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014/06/23, null}
2014-06-27 09:05:23,042 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014/06/24, null}
2014-06-27 09:05:23,043 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{3, ccc, 2014/06/25, 2014/06/25}
2014-06-27 09:05:23,044 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{4, ddd, 2014/06/26, null}
2014-06-27 09:05:23,045 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{5, eee2, 2014/06/27, null}
2014-06-27 09:05:23,046 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{6, fff, 2014/06/28, null}
2014-06-27 09:05:23,048 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{7, ggg3, 2014/06/29, 2014/06/25}
2014-06-27 09:05:23,050 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{8, hhh555, 2014/06/30, null}
2014-06-27 09:05:23,051 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{9, iii, 2014/07/01, 2014/06/25}
2014-06-27 09:05:23,052 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{10, jjj, 2014/07/02, null}
2014-06-27 09:05:23,053 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-27 09:05:23,065 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to MEMBER_SECURITY
2014-06-27 09:05:23,066 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 2013-06-13 00:00:00.0}
2014-06-27 09:05:23,068 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{2, 2345, 清君頼りになるー！, 2013-06-14 00:00:00.0}
2014-06-27 09:05:23,070 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{3, 3456, GLD, 2013-06-15 00:00:00.0}
2014-06-27 09:05:23,071 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{4, 875, BRZ, 2013-06-16 00:00:00.0}
2014-06-27 09:05:23,072 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{5, 1111, BRZ, 2013-06-17 00:00:00.0}
2014-06-27 09:05:23,073 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{6, 5422, SIL, 2013-06-18 00:00:00.0}
2014-06-27 09:05:23,075 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{7, 24678, SIL, 2013-06-19 00:00:00.0}
2014-06-27 09:05:23,076 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{8, 234, SIL, 2013-06-20 00:00:00.0}
2014-06-27 09:05:23,078 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{9, 3, SIL, 2013-06-21 00:00:00.0}
2014-06-27 09:05:23,081 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{10, 98765, PLT, 2013-06-22 00:00:00.0}
2014-06-27 09:05:23,082 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-27 09:05:23,089 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to TWEET
2014-06-27 09:05:23,108 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{3, 1, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123}
2014-06-27 09:05:23,113 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{6, 1, null, 2007/11/11 16:00:00.456}
2014-06-27 09:05:23,116 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{13, 2, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789}
2014-06-27 09:05:23,119 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{16, 3, コバチが２人いるため, 2007/11/13 16:00:00.456}
2014-06-27 09:05:23,128 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 4 rows are loaded to MEMBER_WITHDRAW
2014-06-27 09:05:23,134 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():379) - ...Checking implicit set of classification
2014-06-27 09:05:23,153 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - 
2014-06-27 09:05:23,154 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * * * * * * * **
2014-06-27 09:05:23,154 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2014-06-27 09:05:23,156 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * Take Finally *
2014-06-27 09:05:23,157 [main] INFO  (DfTakeFinallyProcess#takeFinally():225) - *              *
2014-06-27 09:05:23,158 [main] INFO  (DfTakeFinallyProcess#takeFinally():226) - * * * * * * * **
2014-06-27 09:05:23,170 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: take-finally.sql
2014-06-27 09:05:23,172 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2014-06-27 09:05:23,173 [main] INFO  (DfSqlFileFireMan#fire():90) - {Take Finally}: success=0 failure=0 (in 1 files)
2014-06-27 09:05:23,175 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-27 09:05:23,180 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m04s851ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=15 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=1
  (ut)
  o 20-member.xls

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-06-27 09:05:24,133 [main] INFO  (TorqueJDBCTransformTask#begin():100) - +------------------------------------------+
2014-06-27 09:05:24,136 [main] INFO  (TorqueJDBCTransformTask#begin():101) - |                                          |
2014-06-27 09:05:24,136 [main] INFO  (TorqueJDBCTransformTask#begin():102) - |                   JDBC                   |
2014-06-27 09:05:24,137 [main] INFO  (TorqueJDBCTransformTask#begin():103) - |                                          |
2014-06-27 09:05:24,139 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2014-06-27 09:05:24,204 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 09:05:24,205 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 09:05:24,205 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 09:05:24,206 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 09:05:24,260 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2014-06-27 09:05:24,260 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2014-06-27 09:05:24,261 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1469) - ...Loading previous schema (schema diff process)
2014-06-27 09:05:24,274 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-27 09:05:24,344 [main] INFO  (DfSchemaXmlSerializer#generateXML():361) - ...Getting DB connection
2014-06-27 09:05:24,349 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-27 09:05:24,538 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-27 09:05:24,539 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-27 09:05:24,541 [main] INFO  (DfSchemaXmlSerializer#generateXML():364) - ...Getting DB meta data
2014-06-27 09:05:24,543 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-27 09:05:24,543 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-27 09:05:24,544 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-27 09:05:24,556 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2014-06-27 09:05:24,559 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2014-06-27 09:05:24,571 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - 
2014-06-27 09:05:24,572 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2014-06-27 09:05:24,572 [main] INFO  (DfSchemaXmlSerializer#processTable():423) - $ [Table List]
2014-06-27 09:05:24,574 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.follow(TABLE) // フォロー
2014-06-27 09:05:24,609 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.followers(TABLE) // フォロワー
2014-06-27 09:05:24,621 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.login(TABLE) // ログイン
2014-06-27 09:05:24,636 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member(TABLE) // 会員
2014-06-27 09:05:24,650 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_security(TABLE) // 会員セキュリティ
2014-06-27 09:05:24,664 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_withdraw(TABLE) // 会員退会
2014-06-27 09:05:24,676 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.tweet(TABLE) // TWEET
2014-06-27 09:05:24,691 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 
2014-06-27 09:05:24,691 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ [Table Count]
2014-06-27 09:05:24,692 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ 7
2014-06-27 09:05:24,693 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - $ = = = = = = = = = =/
2014-06-27 09:05:24,694 [main] INFO  (DfSchemaXmlSerializer#processTable():439) - 
2014-06-27 09:05:24,702 [main] INFO  (DfSchemaXmlSerializer#processSequence():799) - ...Getting sequences
2014-06-27 09:05:24,707 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2014-06-27 09:05:24,707 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-twitter.xml
2014-06-27 09:05:24,708 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2014-06-27 09:05:24,725 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1487) - ...Loading next schema (schema diff process)
2014-06-27 09:05:24,727 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-27 09:05:24,764 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1502) -  -> same as previous (schema diff)
2014-06-27 09:05:24,765 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-27 09:05:24,771 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s634ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2014-06-27 09:05:25,722 [main] INFO  (TorqueDocumentationTask#begin():171) - +------------------------------------------+
2014-06-27 09:05:25,725 [main] INFO  (TorqueDocumentationTask#begin():172) - |                                          |
2014-06-27 09:05:25,726 [main] INFO  (TorqueDocumentationTask#begin():173) - |                   Doc                    |
2014-06-27 09:05:25,726 [main] INFO  (TorqueDocumentationTask#begin():181) - |                                          |
2014-06-27 09:05:25,728 [main] INFO  (TorqueDocumentationTask#begin():182) - +------------------------------------------+
2014-06-27 09:05:25,773 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 09:05:25,774 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 09:05:25,774 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 09:05:25,775 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 09:05:25,780 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():242) - 
2014-06-27 09:05:25,781 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():243) - * * * * * * * * * * *
2014-06-27 09:05:25,781 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():244) - *                   *
2014-06-27 09:05:25,783 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():245) - *    Schema HTML    *
2014-06-27 09:05:25,784 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - *                   *
2014-06-27 09:05:25,786 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2014-06-27 09:05:25,959 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-27 09:05:26,034 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("doc/ControlDocument.vm", c);
2014-06-27 09:05:26,099 [main] INFO  (Database#doEnableDocumentOutputDirectory():1180) - ...Setting up documentOutputDirectory: ./output/doc
2014-06-27 09:05:26,109 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-27 09:05:26,110 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-27 09:05:26,117 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-27 09:05:26,118 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-27 09:05:26,119 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-27 09:05:26,122 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-27 09:05:26,125 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-27 09:05:26,125 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-27 09:05:26,128 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-27 09:05:26,138 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():150) - ...Loading schema history
2014-06-27 09:05:26,177 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():154) -  -> found history: count=11
2014-06-27 09:05:26,424 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-27 09:05:26,439 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s714ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Doc}
2014-06-27 09:05:29,397 [main] INFO  (TorqueDataModelTask#begin():105) - +------------------------------------------+
2014-06-27 09:05:29,400 [main] INFO  (TorqueDataModelTask#begin():106) - |                                          |
2014-06-27 09:05:29,401 [main] INFO  (TorqueDataModelTask#begin():107) - |                 Generate                 |
2014-06-27 09:05:29,401 [main] INFO  (TorqueDataModelTask#begin():108) - |                                          |
2014-06-27 09:05:29,403 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2014-06-27 09:05:29,442 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 09:05:29,443 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 09:05:29,444 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 09:05:29,445 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 09:05:29,466 [main] INFO  (TorqueDataModelTask#setupControlTemplate():160) - 
2014-06-27 09:05:29,467 [main] INFO  (TorqueDataModelTask#setupControlTemplate():161) - ...Using Java control: om/ControlGenerateJava.vm
2014-06-27 09:05:29,605 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-27 09:05:29,648 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlGenerateJava.vm", c);
2014-06-27 09:05:29,784 [main] INFO  (Database#doEnableGenerateOutputDirectory():1148) - ...Setting up generateOutputDirectory: ../src/main/java
2014-06-27 09:05:29,796 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-27 09:05:29,797 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-27 09:05:29,803 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-27 09:05:29,805 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-27 09:05:29,806 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-27 09:05:29,809 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-27 09:05:29,813 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-27 09:05:29,814 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-27 09:05:29,817 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-27 09:05:29,832 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - /=============================
2014-06-27 09:05:29,833 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():60) - ...Initializing include query.
2014-06-27 09:05:29,833 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - String
2014-06-27 09:05:29,835 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Number
2014-06-27 09:05:29,836 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Date
2014-06-27 09:05:29,838 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotEqual -> []
2014-06-27 09:05:29,839 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   InScope -> []
2014-06-27 09:05:29,840 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotInScope -> []
2014-06-27 09:05:29,842 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - OrderBy
2014-06-27 09:05:29,843 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():62) - ========/
2014-06-27 09:05:29,861 [main] INFO  (Database#info():2573) - public void parseAllCommon() {
2014-06-27 09:05:29,864 [main] INFO  (Database#info():2573) -     parse('DBCurrent');
2014-06-27 09:05:29,872 [main] INFO  (Database#info():2573) -     parse('DBFluteConfig');
2014-06-27 09:05:29,896 [main] INFO  (Database#info():2573) -     parse('DBFluteInitializer');
2014-06-27 09:05:29,902 [main] INFO  (Database#info():2573) -     parse('DBMetaInstanceHandler');
2014-06-27 09:05:29,919 [main] INFO  (Database#info():2573) -     parse('EntityDefinedCommonColumn');
2014-06-27 09:05:29,924 [main] INFO  (Database#info():2573) -     parse('ImplementedBehaviorSelector');
2014-06-27 09:05:29,929 [main] INFO  (Database#info():2573) -     parse('ImplementedCommonColumnAutoSetupper');
2014-06-27 09:05:29,936 [main] INFO  (Database#info():2573) -     parse('ImplementedInvokerAssistant');
2014-06-27 09:05:29,941 [main] INFO  (Database#info():2573) -     parse('ImplementedSqlClauseCreator');
2014-06-27 09:05:29,945 [main] INFO  (Database#info():2573) - }
2014-06-27 09:05:29,946 [main] INFO  (Database#info():2573) - public void parseContainerConfig() {
2014-06-27 09:05:29,947 [main] INFO  (Database#info():2573) -     parse('../resources/dbflute.dicon')
2014-06-27 09:05:29,955 [main] INFO  (Database#info():2573) - }
2014-06-27 09:05:29,960 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldTableClass() {
2014-06-27 09:05:29,983 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-06-27 09:05:29,984 [main] INFO  (Database#info():2573) - public void parseTableClass() {
2014-06-27 09:05:29,985 [main] INFO  (Database#info():2573) -     parse('follow');
2014-06-27 09:05:30,227 [main] INFO  (Database#info():2573) -     parse('followers');
2014-06-27 09:05:30,407 [main] INFO  (Database#info():2573) -     parse('login');
2014-06-27 09:05:30,589 [main] INFO  (Database#info():2573) -     parse('member');
2014-06-27 09:05:30,899 [main] INFO  (Database#info():2573) -     parse('member_security');
2014-06-27 09:05:31,016 [main] INFO  (Database#info():2573) -     parse('member_withdraw');
2014-06-27 09:05:31,117 [main] INFO  (Database#info():2573) -     parse('tweet');
2014-06-27 09:05:31,222 [main] INFO  (Database#info():2573) - }
2014-06-27 09:05:31,223 [main] INFO  (Database#info():2573) -  
2014-06-27 09:05:31,275 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-27 09:05:31,282 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s881ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Generate}
2014-06-27 09:05:32,402 [main] INFO  (DfOutsideSqlTestTask#begin():72) - +------------------------------------------+
2014-06-27 09:05:32,408 [main] INFO  (DfOutsideSqlTestTask#begin():73) - |                                          |
2014-06-27 09:05:32,410 [main] INFO  (DfOutsideSqlTestTask#begin():74) - |              OutsideSqlTest              |
2014-06-27 09:05:32,411 [main] INFO  (DfOutsideSqlTestTask#begin():75) - |                                          |
2014-06-27 09:05:32,412 [main] INFO  (DfOutsideSqlTestTask#begin():76) - +------------------------------------------+
2014-06-27 09:05:32,482 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 09:05:32,484 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 09:05:32,486 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 09:05:32,487 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 09:05:32,566 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-27 09:05:32,574 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s166ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2014-06-27 09:05:33,696 [main] INFO  (DfSql2EntityTask#begin():100) - +------------------------------------------+
2014-06-27 09:05:33,699 [main] INFO  (DfSql2EntityTask#begin():101) - |                                          |
2014-06-27 09:05:33,700 [main] INFO  (DfSql2EntityTask#begin():102) - |                Sql2Entity                |
2014-06-27 09:05:33,700 [main] INFO  (DfSql2EntityTask#begin():103) - |                                          |
2014-06-27 09:05:33,702 [main] INFO  (DfSql2EntityTask#begin():104) - +------------------------------------------+
2014-06-27 09:05:33,740 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 09:05:33,741 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 09:05:33,742 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 09:05:33,743 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 09:05:33,761 [main] INFO  (DfSql2EntityTask#setupControlTemplate():170) - 
2014-06-27 09:05:33,761 [main] INFO  (DfSql2EntityTask#setupControlTemplate():171) - ...Using Java control: om/ControlSql2EntityJava.vm
2014-06-27 09:05:33,772 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-27 09:05:33,825 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-27 09:05:33,964 [main] INFO  (DfSql2EntityTask#initControlContext():301) - 
2014-06-27 09:05:33,965 [main] INFO  (DfSql2EntityTask#initControlContext():302) - ...Preparing generation of customize-entities and parameter-beans
2014-06-27 09:05:33,966 [main] INFO  (DfSql2EntityTask#initControlContext():303) - * * * * * * * * * *
2014-06-27 09:05:33,967 [main] INFO  (DfSql2EntityTask#initControlContext():304) - * CustomizeEntity *
2014-06-27 09:05:33,969 [main] INFO  (DfSql2EntityTask#initControlContext():305) - * * * * * * * * * *
2014-06-27 09:05:33,970 [main] INFO  (DfSql2EntityTask#showParameterBean():879) - * * * * * * * * *
2014-06-27 09:05:33,972 [main] INFO  (DfSql2EntityTask#showParameterBean():880) - * ParameterBean *
2014-06-27 09:05:33,973 [main] INFO  (DfSql2EntityTask#showParameterBean():881) - * * * * * * * * *
2014-06-27 09:05:33,978 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlSql2EntityJava.vm", c);
2014-06-27 09:05:34,084 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1164) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2014-06-27 09:05:34,087 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldCustomizeClass() {
2014-06-27 09:05:34,098 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-06-27 09:05:34,098 [main] INFO  (Database#info():2573) - public void parseCustomizeEntity() {
2014-06-27 09:05:34,102 [main] INFO  (Database#info():2573) - }
2014-06-27 09:05:34,115 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():293) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2014-06-27 09:05:34,124 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-27 09:05:34,130 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s430ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2014-06-27 09:18:42,535 [main] INFO  (DfReplaceSchemaTask#begin():87) - +------------------------------------------+
2014-06-27 09:18:42,538 [main] INFO  (DfReplaceSchemaTask#begin():88) - |                                          |
2014-06-27 09:18:42,539 [main] INFO  (DfReplaceSchemaTask#begin():89) - |              ReplaceSchema               |
2014-06-27 09:18:42,559 [main] INFO  (DfReplaceSchemaTask#begin():97) - |                                          |
2014-06-27 09:18:42,559 [main] INFO  (DfReplaceSchemaTask#begin():98) - +------------------------------------------+
2014-06-27 09:18:42,562 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():329) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2014-06-27 09:18:44,256 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 09:18:44,258 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 09:18:44,260 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 09:18:44,261 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 09:18:44,273 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-27 09:18:44,502 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-27 09:18:44,503 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-27 09:18:44,522 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():207) - 
2014-06-27 09:18:44,523 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():208) - * * * * * * * * * * *
2014-06-27 09:18:44,524 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():209) - *                   *
2014-06-27 09:18:44,525 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():210) - * Initialize Schema *
2014-06-27 09:18:44,527 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():211) - *                   *
2014-06-27 09:18:44,529 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():212) - * * * * * * * * * * *
2014-06-27 09:18:44,551 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-27 09:18:44,552 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-27 09:18:44,552 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-27 09:18:44,611 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table follow
2014-06-27 09:18:44,651 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table followers
2014-06-27 09:18:44,673 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table login
2014-06-27 09:18:44,722 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_security
2014-06-27 09:18:44,767 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_withdraw
2014-06-27 09:18:44,809 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table tweet
2014-06-27 09:18:44,846 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_1
2014-06-27 09:18:44,869 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table followers drop foreign key followers_ibfk_1
2014-06-27 09:18:44,884 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table login drop foreign key login_ibfk_1
2014-06-27 09:18:44,894 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_security drop foreign key member_security_ibfk_1
2014-06-27 09:18:44,905 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_withdraw drop foreign key member_withdraw_ibfk_1
2014-06-27 09:18:44,916 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table tweet drop foreign key tweet_ibfk_1
2014-06-27 09:18:44,931 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table follow
2014-06-27 09:18:44,944 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table followers
2014-06-27 09:18:44,960 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table login
2014-06-27 09:18:44,982 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member
2014-06-27 09:18:45,002 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_security
2014-06-27 09:18:45,024 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_withdraw
2014-06-27 09:18:45,049 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table tweet
2014-06-27 09:18:45,118 [main] INFO  (DfCreateSchemaProcess#createSchema():244) - 
2014-06-27 09:18:45,119 [main] INFO  (DfCreateSchemaProcess#createSchema():245) - * * * * * * * * *
2014-06-27 09:18:45,120 [main] INFO  (DfCreateSchemaProcess#createSchema():246) - *               *
2014-06-27 09:18:45,121 [main] INFO  (DfCreateSchemaProcess#createSchema():247) - * Create Schema *
2014-06-27 09:18:45,123 [main] INFO  (DfCreateSchemaProcess#createSchema():248) - *               *
2014-06-27 09:18:45,124 [main] INFO  (DfCreateSchemaProcess#createSchema():249) - * * * * * * * * *
2014-06-27 09:18:45,130 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-00-system.sql
2014-06-27 09:18:45,134 [main] INFO  (DfReplaceSchemaProperties#checkTargetEnvType():277) - ...Checking envType: ut in [ut]
2014-06-27 09:18:45,135 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:checkEnv(ut)#

-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database twitter
2014-06-27 09:18:45,142 [main] INFO  (DfCreateSchemaProcess$1#dispatch():273) - ...Creating a connection to system
2014-06-27 09:18:45,145 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():514) - ...Creating a connection for additional user: root
2014-06-27 09:18:45,159 [main] INFO  (DfCreateSchemaProcess$1#dispatch():299) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2014-06-27 09:18:45,160 [main] INFO  (DfCreateSchemaProcess$1#dispatch():301) -  -> Can't create database 'twitter'; database exists
2014-06-27 09:18:45,162 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():411) - ...Reviving the user 'system' until the end of this SQL file
2014-06-27 09:18:45,163 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on twitter.*
  to twitter@localhost identified by 'twitter'
2014-06-27 09:18:45,170 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2014-06-27 09:18:45,174 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2014-06-27 09:18:45,175 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-10-basic.sql
2014-06-27 09:18:45,176 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():348) - ...Saying good-bye to the user 'system' again
2014-06-27 09:18:45,178 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():352) - ...Clearing revived users
2014-06-27 09:18:45,179 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():359) - ...Coming back to the main user from the user 'system'
2014-06-27 09:18:45,184 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FOLLOW
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	FOLLOW_ID INT(100) UNIQUE COMMENT 'フォローID',
	FOLLOWER_ID INT UNIQUE COMMENT 'フォロワーID',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = 'フォロー'
2014-06-27 09:18:45,249 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE LOGIN
(
	LOGIN_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ログインID : ログインした瞬間のID
',
	LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	PRIMARY KEY (LOGIN_ID)
) COMMENT = 'ログイン'
2014-06-27 09:18:45,302 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER
(
	MEMBER_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員のID
',
	EMAIL_ADDRESS VARCHAR(100) NOT NULL UNIQUE COMMENT 'メールアドレス : 会員のメールアドレス',
	USER_NAME VARCHAR(50) NOT NULL UNIQUE COMMENT '会員ユーザ名 : 会員のユーザ名',
	UPDATE_DATETIME DATETIME COMMENT '更新日時',
	BIRTHDATE DATE COMMENT '生年月日 : 会員の生年月日',
	PROFILE VARCHAR(200) COMMENT 'プロフィール',
	REGESTER_DATETIME DATETIME NOT NULL COMMENT '登録日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員'
2014-06-27 09:18:45,371 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PASSWORD VARCHAR(50) NOT NULL COMMENT 'パスワード',
	PASSWORD_UPDATE_DATETIME DATETIME COMMENT 'パスワード更新日時',
	PASSWORD_REGESTERATION_DATETIME DATETIME NOT NULL COMMENT 'パスワード登録日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員セキュリティ'
2014-06-27 09:18:45,421 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_WITHDRAW
(
	WITHDRAWAL_REASON_ID INT COMMENT '退会理由ID : 会員の退会理由ID',
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト',
	WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT 'withdrawal_datetime : 退会日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員退会'
2014-06-27 09:18:45,493 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	TWEET_DATETIME DATETIME NOT NULL COMMENT 'TWEET日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-06-27 09:18:45,546 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FOLLOW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 09:18:45,664 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 09:18:45,785 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 09:18:45,873 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_WITHDRAW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 09:18:45,939 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 09:18:46,050 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=11 failure=0
2014-06-27 09:18:46,052 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=13 failure=0 (in 2 files)
2014-06-27 09:18:46,054 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-06-27 09:18:46,113 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-06-27 09:18:46,114 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-06-27 09:18:46,115 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-06-27 09:18:46,116 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-06-27 09:18:46,118 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-06-27 09:18:46,119 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-06-27 09:18:46,142 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-06-27 09:18:46,143 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-06-27 09:18:46,143 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-06-27 09:18:46,526 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-27 09:18:46,527 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-27 09:18:46,527 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-27 09:18:46,585 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{1, Stojkovic@gmail.com, Pixy, 1965/03/03, 2014-06-24 00:00:00.0, 2014-06-27 09:18:46.584}
2014-06-27 09:18:46,635 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{2, Savicevic@gmail.com, Genius, 1966/09/15, 2014-06-25 00:00:00.0, 2014-06-27 09:18:46.635}
2014-06-27 09:18:46,637 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{3, Mijatovic@gmail.com, Mijato, null, 2014-06-26 00:00:00.0, 2014-06-27 09:18:46.637}
2014-06-27 09:18:46,639 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{4, Stankovic@gmail.com, Stanko, 1978/09/11, 2014-06-27 00:00:00.0, 2014-06-27 09:18:46.639}
2014-06-27 09:18:46,640 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{5, Milosevic@gmail.com, Milose, null, 2014-06-28 00:00:00.0, 2014-06-27 09:18:46.64}
2014-06-27 09:18:46,641 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{6, Mihajlovic@gmail.com, FreeKick, 1969/02/20, 2014-06-29 00:00:00.0, 2014-06-27 09:18:46.641}
2014-06-27 09:18:46,642 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{7, アカギ@gmail.com, Akagi, null, 2014-06-30 00:00:00.0, 2014-06-27 09:18:46.642}
2014-06-27 09:18:46,645 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{8, Kezman@gmial.com, RedCard, null, 2014-07-01 00:00:00.0, 2014-06-27 09:18:46.645}
2014-06-27 09:18:46,646 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{9, Maslovar@gmail.com, JEFUnited, 1967/02/20, 2014-07-02 00:00:00.0, 2014-06-27 09:18:46.646}
2014-06-27 09:18:46,648 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{10, 諸葛亮孔明@gmail.com, ShokatsuGoGo, null, 2014-07-03 00:00:00.0, 2014-06-27 09:18:46.648}
2014-06-27 09:18:46,650 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{11, Boban@gmail.com, Boban, 1968/10/08, 2014-07-04 00:00:00.0, 2014-06-27 09:18:46.65}
2014-06-27 09:18:46,652 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{12, Suker@gmail.com, Suker, 1968/01/01, 2014-07-05 00:00:00.0, 2014-06-27 09:18:46.652}
2014-06-27 09:18:46,653 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{13, Jarni@gmail.com, Jarni, 1968/10/26, 2014-07-06 00:00:00.0, 2014-06-27 09:18:46.653}
2014-06-27 09:18:46,655 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{14, Boksic@gmail.com, Boksic, 1970/01/21, 2014-07-07 00:00:00.0, 2014-06-27 09:18:46.655}
2014-06-27 09:18:46,657 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{15, Prosinecki@gmail.com, Prosinecki, 1969/01/12, 2014-07-08 00:00:00.0, 2014-06-27 09:18:46.656}
2014-06-27 09:18:46,658 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{16, RobeltKovac@gmail.com, RobeltKovac, null, 2014-07-09 00:00:00.0, 2014-06-27 09:18:46.658}
2014-06-27 09:18:46,659 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{17, NikoKovac@gmail.com, NikoKovac, null, 2014-07-10 00:00:00.0, 2014-06-27 09:18:46.659}
2014-06-27 09:18:46,660 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{18, Jovanovic@gmail.com, Jovano, 1981/04/18, 2014-07-11 00:00:00.0, 2014-06-27 09:18:46.66}
2014-06-27 09:18:46,662 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{19, Milko@gmail.com, Milko, 1974/09/10, 2014-07-12 00:00:00.0, 2014-06-27 09:18:46.662}
2014-06-27 09:18:46,664 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{20, 諸葛瑾子瑜@gmail.com, ShokatsuKinKin, null, 2014-07-13 00:00:00.0, 2014-06-27 09:18:46.663}
2014-06-27 09:18:46,685 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 20 rows are loaded to MEMBER
2014-06-27 09:18:46,689 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 3, 2006/12/24 23:59:59}
2014-06-27 09:18:46,690 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 6, 2007/11/11 16:16:16}
2014-06-27 09:18:46,691 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{3, 1, 2006/12/23 22:56:29}
2014-06-27 09:18:46,693 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{4, 6, 2007/11/01 02:13:00}
2014-06-27 09:18:46,694 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{5, 7, 2006/05/24 23:12:59}
2014-06-27 09:18:46,695 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{6, 6, 2005/11/11 16:32:01}
2014-06-27 09:18:46,696 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{7, 6, 2006/01/28 23:59:59}
2014-06-27 09:18:46,698 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{8, 6, 2007/11/09 16:23:00}
2014-06-27 09:18:46,699 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{9, 8, 2006/12/22 23:59:59}
2014-06-27 09:18:46,700 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{10, 6, 2007/11/11 09:01:00}
2014-06-27 09:18:46,702 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{11, 1, 2006/12/23 23:59:59}
2014-06-27 09:18:46,703 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{12, 9, 2007/11/15 12:43:00}
2014-06-27 09:18:46,704 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{13, 10, 2006/12/24 23:59:59}
2014-06-27 09:18:46,706 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{14, 6, 2007/04/01 16:23:01}
2014-06-27 09:18:46,707 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{15, 7, 2006/12/24 23:59:20}
2014-06-27 09:18:46,708 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{16, 6, 2007/05/01 12:23:02}
2014-06-27 09:18:46,710 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{17, 7, 2006/12/24 23:59:21}
2014-06-27 09:18:46,711 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{18, 6, 2007/06/11 17:23:03}
2014-06-27 09:18:46,713 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{19, 4, 2006/12/24 23:59:22}
2014-06-27 09:18:46,714 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{20, 3, 2007/11/01 16:12:04}
2014-06-27 09:18:46,715 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{21, 11, 2006/12/24 23:59:23}
2014-06-27 09:18:46,717 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{22, 1, 2007/11/01 16:23:05}
2014-06-27 09:18:46,718 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{23, 9, 2006/12/24 23:59:24}
2014-06-27 09:18:46,720 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{24, 8, 2007/11/01 16:23:06}
2014-06-27 09:18:46,721 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{25, 7, 2007/12/24 11:59:25}
2014-06-27 09:18:46,722 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{26, 6, 2007/06/21 01:23:57}
2014-06-27 09:18:46,724 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{27, 5, 2006/12/24 23:59:26}
2014-06-27 09:18:46,725 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{28, 3, 2007/11/01 16:23:08}
2014-06-27 09:18:46,727 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{29, 3, 2006/12/24 23:59:27}
2014-06-27 09:18:46,728 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{30, 10, 2007/11/01 16:23:09}
2014-06-27 09:18:46,729 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-27 09:18:46,743 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 30 rows are loaded to LOGIN
2014-06-27 09:18:46,744 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014/06/23, null}
2014-06-27 09:18:46,745 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014/06/24, null}
2014-06-27 09:18:46,746 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{3, ccc, 2014/06/25, 2014/06/25}
2014-06-27 09:18:46,747 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{4, ddd, 2014/06/26, null}
2014-06-27 09:18:46,748 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{5, eee2, 2014/06/27, null}
2014-06-27 09:18:46,750 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{6, fff, 2014/06/28, null}
2014-06-27 09:18:46,751 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{7, ggg3, 2014/06/29, 2014/06/25}
2014-06-27 09:18:46,753 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{8, hhh555, 2014/06/30, null}
2014-06-27 09:18:46,754 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{9, iii, 2014/07/01, 2014/06/25}
2014-06-27 09:18:46,755 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{10, jjj, 2014/07/02, null}
2014-06-27 09:18:46,756 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-27 09:18:46,768 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to MEMBER_SECURITY
2014-06-27 09:18:46,769 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 2013-06-13 00:00:00.0}
2014-06-27 09:18:46,771 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{2, 2345, 清君頼りになるー！, 2013-06-14 00:00:00.0}
2014-06-27 09:18:46,773 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{3, 3456, GLD, 2013-06-15 00:00:00.0}
2014-06-27 09:18:46,774 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{4, 875, BRZ, 2013-06-16 00:00:00.0}
2014-06-27 09:18:46,775 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{5, 1111, BRZ, 2013-06-17 00:00:00.0}
2014-06-27 09:18:46,777 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{6, 5422, SIL, 2013-06-18 00:00:00.0}
2014-06-27 09:18:46,778 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{7, 24678, SIL, 2013-06-19 00:00:00.0}
2014-06-27 09:18:46,780 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{8, 234, SIL, 2013-06-20 00:00:00.0}
2014-06-27 09:18:46,781 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{9, 3, SIL, 2013-06-21 00:00:00.0}
2014-06-27 09:18:46,782 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{10, 98765, PLT, 2013-06-22 00:00:00.0}
2014-06-27 09:18:46,784 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-27 09:18:46,793 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to TWEET
2014-06-27 09:18:46,795 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{3, 1, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123}
2014-06-27 09:18:46,798 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{6, 1, null, 2007/11/11 16:00:00.456}
2014-06-27 09:18:46,800 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{13, 2, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789}
2014-06-27 09:18:46,814 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{16, 3, コバチが２人いるため, 2007/11/13 16:00:00.456}
2014-06-27 09:18:46,823 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 4 rows are loaded to MEMBER_WITHDRAW
2014-06-27 09:18:46,827 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():379) - ...Checking implicit set of classification
2014-06-27 09:18:46,849 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - 
2014-06-27 09:18:46,850 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * * * * * * * **
2014-06-27 09:18:46,850 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2014-06-27 09:18:46,852 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * Take Finally *
2014-06-27 09:18:46,853 [main] INFO  (DfTakeFinallyProcess#takeFinally():225) - *              *
2014-06-27 09:18:46,854 [main] INFO  (DfTakeFinallyProcess#takeFinally():226) - * * * * * * * **
2014-06-27 09:18:46,867 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: take-finally.sql
2014-06-27 09:18:46,869 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2014-06-27 09:18:46,870 [main] INFO  (DfSqlFileFireMan#fire():90) - {Take Finally}: success=0 failure=0 (in 1 files)
2014-06-27 09:18:46,872 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-27 09:18:46,878 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m04s338ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=13 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=1
  (ut)
  o 20-member.xls

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-06-27 09:18:47,810 [main] INFO  (TorqueJDBCTransformTask#begin():100) - +------------------------------------------+
2014-06-27 09:18:47,812 [main] INFO  (TorqueJDBCTransformTask#begin():101) - |                                          |
2014-06-27 09:18:47,813 [main] INFO  (TorqueJDBCTransformTask#begin():102) - |                   JDBC                   |
2014-06-27 09:18:47,814 [main] INFO  (TorqueJDBCTransformTask#begin():103) - |                                          |
2014-06-27 09:18:47,815 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2014-06-27 09:18:47,859 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 09:18:47,859 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 09:18:47,860 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 09:18:47,861 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 09:18:47,907 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2014-06-27 09:18:47,908 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2014-06-27 09:18:47,908 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1469) - ...Loading previous schema (schema diff process)
2014-06-27 09:18:47,919 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-27 09:18:47,987 [main] INFO  (DfSchemaXmlSerializer#generateXML():361) - ...Getting DB connection
2014-06-27 09:18:47,992 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-27 09:18:48,191 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-27 09:18:48,191 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-27 09:18:48,194 [main] INFO  (DfSchemaXmlSerializer#generateXML():364) - ...Getting DB meta data
2014-06-27 09:18:48,197 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-27 09:18:48,198 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-27 09:18:48,198 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-27 09:18:48,213 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2014-06-27 09:18:48,216 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2014-06-27 09:18:48,230 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - 
2014-06-27 09:18:48,231 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2014-06-27 09:18:48,232 [main] INFO  (DfSchemaXmlSerializer#processTable():423) - $ [Table List]
2014-06-27 09:18:48,233 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.follow(TABLE) // フォロー
2014-06-27 09:18:48,280 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.login(TABLE) // ログイン
2014-06-27 09:18:48,295 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member(TABLE) // 会員
2014-06-27 09:18:48,312 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_security(TABLE) // 会員セキュリティ
2014-06-27 09:18:48,326 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_withdraw(TABLE) // 会員退会
2014-06-27 09:18:48,339 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.tweet(TABLE) // TWEET
2014-06-27 09:18:48,351 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 
2014-06-27 09:18:48,352 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ [Table Count]
2014-06-27 09:18:48,353 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ 6
2014-06-27 09:18:48,354 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - $ = = = = = = = = = =/
2014-06-27 09:18:48,356 [main] INFO  (DfSchemaXmlSerializer#processTable():439) - 
2014-06-27 09:18:48,359 [main] INFO  (DfSchemaXmlSerializer#processSequence():799) - ...Getting sequences
2014-06-27 09:18:48,363 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2014-06-27 09:18:48,364 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-twitter.xml
2014-06-27 09:18:48,364 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2014-06-27 09:18:48,381 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1487) - ...Loading next schema (schema diff process)
2014-06-27 09:18:48,383 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-27 09:18:48,423 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1492) -  -> different from previous (schema diff)
2014-06-27 09:18:48,424 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1494) - ...Serializing schema-diff:
2014-06-27 09:18:48,425 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1495) -   filePath = ./schema/project-history-twitter.diffmap
2014-06-27 09:18:48,456 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-27 09:18:48,463 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s650ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2014-06-27 09:18:49,423 [main] INFO  (TorqueDocumentationTask#begin():171) - +------------------------------------------+
2014-06-27 09:18:49,425 [main] INFO  (TorqueDocumentationTask#begin():172) - |                                          |
2014-06-27 09:18:49,426 [main] INFO  (TorqueDocumentationTask#begin():173) - |                   Doc                    |
2014-06-27 09:18:49,426 [main] INFO  (TorqueDocumentationTask#begin():181) - |                                          |
2014-06-27 09:18:49,428 [main] INFO  (TorqueDocumentationTask#begin():182) - +------------------------------------------+
2014-06-27 09:18:49,475 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 09:18:49,476 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 09:18:49,476 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 09:18:49,478 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 09:18:49,482 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():242) - 
2014-06-27 09:18:49,482 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():243) - * * * * * * * * * * *
2014-06-27 09:18:49,483 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():244) - *                   *
2014-06-27 09:18:49,484 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():245) - *    Schema HTML    *
2014-06-27 09:18:49,485 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - *                   *
2014-06-27 09:18:49,487 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2014-06-27 09:18:49,644 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-27 09:18:49,707 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("doc/ControlDocument.vm", c);
2014-06-27 09:18:49,785 [main] INFO  (Database#doEnableDocumentOutputDirectory():1180) - ...Setting up documentOutputDirectory: ./output/doc
2014-06-27 09:18:49,795 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-27 09:18:49,795 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-27 09:18:49,797 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-27 09:18:49,802 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-27 09:18:49,803 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-27 09:18:49,806 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-27 09:18:49,809 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-27 09:18:49,810 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-27 09:18:49,813 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-27 09:18:49,823 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():150) - ...Loading schema history
2014-06-27 09:18:49,864 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():154) -  -> found history: count=12
2014-06-27 09:18:50,072 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-27 09:18:50,087 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s661ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Doc}
2014-06-27 09:18:52,946 [main] INFO  (TorqueDataModelTask#begin():105) - +------------------------------------------+
2014-06-27 09:18:52,949 [main] INFO  (TorqueDataModelTask#begin():106) - |                                          |
2014-06-27 09:18:52,950 [main] INFO  (TorqueDataModelTask#begin():107) - |                 Generate                 |
2014-06-27 09:18:52,950 [main] INFO  (TorqueDataModelTask#begin():108) - |                                          |
2014-06-27 09:18:52,952 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2014-06-27 09:18:52,995 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 09:18:52,995 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 09:18:52,996 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 09:18:52,997 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 09:18:53,019 [main] INFO  (TorqueDataModelTask#setupControlTemplate():160) - 
2014-06-27 09:18:53,020 [main] INFO  (TorqueDataModelTask#setupControlTemplate():161) - ...Using Java control: om/ControlGenerateJava.vm
2014-06-27 09:18:53,166 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-27 09:18:53,207 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlGenerateJava.vm", c);
2014-06-27 09:18:53,352 [main] INFO  (Database#doEnableGenerateOutputDirectory():1148) - ...Setting up generateOutputDirectory: ../src/main/java
2014-06-27 09:18:53,362 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-27 09:18:53,363 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-27 09:18:53,366 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-27 09:18:53,369 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-27 09:18:53,369 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-27 09:18:53,373 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-27 09:18:53,377 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-27 09:18:53,377 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-27 09:18:53,381 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-27 09:18:53,405 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - /=============================
2014-06-27 09:18:53,407 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():60) - ...Initializing include query.
2014-06-27 09:18:53,409 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - String
2014-06-27 09:18:53,411 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Number
2014-06-27 09:18:53,413 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Date
2014-06-27 09:18:53,414 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotEqual -> []
2014-06-27 09:18:53,416 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   InScope -> []
2014-06-27 09:18:53,417 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotInScope -> []
2014-06-27 09:18:53,418 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - OrderBy
2014-06-27 09:18:53,420 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():62) - ========/
2014-06-27 09:18:53,446 [main] INFO  (Database#info():2573) - public void parseAllCommon() {
2014-06-27 09:18:53,450 [main] INFO  (Database#info():2573) -     parse('DBCurrent');
2014-06-27 09:18:53,458 [main] INFO  (Database#info():2573) -     parse('DBFluteConfig');
2014-06-27 09:18:53,489 [main] INFO  (Database#info():2573) -     parse('DBFluteInitializer');
2014-06-27 09:18:53,497 [main] INFO  (Database#info():2573) -     parse('DBMetaInstanceHandler');
2014-06-27 09:18:53,519 [main] INFO  (Database#info():2573) -     parse('EntityDefinedCommonColumn');
2014-06-27 09:18:53,523 [main] INFO  (Database#info():2573) -     parse('ImplementedBehaviorSelector');
2014-06-27 09:18:53,527 [main] INFO  (Database#info():2573) -     parse('ImplementedCommonColumnAutoSetupper');
2014-06-27 09:18:53,532 [main] INFO  (Database#info():2573) -     parse('ImplementedInvokerAssistant');
2014-06-27 09:18:53,549 [main] INFO  (Database#info():2573) -     parse('ImplementedSqlClauseCreator');
2014-06-27 09:18:53,551 [main] INFO  (Database#info():2573) - }
2014-06-27 09:18:53,552 [main] INFO  (Database#info():2573) - public void parseContainerConfig() {
2014-06-27 09:18:53,553 [main] INFO  (Database#info():2573) -     parse('../resources/dbflute.dicon')
2014-06-27 09:18:53,563 [main] INFO  (Database#info():2573) - }
2014-06-27 09:18:53,568 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldTableClass() {
2014-06-27 09:18:53,573 [main] INFO  (DfOldClassHandler#info():1037) -     delete('BsFollowersBhv');
2014-06-27 09:18:53,576 [main] INFO  (DfOldClassHandler#info():1037) -     delete('LoaderOfFollowers');
2014-06-27 09:18:53,581 [main] INFO  (DfOldClassHandler#info():1037) -     delete('BsFollowers');
2014-06-27 09:18:53,584 [main] INFO  (DfOldClassHandler#info():1037) -     delete('FollowersDbm');
2014-06-27 09:18:53,586 [main] INFO  (DfOldClassHandler#info():1037) -     delete('BsFollowersCB');
2014-06-27 09:18:53,589 [main] INFO  (DfOldClassHandler#info():1037) -     delete('AbstractBsFollowersCQ');
2014-06-27 09:18:53,593 [main] INFO  (DfOldClassHandler#info():1037) -     delete('BsFollowersCQ');
2014-06-27 09:18:53,596 [main] INFO  (DfOldClassHandler#info():1037) -     delete('FollowersNss');
2014-06-27 09:18:53,599 [main] INFO  (DfOldClassHandler#info():1037) -     delete('FollowersCB');
2014-06-27 09:18:53,602 [main] INFO  (DfOldClassHandler#info():1037) -     delete('FollowersCQ');
2014-06-27 09:18:53,605 [main] INFO  (DfOldClassHandler#info():1037) -     delete('FollowersCIQ');
2014-06-27 09:18:53,607 [main] INFO  (DfOldClassHandler#info():1037) -     delete('FollowersBhv');
2014-06-27 09:18:53,609 [main] INFO  (DfOldClassHandler#info():1037) -     delete('Followers');
2014-06-27 09:18:53,610 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-06-27 09:18:53,611 [main] INFO  (Database#info():2573) - public void parseTableClass() {
2014-06-27 09:18:53,613 [main] INFO  (Database#info():2573) -     parse('follow');
2014-06-27 09:18:53,843 [main] INFO  (Database#info():2573) -     parse('login');
2014-06-27 09:18:54,019 [main] INFO  (Database#info():2573) -     parse('member');
2014-06-27 09:18:54,327 [main] INFO  (Database#info():2573) -     parse('member_security');
2014-06-27 09:18:54,456 [main] INFO  (Database#info():2573) -     parse('member_withdraw');
2014-06-27 09:18:54,575 [main] INFO  (Database#info():2573) -     parse('tweet');
2014-06-27 09:18:54,690 [main] INFO  (Database#info():2573) - }
2014-06-27 09:18:54,691 [main] INFO  (Database#info():2573) -  
2014-06-27 09:18:54,722 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-27 09:18:54,729 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s779ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Generate}
2014-06-27 09:18:55,859 [main] INFO  (DfOutsideSqlTestTask#begin():72) - +------------------------------------------+
2014-06-27 09:18:55,861 [main] INFO  (DfOutsideSqlTestTask#begin():73) - |                                          |
2014-06-27 09:18:55,862 [main] INFO  (DfOutsideSqlTestTask#begin():74) - |              OutsideSqlTest              |
2014-06-27 09:18:55,862 [main] INFO  (DfOutsideSqlTestTask#begin():75) - |                                          |
2014-06-27 09:18:55,864 [main] INFO  (DfOutsideSqlTestTask#begin():76) - +------------------------------------------+
2014-06-27 09:18:55,924 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 09:18:55,924 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 09:18:55,925 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 09:18:55,927 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 09:18:55,976 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-27 09:18:55,984 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s119ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2014-06-27 09:18:56,972 [main] INFO  (DfSql2EntityTask#begin():100) - +------------------------------------------+
2014-06-27 09:18:56,975 [main] INFO  (DfSql2EntityTask#begin():101) - |                                          |
2014-06-27 09:18:56,976 [main] INFO  (DfSql2EntityTask#begin():102) - |                Sql2Entity                |
2014-06-27 09:18:56,976 [main] INFO  (DfSql2EntityTask#begin():103) - |                                          |
2014-06-27 09:18:56,978 [main] INFO  (DfSql2EntityTask#begin():104) - +------------------------------------------+
2014-06-27 09:18:57,015 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 09:18:57,016 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 09:18:57,017 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 09:18:57,019 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 09:18:57,035 [main] INFO  (DfSql2EntityTask#setupControlTemplate():170) - 
2014-06-27 09:18:57,036 [main] INFO  (DfSql2EntityTask#setupControlTemplate():171) - ...Using Java control: om/ControlSql2EntityJava.vm
2014-06-27 09:18:57,045 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-27 09:18:57,091 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-27 09:18:57,230 [main] INFO  (DfSql2EntityTask#initControlContext():301) - 
2014-06-27 09:18:57,230 [main] INFO  (DfSql2EntityTask#initControlContext():302) - ...Preparing generation of customize-entities and parameter-beans
2014-06-27 09:18:57,231 [main] INFO  (DfSql2EntityTask#initControlContext():303) - * * * * * * * * * *
2014-06-27 09:18:57,233 [main] INFO  (DfSql2EntityTask#initControlContext():304) - * CustomizeEntity *
2014-06-27 09:18:57,234 [main] INFO  (DfSql2EntityTask#initControlContext():305) - * * * * * * * * * *
2014-06-27 09:18:57,235 [main] INFO  (DfSql2EntityTask#showParameterBean():879) - * * * * * * * * *
2014-06-27 09:18:57,237 [main] INFO  (DfSql2EntityTask#showParameterBean():880) - * ParameterBean *
2014-06-27 09:18:57,238 [main] INFO  (DfSql2EntityTask#showParameterBean():881) - * * * * * * * * *
2014-06-27 09:18:57,243 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlSql2EntityJava.vm", c);
2014-06-27 09:18:57,366 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1164) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2014-06-27 09:18:57,369 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldCustomizeClass() {
2014-06-27 09:18:57,379 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-06-27 09:18:57,380 [main] INFO  (Database#info():2573) - public void parseCustomizeEntity() {
2014-06-27 09:18:57,383 [main] INFO  (Database#info():2573) - }
2014-06-27 09:18:57,396 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():293) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2014-06-27 09:18:57,404 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-27 09:18:57,411 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s435ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2014-06-27 09:22:56,621 [main] INFO  (DfReplaceSchemaTask#begin():87) - +------------------------------------------+
2014-06-27 09:22:56,625 [main] INFO  (DfReplaceSchemaTask#begin():88) - |                                          |
2014-06-27 09:22:56,625 [main] INFO  (DfReplaceSchemaTask#begin():89) - |              ReplaceSchema               |
2014-06-27 09:22:56,646 [main] INFO  (DfReplaceSchemaTask#begin():97) - |                                          |
2014-06-27 09:22:56,647 [main] INFO  (DfReplaceSchemaTask#begin():98) - +------------------------------------------+
2014-06-27 09:22:56,649 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():329) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2014-06-27 09:22:58,514 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 09:22:58,515 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 09:22:58,516 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 09:22:58,517 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 09:22:58,527 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-27 09:22:58,757 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-27 09:22:58,758 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-27 09:22:58,778 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():207) - 
2014-06-27 09:22:58,779 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():208) - * * * * * * * * * * *
2014-06-27 09:22:58,779 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():209) - *                   *
2014-06-27 09:22:58,781 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():210) - * Initialize Schema *
2014-06-27 09:22:58,782 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():211) - *                   *
2014-06-27 09:22:58,783 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():212) - * * * * * * * * * * *
2014-06-27 09:22:58,802 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-27 09:22:58,803 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-27 09:22:58,804 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-27 09:22:58,855 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table follow
2014-06-27 09:22:58,890 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table login
2014-06-27 09:22:58,933 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_security
2014-06-27 09:22:58,954 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_withdraw
2014-06-27 09:22:58,981 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table tweet
2014-06-27 09:22:59,008 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_1
2014-06-27 09:22:59,031 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table login drop foreign key login_ibfk_1
2014-06-27 09:22:59,042 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_security drop foreign key member_security_ibfk_1
2014-06-27 09:22:59,058 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_withdraw drop foreign key member_withdraw_ibfk_1
2014-06-27 09:22:59,075 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table tweet drop foreign key tweet_ibfk_1
2014-06-27 09:22:59,094 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table follow
2014-06-27 09:22:59,114 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table login
2014-06-27 09:22:59,134 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member
2014-06-27 09:22:59,154 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_security
2014-06-27 09:22:59,174 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_withdraw
2014-06-27 09:22:59,192 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table tweet
2014-06-27 09:22:59,244 [main] INFO  (DfCreateSchemaProcess#createSchema():244) - 
2014-06-27 09:22:59,245 [main] INFO  (DfCreateSchemaProcess#createSchema():245) - * * * * * * * * *
2014-06-27 09:22:59,246 [main] INFO  (DfCreateSchemaProcess#createSchema():246) - *               *
2014-06-27 09:22:59,247 [main] INFO  (DfCreateSchemaProcess#createSchema():247) - * Create Schema *
2014-06-27 09:22:59,249 [main] INFO  (DfCreateSchemaProcess#createSchema():248) - *               *
2014-06-27 09:22:59,250 [main] INFO  (DfCreateSchemaProcess#createSchema():249) - * * * * * * * * *
2014-06-27 09:22:59,257 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-00-system.sql
2014-06-27 09:22:59,262 [main] INFO  (DfReplaceSchemaProperties#checkTargetEnvType():277) - ...Checking envType: ut in [ut]
2014-06-27 09:22:59,263 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:checkEnv(ut)#

-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database twitter
2014-06-27 09:22:59,270 [main] INFO  (DfCreateSchemaProcess$1#dispatch():273) - ...Creating a connection to system
2014-06-27 09:22:59,272 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():514) - ...Creating a connection for additional user: root
2014-06-27 09:22:59,286 [main] INFO  (DfCreateSchemaProcess$1#dispatch():299) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2014-06-27 09:22:59,288 [main] INFO  (DfCreateSchemaProcess$1#dispatch():301) -  -> Can't create database 'twitter'; database exists
2014-06-27 09:22:59,290 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():411) - ...Reviving the user 'system' until the end of this SQL file
2014-06-27 09:22:59,291 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on twitter.*
  to twitter@localhost identified by 'twitter'
2014-06-27 09:22:59,299 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2014-06-27 09:22:59,302 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2014-06-27 09:22:59,303 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-10-basic.sql
2014-06-27 09:22:59,304 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():348) - ...Saying good-bye to the user 'system' again
2014-06-27 09:22:59,305 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():352) - ...Clearing revived users
2014-06-27 09:22:59,307 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():359) - ...Coming back to the main user from the user 'system'
2014-06-27 09:22:59,310 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FOLLOW
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	FOLLOW_ID INT(100) UNIQUE COMMENT 'フォローID',
	FOLLOWER_ID INT UNIQUE COMMENT 'フォロワーID',
	FOLLOW_DATETIME DATETIME NOT NULL COMMENT 'follow_datetime',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = 'フォロー'
2014-06-27 09:22:59,366 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE LOGIN
(
	LOGIN_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ログインID : ログインした瞬間のID
',
	LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	PRIMARY KEY (LOGIN_ID)
) COMMENT = 'ログイン'
2014-06-27 09:22:59,410 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER
(
	MEMBER_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員のID
',
	EMAIL_ADDRESS VARCHAR(100) NOT NULL UNIQUE COMMENT 'メールアドレス : 会員のメールアドレス',
	USER_NAME VARCHAR(50) NOT NULL UNIQUE COMMENT '会員ユーザ名 : 会員のユーザ名',
	UPDATE_DATETIME DATETIME COMMENT '更新日時',
	BIRTHDATE DATE COMMENT '生年月日 : 会員の生年月日',
	PROFILE VARCHAR(200) COMMENT 'プロフィール',
	REGESTER_DATETIME DATETIME NOT NULL COMMENT '登録日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員'
2014-06-27 09:22:59,470 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PASSWORD VARCHAR(50) NOT NULL COMMENT 'パスワード',
	PASSWORD_UPDATE_DATETIME DATETIME COMMENT 'パスワード更新日時',
	PASSWORD_REGESTERATION_DATETIME DATETIME NOT NULL COMMENT 'パスワード登録日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員セキュリティ'
2014-06-27 09:22:59,515 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_WITHDRAW
(
	WITHDRAWAL_REASON_ID INT COMMENT '退会理由ID : 会員の退会理由ID',
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト',
	WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT 'withdrawal_datetime : 退会日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員退会'
2014-06-27 09:22:59,562 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	TWEET_DATETIME DATETIME NOT NULL COMMENT 'TWEET日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-06-27 09:22:59,606 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FOLLOW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 09:22:59,683 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 09:22:59,778 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 09:22:59,883 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_WITHDRAW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 09:22:59,974 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 09:23:00,057 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=11 failure=0
2014-06-27 09:23:00,059 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=13 failure=0 (in 2 files)
2014-06-27 09:23:00,061 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-06-27 09:23:00,124 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-06-27 09:23:00,125 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-06-27 09:23:00,126 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-06-27 09:23:00,127 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-06-27 09:23:00,128 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-06-27 09:23:00,129 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-06-27 09:23:00,160 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-06-27 09:23:00,161 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-06-27 09:23:00,162 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-06-27 09:23:00,480 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-27 09:23:00,481 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-27 09:23:00,482 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-27 09:23:00,542 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{1, Stojkovic@gmail.com, Pixy, 1965/03/03, 2014-06-24 00:00:00.0, 2014-06-27 09:23:00.541}
2014-06-27 09:23:00,598 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{2, Savicevic@gmail.com, Genius, 1966/09/15, 2014-06-25 00:00:00.0, 2014-06-27 09:23:00.598}
2014-06-27 09:23:00,600 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{3, Mijatovic@gmail.com, Mijato, null, 2014-06-26 00:00:00.0, 2014-06-27 09:23:00.6}
2014-06-27 09:23:00,601 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{4, Stankovic@gmail.com, Stanko, 1978/09/11, 2014-06-27 00:00:00.0, 2014-06-27 09:23:00.601}
2014-06-27 09:23:00,603 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{5, Milosevic@gmail.com, Milose, null, 2014-06-28 00:00:00.0, 2014-06-27 09:23:00.603}
2014-06-27 09:23:00,604 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{6, Mihajlovic@gmail.com, FreeKick, 1969/02/20, 2014-06-29 00:00:00.0, 2014-06-27 09:23:00.604}
2014-06-27 09:23:00,605 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{7, アカギ@gmail.com, Akagi, null, 2014-06-30 00:00:00.0, 2014-06-27 09:23:00.605}
2014-06-27 09:23:00,608 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{8, Kezman@gmial.com, RedCard, null, 2014-07-01 00:00:00.0, 2014-06-27 09:23:00.608}
2014-06-27 09:23:00,609 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{9, Maslovar@gmail.com, JEFUnited, 1967/02/20, 2014-07-02 00:00:00.0, 2014-06-27 09:23:00.609}
2014-06-27 09:23:00,610 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{10, 諸葛亮孔明@gmail.com, ShokatsuGoGo, null, 2014-07-03 00:00:00.0, 2014-06-27 09:23:00.61}
2014-06-27 09:23:00,613 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{11, Boban@gmail.com, Boban, 1968/10/08, 2014-07-04 00:00:00.0, 2014-06-27 09:23:00.613}
2014-06-27 09:23:00,614 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{12, Suker@gmail.com, Suker, 1968/01/01, 2014-07-05 00:00:00.0, 2014-06-27 09:23:00.614}
2014-06-27 09:23:00,616 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{13, Jarni@gmail.com, Jarni, 1968/10/26, 2014-07-06 00:00:00.0, 2014-06-27 09:23:00.616}
2014-06-27 09:23:00,618 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{14, Boksic@gmail.com, Boksic, 1970/01/21, 2014-07-07 00:00:00.0, 2014-06-27 09:23:00.618}
2014-06-27 09:23:00,620 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{15, Prosinecki@gmail.com, Prosinecki, 1969/01/12, 2014-07-08 00:00:00.0, 2014-06-27 09:23:00.62}
2014-06-27 09:23:00,621 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{16, RobeltKovac@gmail.com, RobeltKovac, null, 2014-07-09 00:00:00.0, 2014-06-27 09:23:00.621}
2014-06-27 09:23:00,623 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{17, NikoKovac@gmail.com, NikoKovac, null, 2014-07-10 00:00:00.0, 2014-06-27 09:23:00.622}
2014-06-27 09:23:00,624 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{18, Jovanovic@gmail.com, Jovano, 1981/04/18, 2014-07-11 00:00:00.0, 2014-06-27 09:23:00.624}
2014-06-27 09:23:00,625 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{19, Milko@gmail.com, Milko, 1974/09/10, 2014-07-12 00:00:00.0, 2014-06-27 09:23:00.625}
2014-06-27 09:23:00,627 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{20, 諸葛瑾子瑜@gmail.com, ShokatsuKinKin, null, 2014-07-13 00:00:00.0, 2014-06-27 09:23:00.627}
2014-06-27 09:23:00,643 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 20 rows are loaded to MEMBER
2014-06-27 09:23:00,646 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 3, 2006/12/24 23:59:59}
2014-06-27 09:23:00,647 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 6, 2007/11/11 16:16:16}
2014-06-27 09:23:00,648 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{3, 1, 2006/12/23 22:56:29}
2014-06-27 09:23:00,649 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{4, 6, 2007/11/01 02:13:00}
2014-06-27 09:23:00,650 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{5, 7, 2006/05/24 23:12:59}
2014-06-27 09:23:00,651 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{6, 6, 2005/11/11 16:32:01}
2014-06-27 09:23:00,653 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{7, 6, 2006/01/28 23:59:59}
2014-06-27 09:23:00,654 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{8, 6, 2007/11/09 16:23:00}
2014-06-27 09:23:00,655 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{9, 8, 2006/12/22 23:59:59}
2014-06-27 09:23:00,657 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{10, 6, 2007/11/11 09:01:00}
2014-06-27 09:23:00,658 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{11, 1, 2006/12/23 23:59:59}
2014-06-27 09:23:00,660 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{12, 9, 2007/11/15 12:43:00}
2014-06-27 09:23:00,661 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{13, 10, 2006/12/24 23:59:59}
2014-06-27 09:23:00,663 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{14, 6, 2007/04/01 16:23:01}
2014-06-27 09:23:00,664 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{15, 7, 2006/12/24 23:59:20}
2014-06-27 09:23:00,665 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{16, 6, 2007/05/01 12:23:02}
2014-06-27 09:23:00,667 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{17, 7, 2006/12/24 23:59:21}
2014-06-27 09:23:00,668 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{18, 6, 2007/06/11 17:23:03}
2014-06-27 09:23:00,669 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{19, 4, 2006/12/24 23:59:22}
2014-06-27 09:23:00,671 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{20, 3, 2007/11/01 16:12:04}
2014-06-27 09:23:00,672 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{21, 11, 2006/12/24 23:59:23}
2014-06-27 09:23:00,673 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{22, 1, 2007/11/01 16:23:05}
2014-06-27 09:23:00,675 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{23, 9, 2006/12/24 23:59:24}
2014-06-27 09:23:00,676 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{24, 8, 2007/11/01 16:23:06}
2014-06-27 09:23:00,677 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{25, 7, 2007/12/24 11:59:25}
2014-06-27 09:23:00,679 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{26, 6, 2007/06/21 01:23:57}
2014-06-27 09:23:00,681 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{27, 5, 2006/12/24 23:59:26}
2014-06-27 09:23:00,682 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{28, 3, 2007/11/01 16:23:08}
2014-06-27 09:23:00,683 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{29, 3, 2006/12/24 23:59:27}
2014-06-27 09:23:00,685 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{30, 10, 2007/11/01 16:23:09}
2014-06-27 09:23:00,686 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-27 09:23:00,700 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 30 rows are loaded to LOGIN
2014-06-27 09:23:00,701 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014/06/23, null}
2014-06-27 09:23:00,703 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014/06/24, null}
2014-06-27 09:23:00,704 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{3, ccc, 2014/06/25, 2014/06/25}
2014-06-27 09:23:00,705 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{4, ddd, 2014/06/26, null}
2014-06-27 09:23:00,706 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{5, eee2, 2014/06/27, null}
2014-06-27 09:23:00,707 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{6, fff, 2014/06/28, null}
2014-06-27 09:23:00,709 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{7, ggg3, 2014/06/29, 2014/06/25}
2014-06-27 09:23:00,710 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{8, hhh555, 2014/06/30, null}
2014-06-27 09:23:00,712 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{9, iii, 2014/07/01, 2014/06/25}
2014-06-27 09:23:00,714 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{10, jjj, 2014/07/02, null}
2014-06-27 09:23:00,715 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-27 09:23:00,732 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to MEMBER_SECURITY
2014-06-27 09:23:00,733 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 2013-06-13 00:00:00.0}
2014-06-27 09:23:00,735 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{2, 2345, 清君頼りになるー！, 2013-06-14 00:00:00.0}
2014-06-27 09:23:00,737 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{3, 3456, GLD, 2013-06-15 00:00:00.0}
2014-06-27 09:23:00,738 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{4, 875, BRZ, 2013-06-16 00:00:00.0}
2014-06-27 09:23:00,739 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{5, 1111, BRZ, 2013-06-17 00:00:00.0}
2014-06-27 09:23:00,741 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{6, 5422, SIL, 2013-06-18 00:00:00.0}
2014-06-27 09:23:00,742 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{7, 24678, SIL, 2013-06-19 00:00:00.0}
2014-06-27 09:23:00,743 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{8, 234, SIL, 2013-06-20 00:00:00.0}
2014-06-27 09:23:00,745 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{9, 3, SIL, 2013-06-21 00:00:00.0}
2014-06-27 09:23:00,746 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{10, 98765, PLT, 2013-06-22 00:00:00.0}
2014-06-27 09:23:00,747 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-27 09:23:00,754 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to TWEET
2014-06-27 09:23:00,756 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{3, 1, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123}
2014-06-27 09:23:00,759 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{6, 1, null, 2007/11/11 16:00:00.456}
2014-06-27 09:23:00,762 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{13, 2, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789}
2014-06-27 09:23:00,765 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{16, 3, コバチが２人いるため, 2007/11/13 16:00:00.456}
2014-06-27 09:23:00,776 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 4 rows are loaded to MEMBER_WITHDRAW
2014-06-27 09:23:00,777 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - FOLLOW:{21, 1, 1, 2014-06-21 00:00:00.0}
2014-06-27 09:23:00,783 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():225) - ...Retrying by suppressing batch update: FOLLOW
2014-06-27 09:23:00,791 [main] ERROR (DfDBFluteTaskUtil#logException():161) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'ReplaceSchema'.

[Advice]
Check the exception messages and the stack traces.

[Database Product]
MySQL 5.6.17

[JDBC Driver]
MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
* * * * * * * * * */
org.seasar.dbflute.exception.DfXlsDataRegistrationFailureException: Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to register the table data.

[Advice]
Please confirm the SQLException message.

[Data Directory]
playsql/data/ut/xls

[Xls File]
playsql\data\ut\xls\20-member.xls

[Table]
FOLLOW

[SQLException]
java.sql.BatchUpdateException
Cannot add or update a child row: a foreign key constraint fails (`twitter`.`follow`, CONSTRAINT `follow_ibfk_1` FOREIGN KEY (`MEMBER_ID`) REFERENCES `member` (`MEMBER_ID`))

[Non-Batch Retry]
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException
Cannot add or update a child row: a foreign key constraint fails (`twitter`.`follow`, CONSTRAINT `follow_ibfk_1` FOREIGN KEY (`MEMBER_ID`) REFERENCES `member` (`MEMBER_ID`))
[MEMBER_ID, FOLLOW_ID, FOLLOWER_ID, FOLLOW_DATETIME]
{21, 1, 1, 2014-06-21 00:00:00.0}
Row Number: 1

[Bind Type]
MEMBER_ID = java.lang.Integer
FOLLOW_ID = java.lang.Integer
FOLLOWER_ID = java.lang.Integer
FOLLOW_DATETIME = java.sql.Timestamp
* * * * * * * * * */
	at org.seasar.dbflute.logic.replaceschema.loaddata.impl.DfXlsDataHandlerImpl.handleWriteTableException(DfXlsDataHandlerImpl.java:373)
	at org.seasar.dbflute.logic.replaceschema.loaddata.impl.DfXlsDataHandlerImpl.doWriteDataTable(DfXlsDataHandlerImpl.java:258)
	at org.seasar.dbflute.logic.replaceschema.loaddata.impl.DfXlsDataHandlerImpl.doWriteDataSet(DfXlsDataHandlerImpl.java:152)
	at org.seasar.dbflute.logic.replaceschema.loaddata.impl.DfXlsDataHandlerImpl.writeSeveralData(DfXlsDataHandlerImpl.java:133)
	at org.seasar.dbflute.logic.replaceschema.process.DfLoadDataProcess.writeDbFromXls(DfLoadDataProcess.java:319)
	at org.seasar.dbflute.logic.replaceschema.process.DfLoadDataProcess.writeDbFromXls(DfLoadDataProcess.java:307)
	at org.seasar.dbflute.logic.replaceschema.process.DfLoadDataProcess.writeDbFromXlsAsLoadingTypeData(DfLoadDataProcess.java:291)
	at org.seasar.dbflute.logic.replaceschema.process.DfLoadDataProcess.execute(DfLoadDataProcess.java:159)
	at org.seasar.dbflute.task.DfReplaceSchemaTask.loadData(DfReplaceSchemaTask.java:274)
	at org.seasar.dbflute.task.DfReplaceSchemaTask.doExecuteCoreProcess(DfReplaceSchemaTask.java:238)
	at org.seasar.dbflute.task.DfReplaceSchemaTask.executeCoreProcess(DfReplaceSchemaTask.java:232)
	at org.seasar.dbflute.task.DfReplaceSchemaTask.processMain(DfReplaceSchemaTask.java:225)
	at org.seasar.dbflute.task.DfReplaceSchemaTask.doExecute(DfReplaceSchemaTask.java:153)
	at org.seasar.dbflute.task.bs.DfAbstractTexenTask$1.callActualExecute(DfAbstractTexenTask.java:130)
	at org.seasar.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:184)
	at org.seasar.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:77)
	at org.seasar.dbflute.task.bs.DfAbstractTexenTask.execute(DfAbstractTexenTask.java:152)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:105)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
Caused by: java.sql.BatchUpdateException: Cannot add or update a child row: a foreign key constraint fails (`twitter`.`follow`, CONSTRAINT `follow_ibfk_1` FOREIGN KEY (`MEMBER_ID`) REFERENCES `member` (`MEMBER_ID`))
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:2056)
	at com.mysql.jdbc.PreparedStatement.executeBatch(PreparedStatement.java:1467)
	at org.seasar.dbflute.logic.replaceschema.loaddata.impl.DfXlsDataHandlerImpl.doWriteDataTable(DfXlsDataHandlerImpl.java:216)
	... 44 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`twitter`.`follow`, CONSTRAINT `follow_ibfk_1` FOREIGN KEY (`MEMBER_ID`) REFERENCES `member` (`MEMBER_ID`))
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1041)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4190)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4122)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2570)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2731)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2818)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2157)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2460)
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:2008)
	... 46 more
2014-06-27 09:23:00,958 [main] INFO  (DfDataSourceHandler#commit():94) - ...commit()
2014-06-27 09:23:00,959 [main] INFO  (DfDataSourceHandler#destroy():117) - ...rollback()
2014-06-27 09:23:00,960 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-27 09:23:00,965 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m04s341ms *Abort

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=13 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=0
  x (failed: Look at the exception message)
    * * * * * *
    * Failure *
    * * * * * *
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-06-27 09:31:17,994 [main] INFO  (DfReplaceSchemaTask#begin():87) - +------------------------------------------+
2014-06-27 09:31:17,997 [main] INFO  (DfReplaceSchemaTask#begin():88) - |                                          |
2014-06-27 09:31:17,997 [main] INFO  (DfReplaceSchemaTask#begin():89) - |              ReplaceSchema               |
2014-06-27 09:31:18,017 [main] INFO  (DfReplaceSchemaTask#begin():97) - |                                          |
2014-06-27 09:31:18,018 [main] INFO  (DfReplaceSchemaTask#begin():98) - +------------------------------------------+
2014-06-27 09:31:18,020 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():329) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2014-06-27 09:31:19,783 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 09:31:19,785 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 09:31:19,786 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 09:31:19,787 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 09:31:19,797 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-27 09:31:20,026 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-27 09:31:20,027 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-27 09:31:20,047 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():207) - 
2014-06-27 09:31:20,048 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():208) - * * * * * * * * * * *
2014-06-27 09:31:20,049 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():209) - *                   *
2014-06-27 09:31:20,051 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():210) - * Initialize Schema *
2014-06-27 09:31:20,052 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():211) - *                   *
2014-06-27 09:31:20,053 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():212) - * * * * * * * * * * *
2014-06-27 09:31:20,072 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-27 09:31:20,072 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-27 09:31:20,073 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-27 09:31:20,139 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table follow
2014-06-27 09:31:20,185 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table login
2014-06-27 09:31:20,222 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_security
2014-06-27 09:31:20,246 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_withdraw
2014-06-27 09:31:20,280 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table tweet
2014-06-27 09:31:20,316 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_1
2014-06-27 09:31:20,338 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table login drop foreign key login_ibfk_1
2014-06-27 09:31:20,350 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_security drop foreign key member_security_ibfk_1
2014-06-27 09:31:20,371 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_withdraw drop foreign key member_withdraw_ibfk_1
2014-06-27 09:31:20,388 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table tweet drop foreign key tweet_ibfk_1
2014-06-27 09:31:20,409 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table follow
2014-06-27 09:31:20,439 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table login
2014-06-27 09:31:20,465 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member
2014-06-27 09:31:20,492 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_security
2014-06-27 09:31:20,512 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_withdraw
2014-06-27 09:31:20,529 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table tweet
2014-06-27 09:31:20,568 [main] INFO  (DfCreateSchemaProcess#createSchema():244) - 
2014-06-27 09:31:20,569 [main] INFO  (DfCreateSchemaProcess#createSchema():245) - * * * * * * * * *
2014-06-27 09:31:20,570 [main] INFO  (DfCreateSchemaProcess#createSchema():246) - *               *
2014-06-27 09:31:20,571 [main] INFO  (DfCreateSchemaProcess#createSchema():247) - * Create Schema *
2014-06-27 09:31:20,573 [main] INFO  (DfCreateSchemaProcess#createSchema():248) - *               *
2014-06-27 09:31:20,574 [main] INFO  (DfCreateSchemaProcess#createSchema():249) - * * * * * * * * *
2014-06-27 09:31:20,581 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-00-system.sql
2014-06-27 09:31:20,584 [main] INFO  (DfReplaceSchemaProperties#checkTargetEnvType():277) - ...Checking envType: ut in [ut]
2014-06-27 09:31:20,585 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:checkEnv(ut)#

-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database twitter
2014-06-27 09:31:20,593 [main] INFO  (DfCreateSchemaProcess$1#dispatch():273) - ...Creating a connection to system
2014-06-27 09:31:20,595 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():514) - ...Creating a connection for additional user: root
2014-06-27 09:31:20,606 [main] INFO  (DfCreateSchemaProcess$1#dispatch():299) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2014-06-27 09:31:20,608 [main] INFO  (DfCreateSchemaProcess$1#dispatch():301) -  -> Can't create database 'twitter'; database exists
2014-06-27 09:31:20,609 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():411) - ...Reviving the user 'system' until the end of this SQL file
2014-06-27 09:31:20,611 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on twitter.*
  to twitter@localhost identified by 'twitter'
2014-06-27 09:31:20,618 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2014-06-27 09:31:20,621 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2014-06-27 09:31:20,622 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-10-basic.sql
2014-06-27 09:31:20,623 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():348) - ...Saying good-bye to the user 'system' again
2014-06-27 09:31:20,629 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():352) - ...Clearing revived users
2014-06-27 09:31:20,630 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():359) - ...Coming back to the main user from the user 'system'
2014-06-27 09:31:20,634 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FOLLOW
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	FOLLOW_ID INT(100) UNIQUE COMMENT 'フォローID',
	FOLLOWER_ID INT UNIQUE COMMENT 'フォロワーID',
	FOLLOW_DATETIME DATETIME NOT NULL COMMENT 'follow_datetime',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = 'フォロー'
2014-06-27 09:31:20,707 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE LOGIN
(
	LOGIN_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ログインID : ログインした瞬間のID
',
	LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	PRIMARY KEY (LOGIN_ID)
) COMMENT = 'ログイン'
2014-06-27 09:31:20,750 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER
(
	MEMBER_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員のID
',
	EMAIL_ADDRESS VARCHAR(100) NOT NULL UNIQUE COMMENT 'メールアドレス : 会員のメールアドレス',
	USER_NAME VARCHAR(50) NOT NULL UNIQUE COMMENT '会員ユーザ名 : 会員のユーザ名',
	UPDATE_DATETIME DATETIME COMMENT '更新日時',
	BIRTHDATE DATE COMMENT '生年月日 : 会員の生年月日',
	PROFILE VARCHAR(200) COMMENT 'プロフィール',
	REGESTER_DATETIME DATETIME NOT NULL COMMENT '登録日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員'
2014-06-27 09:31:20,808 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PASSWORD VARCHAR(50) NOT NULL COMMENT 'パスワード',
	PASSWORD_UPDATE_DATETIME DATETIME COMMENT 'パスワード更新日時',
	PASSWORD_REGESTERATION_DATETIME DATETIME NOT NULL COMMENT 'パスワード登録日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員セキュリティ'
2014-06-27 09:31:20,868 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_WITHDRAW
(
	WITHDRAWAL_REASON_ID INT COMMENT '退会理由ID : 会員の退会理由ID',
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト',
	WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT 'withdrawal_datetime : 退会日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員退会'
2014-06-27 09:31:20,929 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	TWEET_DATETIME DATETIME NOT NULL COMMENT 'TWEET日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-06-27 09:31:20,992 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FOLLOW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 09:31:21,086 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 09:31:21,177 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 09:31:21,264 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_WITHDRAW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 09:31:21,349 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 09:31:21,449 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=11 failure=0
2014-06-27 09:31:21,451 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=13 failure=0 (in 2 files)
2014-06-27 09:31:21,453 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-06-27 09:31:21,513 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-06-27 09:31:21,514 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-06-27 09:31:21,514 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-06-27 09:31:21,516 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-06-27 09:31:21,517 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-06-27 09:31:21,518 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-06-27 09:31:21,541 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-06-27 09:31:21,542 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-06-27 09:31:21,542 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-06-27 09:31:21,844 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-27 09:31:21,844 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-27 09:31:21,845 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-27 09:31:21,913 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{1, Stojkovic@gmail.com, Pixy, 1965/03/03, 2014-06-24 00:00:00.0, 2014-06-27 09:31:21.912}
2014-06-27 09:31:21,964 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{2, Savicevic@gmail.com, Genius, 1966/09/15, 2014-06-25 00:00:00.0, 2014-06-27 09:31:21.964}
2014-06-27 09:31:21,966 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{3, Mijatovic@gmail.com, Mijato, null, 2014-06-26 00:00:00.0, 2014-06-27 09:31:21.965}
2014-06-27 09:31:21,967 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{4, Stankovic@gmail.com, Stanko, 1978/09/11, 2014-06-27 00:00:00.0, 2014-06-27 09:31:21.967}
2014-06-27 09:31:21,968 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{5, Milosevic@gmail.com, Milose, null, 2014-06-28 00:00:00.0, 2014-06-27 09:31:21.968}
2014-06-27 09:31:21,969 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{6, Mihajlovic@gmail.com, FreeKick, 1969/02/20, 2014-06-29 00:00:00.0, 2014-06-27 09:31:21.969}
2014-06-27 09:31:21,971 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{7, アカギ@gmail.com, Akagi, null, 2014-06-30 00:00:00.0, 2014-06-27 09:31:21.971}
2014-06-27 09:31:21,973 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{8, Kezman@gmial.com, RedCard, null, 2014-07-01 00:00:00.0, 2014-06-27 09:31:21.973}
2014-06-27 09:31:21,974 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{9, Maslovar@gmail.com, JEFUnited, 1967/02/20, 2014-07-02 00:00:00.0, 2014-06-27 09:31:21.974}
2014-06-27 09:31:21,975 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{10, 諸葛亮孔明@gmail.com, ShokatsuGoGo, null, 2014-07-03 00:00:00.0, 2014-06-27 09:31:21.975}
2014-06-27 09:31:21,978 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{11, Boban@gmail.com, Boban, 1968/10/08, 2014-07-04 00:00:00.0, 2014-06-27 09:31:21.978}
2014-06-27 09:31:21,980 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{12, Suker@gmail.com, Suker, 1968/01/01, 2014-07-05 00:00:00.0, 2014-06-27 09:31:21.98}
2014-06-27 09:31:21,982 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{13, Jarni@gmail.com, Jarni, 1968/10/26, 2014-07-06 00:00:00.0, 2014-06-27 09:31:21.982}
2014-06-27 09:31:21,983 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{14, Boksic@gmail.com, Boksic, 1970/01/21, 2014-07-07 00:00:00.0, 2014-06-27 09:31:21.983}
2014-06-27 09:31:21,985 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{15, Prosinecki@gmail.com, Prosinecki, 1969/01/12, 2014-07-08 00:00:00.0, 2014-06-27 09:31:21.985}
2014-06-27 09:31:21,987 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{16, RobeltKovac@gmail.com, RobeltKovac, null, 2014-07-09 00:00:00.0, 2014-06-27 09:31:21.987}
2014-06-27 09:31:21,988 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{17, NikoKovac@gmail.com, NikoKovac, null, 2014-07-10 00:00:00.0, 2014-06-27 09:31:21.988}
2014-06-27 09:31:21,990 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{18, Jovanovic@gmail.com, Jovano, 1981/04/18, 2014-07-11 00:00:00.0, 2014-06-27 09:31:21.99}
2014-06-27 09:31:21,992 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{19, Milko@gmail.com, Milko, 1974/09/10, 2014-07-12 00:00:00.0, 2014-06-27 09:31:21.992}
2014-06-27 09:31:21,994 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{20, 諸葛瑾子瑜@gmail.com, ShokatsuKinKin, null, 2014-07-13 00:00:00.0, 2014-06-27 09:31:21.994}
2014-06-27 09:31:22,011 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 20 rows are loaded to MEMBER
2014-06-27 09:31:22,014 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 3, 2006/12/24 23:59:59}
2014-06-27 09:31:22,015 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 6, 2007/11/11 16:16:16}
2014-06-27 09:31:22,016 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{3, 1, 2006/12/23 22:56:29}
2014-06-27 09:31:22,017 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{4, 6, 2007/11/01 02:13:00}
2014-06-27 09:31:22,018 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{5, 7, 2006/05/24 23:12:59}
2014-06-27 09:31:22,019 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{6, 6, 2005/11/11 16:32:01}
2014-06-27 09:31:22,021 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{7, 6, 2006/01/28 23:59:59}
2014-06-27 09:31:22,022 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{8, 6, 2007/11/09 16:23:00}
2014-06-27 09:31:22,023 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{9, 8, 2006/12/22 23:59:59}
2014-06-27 09:31:22,025 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{10, 6, 2007/11/11 09:01:00}
2014-06-27 09:31:22,026 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{11, 1, 2006/12/23 23:59:59}
2014-06-27 09:31:22,027 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{12, 9, 2007/11/15 12:43:00}
2014-06-27 09:31:22,029 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{13, 10, 2006/12/24 23:59:59}
2014-06-27 09:31:22,031 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{14, 6, 2007/04/01 16:23:01}
2014-06-27 09:31:22,032 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{15, 7, 2006/12/24 23:59:20}
2014-06-27 09:31:22,033 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{16, 6, 2007/05/01 12:23:02}
2014-06-27 09:31:22,035 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{17, 7, 2006/12/24 23:59:21}
2014-06-27 09:31:22,036 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{18, 6, 2007/06/11 17:23:03}
2014-06-27 09:31:22,038 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{19, 4, 2006/12/24 23:59:22}
2014-06-27 09:31:22,039 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{20, 3, 2007/11/01 16:12:04}
2014-06-27 09:31:22,040 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{21, 11, 2006/12/24 23:59:23}
2014-06-27 09:31:22,041 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{22, 1, 2007/11/01 16:23:05}
2014-06-27 09:31:22,043 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{23, 9, 2006/12/24 23:59:24}
2014-06-27 09:31:22,044 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{24, 8, 2007/11/01 16:23:06}
2014-06-27 09:31:22,045 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{25, 7, 2007/12/24 11:59:25}
2014-06-27 09:31:22,047 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{26, 6, 2007/06/21 01:23:57}
2014-06-27 09:31:22,049 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{27, 5, 2006/12/24 23:59:26}
2014-06-27 09:31:22,050 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{28, 3, 2007/11/01 16:23:08}
2014-06-27 09:31:22,051 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{29, 3, 2006/12/24 23:59:27}
2014-06-27 09:31:22,052 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{30, 10, 2007/11/01 16:23:09}
2014-06-27 09:31:22,054 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-27 09:31:22,068 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 30 rows are loaded to LOGIN
2014-06-27 09:31:22,069 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014/06/23, null}
2014-06-27 09:31:22,071 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014/06/24, null}
2014-06-27 09:31:22,072 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{3, ccc, 2014/06/25, 2014/06/25}
2014-06-27 09:31:22,073 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{4, ddd, 2014/06/26, null}
2014-06-27 09:31:22,074 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{5, eee2, 2014/06/27, null}
2014-06-27 09:31:22,075 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{6, fff, 2014/06/28, null}
2014-06-27 09:31:22,077 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{7, ggg3, 2014/06/29, 2014/06/25}
2014-06-27 09:31:22,078 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{8, hhh555, 2014/06/30, null}
2014-06-27 09:31:22,080 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{9, iii, 2014/07/01, 2014/06/25}
2014-06-27 09:31:22,082 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{10, jjj, 2014/07/02, null}
2014-06-27 09:31:22,083 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-27 09:31:22,094 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to MEMBER_SECURITY
2014-06-27 09:31:22,096 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 2013-06-13 00:00:00.0}
2014-06-27 09:31:22,098 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{2, 2345, 清君頼りになるー！, 2013-06-14 00:00:00.0}
2014-06-27 09:31:22,100 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{3, 3456, GLD, 2013-06-15 00:00:00.0}
2014-06-27 09:31:22,100 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{4, 875, BRZ, 2013-06-16 00:00:00.0}
2014-06-27 09:31:22,102 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{5, 1111, BRZ, 2013-06-17 00:00:00.0}
2014-06-27 09:31:22,103 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{6, 5422, SIL, 2013-06-18 00:00:00.0}
2014-06-27 09:31:22,105 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{7, 24678, SIL, 2013-06-19 00:00:00.0}
2014-06-27 09:31:22,106 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{8, 234, SIL, 2013-06-20 00:00:00.0}
2014-06-27 09:31:22,107 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{9, 3, SIL, 2013-06-21 00:00:00.0}
2014-06-27 09:31:22,108 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{10, 98765, PLT, 2013-06-22 00:00:00.0}
2014-06-27 09:31:22,110 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-27 09:31:22,117 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to TWEET
2014-06-27 09:31:22,118 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{3, 1, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123}
2014-06-27 09:31:22,121 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{6, 1, null, 2007/11/11 16:00:00.456}
2014-06-27 09:31:22,123 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{13, 2, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789}
2014-06-27 09:31:22,127 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{16, 3, コバチが２人いるため, 2007/11/13 16:00:00.456}
2014-06-27 09:31:22,144 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 4 rows are loaded to MEMBER_WITHDRAW
2014-06-27 09:31:22,146 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - FOLLOW:{21, 1, 1, 2014-06-21 00:00:00.0}
2014-06-27 09:31:22,150 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():225) - ...Retrying by suppressing batch update: FOLLOW
2014-06-27 09:31:22,159 [main] ERROR (DfDBFluteTaskUtil#logException():161) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'ReplaceSchema'.

[Advice]
Check the exception messages and the stack traces.

[Database Product]
MySQL 5.6.17

[JDBC Driver]
MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
* * * * * * * * * */
org.seasar.dbflute.exception.DfXlsDataRegistrationFailureException: Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to register the table data.

[Advice]
Please confirm the SQLException message.

[Data Directory]
playsql/data/ut/xls

[Xls File]
playsql\data\ut\xls\20-member.xls

[Table]
FOLLOW

[SQLException]
java.sql.BatchUpdateException
Cannot add or update a child row: a foreign key constraint fails (`twitter`.`follow`, CONSTRAINT `follow_ibfk_1` FOREIGN KEY (`MEMBER_ID`) REFERENCES `member` (`MEMBER_ID`))

[Non-Batch Retry]
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException
Cannot add or update a child row: a foreign key constraint fails (`twitter`.`follow`, CONSTRAINT `follow_ibfk_1` FOREIGN KEY (`MEMBER_ID`) REFERENCES `member` (`MEMBER_ID`))
[MEMBER_ID, FOLLOW_ID, FOLLOWER_ID, FOLLOW_DATETIME]
{21, 1, 1, 2014-06-21 00:00:00.0}
Row Number: 1

[Bind Type]
MEMBER_ID = java.lang.Integer
FOLLOW_ID = java.lang.Integer
FOLLOWER_ID = java.lang.Integer
FOLLOW_DATETIME = java.sql.Timestamp
* * * * * * * * * */
	at org.seasar.dbflute.logic.replaceschema.loaddata.impl.DfXlsDataHandlerImpl.handleWriteTableException(DfXlsDataHandlerImpl.java:373)
	at org.seasar.dbflute.logic.replaceschema.loaddata.impl.DfXlsDataHandlerImpl.doWriteDataTable(DfXlsDataHandlerImpl.java:258)
	at org.seasar.dbflute.logic.replaceschema.loaddata.impl.DfXlsDataHandlerImpl.doWriteDataSet(DfXlsDataHandlerImpl.java:152)
	at org.seasar.dbflute.logic.replaceschema.loaddata.impl.DfXlsDataHandlerImpl.writeSeveralData(DfXlsDataHandlerImpl.java:133)
	at org.seasar.dbflute.logic.replaceschema.process.DfLoadDataProcess.writeDbFromXls(DfLoadDataProcess.java:319)
	at org.seasar.dbflute.logic.replaceschema.process.DfLoadDataProcess.writeDbFromXls(DfLoadDataProcess.java:307)
	at org.seasar.dbflute.logic.replaceschema.process.DfLoadDataProcess.writeDbFromXlsAsLoadingTypeData(DfLoadDataProcess.java:291)
	at org.seasar.dbflute.logic.replaceschema.process.DfLoadDataProcess.execute(DfLoadDataProcess.java:159)
	at org.seasar.dbflute.task.DfReplaceSchemaTask.loadData(DfReplaceSchemaTask.java:274)
	at org.seasar.dbflute.task.DfReplaceSchemaTask.doExecuteCoreProcess(DfReplaceSchemaTask.java:238)
	at org.seasar.dbflute.task.DfReplaceSchemaTask.executeCoreProcess(DfReplaceSchemaTask.java:232)
	at org.seasar.dbflute.task.DfReplaceSchemaTask.processMain(DfReplaceSchemaTask.java:225)
	at org.seasar.dbflute.task.DfReplaceSchemaTask.doExecute(DfReplaceSchemaTask.java:153)
	at org.seasar.dbflute.task.bs.DfAbstractTexenTask$1.callActualExecute(DfAbstractTexenTask.java:130)
	at org.seasar.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:184)
	at org.seasar.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:77)
	at org.seasar.dbflute.task.bs.DfAbstractTexenTask.execute(DfAbstractTexenTask.java:152)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:105)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
Caused by: java.sql.BatchUpdateException: Cannot add or update a child row: a foreign key constraint fails (`twitter`.`follow`, CONSTRAINT `follow_ibfk_1` FOREIGN KEY (`MEMBER_ID`) REFERENCES `member` (`MEMBER_ID`))
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:2056)
	at com.mysql.jdbc.PreparedStatement.executeBatch(PreparedStatement.java:1467)
	at org.seasar.dbflute.logic.replaceschema.loaddata.impl.DfXlsDataHandlerImpl.doWriteDataTable(DfXlsDataHandlerImpl.java:216)
	... 44 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`twitter`.`follow`, CONSTRAINT `follow_ibfk_1` FOREIGN KEY (`MEMBER_ID`) REFERENCES `member` (`MEMBER_ID`))
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1041)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4190)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4122)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2570)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2731)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2818)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2157)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2460)
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:2008)
	... 46 more
2014-06-27 09:31:22,322 [main] INFO  (DfDataSourceHandler#commit():94) - ...commit()
2014-06-27 09:31:22,324 [main] INFO  (DfDataSourceHandler#destroy():117) - ...rollback()
2014-06-27 09:31:22,324 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-27 09:31:22,333 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m04s333ms *Abort

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=13 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=0
  x (failed: Look at the exception message)
    * * * * * *
    * Failure *
    * * * * * *
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-06-27 09:33:58,787 [main] INFO  (DfReplaceSchemaTask#begin():87) - +------------------------------------------+
2014-06-27 09:33:58,790 [main] INFO  (DfReplaceSchemaTask#begin():88) - |                                          |
2014-06-27 09:33:58,790 [main] INFO  (DfReplaceSchemaTask#begin():89) - |              ReplaceSchema               |
2014-06-27 09:33:58,809 [main] INFO  (DfReplaceSchemaTask#begin():97) - |                                          |
2014-06-27 09:33:58,810 [main] INFO  (DfReplaceSchemaTask#begin():98) - +------------------------------------------+
2014-06-27 09:33:58,812 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():329) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2014-06-27 09:34:00,282 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 09:34:00,283 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 09:34:00,284 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 09:34:00,286 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 09:34:00,296 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-27 09:34:00,530 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-27 09:34:00,533 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-27 09:34:00,551 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():207) - 
2014-06-27 09:34:00,551 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():208) - * * * * * * * * * * *
2014-06-27 09:34:00,552 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():209) - *                   *
2014-06-27 09:34:00,554 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():210) - * Initialize Schema *
2014-06-27 09:34:00,555 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():211) - *                   *
2014-06-27 09:34:00,556 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():212) - * * * * * * * * * * *
2014-06-27 09:34:00,574 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-27 09:34:00,575 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-27 09:34:00,576 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-27 09:34:00,620 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table follow
2014-06-27 09:34:00,653 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table login
2014-06-27 09:34:00,702 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_security
2014-06-27 09:34:00,723 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_withdraw
2014-06-27 09:34:00,766 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table tweet
2014-06-27 09:34:00,792 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_1
2014-06-27 09:34:00,806 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table login drop foreign key login_ibfk_1
2014-06-27 09:34:00,822 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_security drop foreign key member_security_ibfk_1
2014-06-27 09:34:00,832 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_withdraw drop foreign key member_withdraw_ibfk_1
2014-06-27 09:34:00,849 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table tweet drop foreign key tweet_ibfk_1
2014-06-27 09:34:00,876 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table follow
2014-06-27 09:34:00,891 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table login
2014-06-27 09:34:00,903 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member
2014-06-27 09:34:00,927 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_security
2014-06-27 09:34:00,949 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_withdraw
2014-06-27 09:34:00,964 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table tweet
2014-06-27 09:34:01,003 [main] INFO  (DfCreateSchemaProcess#createSchema():244) - 
2014-06-27 09:34:01,004 [main] INFO  (DfCreateSchemaProcess#createSchema():245) - * * * * * * * * *
2014-06-27 09:34:01,005 [main] INFO  (DfCreateSchemaProcess#createSchema():246) - *               *
2014-06-27 09:34:01,006 [main] INFO  (DfCreateSchemaProcess#createSchema():247) - * Create Schema *
2014-06-27 09:34:01,008 [main] INFO  (DfCreateSchemaProcess#createSchema():248) - *               *
2014-06-27 09:34:01,009 [main] INFO  (DfCreateSchemaProcess#createSchema():249) - * * * * * * * * *
2014-06-27 09:34:01,016 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-00-system.sql
2014-06-27 09:34:01,019 [main] INFO  (DfReplaceSchemaProperties#checkTargetEnvType():277) - ...Checking envType: ut in [ut]
2014-06-27 09:34:01,020 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:checkEnv(ut)#

-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database twitter
2014-06-27 09:34:01,028 [main] INFO  (DfCreateSchemaProcess$1#dispatch():273) - ...Creating a connection to system
2014-06-27 09:34:01,030 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():514) - ...Creating a connection for additional user: root
2014-06-27 09:34:01,043 [main] INFO  (DfCreateSchemaProcess$1#dispatch():299) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2014-06-27 09:34:01,044 [main] INFO  (DfCreateSchemaProcess$1#dispatch():301) -  -> Can't create database 'twitter'; database exists
2014-06-27 09:34:01,045 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():411) - ...Reviving the user 'system' until the end of this SQL file
2014-06-27 09:34:01,046 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on twitter.*
  to twitter@localhost identified by 'twitter'
2014-06-27 09:34:01,054 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2014-06-27 09:34:01,056 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2014-06-27 09:34:01,057 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-10-basic.sql
2014-06-27 09:34:01,058 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():348) - ...Saying good-bye to the user 'system' again
2014-06-27 09:34:01,059 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():352) - ...Clearing revived users
2014-06-27 09:34:01,061 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():359) - ...Coming back to the main user from the user 'system'
2014-06-27 09:34:01,064 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FOLLOW
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	FOLLOW_ID INT(100) UNIQUE COMMENT 'フォローID',
	FOLLOWER_ID INT UNIQUE COMMENT 'フォロワーID',
	FOLLOW_DATETIME DATETIME NOT NULL COMMENT 'follow_datetime',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = 'フォロー'
2014-06-27 09:34:01,123 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE LOGIN
(
	LOGIN_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ログインID : ログインした瞬間のID
',
	LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	PRIMARY KEY (LOGIN_ID)
) COMMENT = 'ログイン'
2014-06-27 09:34:01,185 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER
(
	MEMBER_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員のID
',
	EMAIL_ADDRESS VARCHAR(100) NOT NULL UNIQUE COMMENT 'メールアドレス : 会員のメールアドレス',
	USER_NAME VARCHAR(50) NOT NULL UNIQUE COMMENT '会員ユーザ名 : 会員のユーザ名',
	UPDATE_DATETIME DATETIME COMMENT '更新日時',
	BIRTHDATE DATE COMMENT '生年月日 : 会員の生年月日',
	PROFILE VARCHAR(200) COMMENT 'プロフィール',
	REGESTER_DATETIME DATETIME NOT NULL COMMENT '登録日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員'
2014-06-27 09:34:01,259 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PASSWORD VARCHAR(50) NOT NULL COMMENT 'パスワード',
	PASSWORD_UPDATE_DATETIME DATETIME COMMENT 'パスワード更新日時',
	PASSWORD_REGESTERATION_DATETIME DATETIME NOT NULL COMMENT 'パスワード登録日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員セキュリティ'
2014-06-27 09:34:01,325 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_WITHDRAW
(
	WITHDRAWAL_REASON_ID INT COMMENT '退会理由ID : 会員の退会理由ID',
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト',
	WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT 'withdrawal_datetime : 退会日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員退会'
2014-06-27 09:34:01,364 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	TWEET_DATETIME DATETIME NOT NULL COMMENT 'TWEET日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-06-27 09:34:01,410 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FOLLOW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 09:34:01,489 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 09:34:01,563 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 09:34:01,635 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_WITHDRAW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 09:34:01,741 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 09:34:01,833 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=11 failure=0
2014-06-27 09:34:01,835 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=13 failure=0 (in 2 files)
2014-06-27 09:34:01,837 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-06-27 09:34:01,892 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-06-27 09:34:01,893 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-06-27 09:34:01,894 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-06-27 09:34:01,895 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-06-27 09:34:01,897 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-06-27 09:34:01,898 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-06-27 09:34:01,923 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-06-27 09:34:01,924 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-06-27 09:34:01,925 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-06-27 09:34:02,240 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-27 09:34:02,241 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-27 09:34:02,242 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-27 09:34:02,307 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{1, Stojkovic@gmail.com, Pixy, 1965/03/03, 2014-06-24 00:00:00.0, 2014-06-27 09:34:02.306}
2014-06-27 09:34:02,362 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{2, Savicevic@gmail.com, Genius, 1966/09/15, 2014-06-25 00:00:00.0, 2014-06-27 09:34:02.362}
2014-06-27 09:34:02,363 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{3, Mijatovic@gmail.com, Mijato, null, 2014-06-26 00:00:00.0, 2014-06-27 09:34:02.363}
2014-06-27 09:34:02,365 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{4, Stankovic@gmail.com, Stanko, 1978/09/11, 2014-06-27 00:00:00.0, 2014-06-27 09:34:02.365}
2014-06-27 09:34:02,366 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{5, Milosevic@gmail.com, Milose, null, 2014-06-28 00:00:00.0, 2014-06-27 09:34:02.366}
2014-06-27 09:34:02,367 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{6, Mihajlovic@gmail.com, FreeKick, 1969/02/20, 2014-06-29 00:00:00.0, 2014-06-27 09:34:02.367}
2014-06-27 09:34:02,368 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{7, アカギ@gmail.com, Akagi, null, 2014-06-30 00:00:00.0, 2014-06-27 09:34:02.368}
2014-06-27 09:34:02,371 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{8, Kezman@gmial.com, RedCard, null, 2014-07-01 00:00:00.0, 2014-06-27 09:34:02.371}
2014-06-27 09:34:02,372 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{9, Maslovar@gmail.com, JEFUnited, 1967/02/20, 2014-07-02 00:00:00.0, 2014-06-27 09:34:02.372}
2014-06-27 09:34:02,373 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{10, 諸葛亮孔明@gmail.com, ShokatsuGoGo, null, 2014-07-03 00:00:00.0, 2014-06-27 09:34:02.373}
2014-06-27 09:34:02,376 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{11, Boban@gmail.com, Boban, 1968/10/08, 2014-07-04 00:00:00.0, 2014-06-27 09:34:02.376}
2014-06-27 09:34:02,377 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{12, Suker@gmail.com, Suker, 1968/01/01, 2014-07-05 00:00:00.0, 2014-06-27 09:34:02.377}
2014-06-27 09:34:02,379 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{13, Jarni@gmail.com, Jarni, 1968/10/26, 2014-07-06 00:00:00.0, 2014-06-27 09:34:02.379}
2014-06-27 09:34:02,382 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{14, Boksic@gmail.com, Boksic, 1970/01/21, 2014-07-07 00:00:00.0, 2014-06-27 09:34:02.382}
2014-06-27 09:34:02,383 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{15, Prosinecki@gmail.com, Prosinecki, 1969/01/12, 2014-07-08 00:00:00.0, 2014-06-27 09:34:02.383}
2014-06-27 09:34:02,385 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{16, RobeltKovac@gmail.com, RobeltKovac, null, 2014-07-09 00:00:00.0, 2014-06-27 09:34:02.385}
2014-06-27 09:34:02,387 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{17, NikoKovac@gmail.com, NikoKovac, null, 2014-07-10 00:00:00.0, 2014-06-27 09:34:02.387}
2014-06-27 09:34:02,389 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{18, Jovanovic@gmail.com, Jovano, 1981/04/18, 2014-07-11 00:00:00.0, 2014-06-27 09:34:02.389}
2014-06-27 09:34:02,391 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{19, Milko@gmail.com, Milko, 1974/09/10, 2014-07-12 00:00:00.0, 2014-06-27 09:34:02.39}
2014-06-27 09:34:02,393 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{20, 諸葛瑾子瑜@gmail.com, ShokatsuKinKin, null, 2014-07-13 00:00:00.0, 2014-06-27 09:34:02.393}
2014-06-27 09:34:02,416 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 20 rows are loaded to MEMBER
2014-06-27 09:34:02,419 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 3, 2006/12/24 23:59:59}
2014-06-27 09:34:02,420 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 6, 2007/11/11 16:16:16}
2014-06-27 09:34:02,421 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{3, 1, 2006/12/23 22:56:29}
2014-06-27 09:34:02,422 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{4, 6, 2007/11/01 02:13:00}
2014-06-27 09:34:02,423 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{5, 7, 2006/05/24 23:12:59}
2014-06-27 09:34:02,424 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{6, 6, 2005/11/11 16:32:01}
2014-06-27 09:34:02,426 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{7, 6, 2006/01/28 23:59:59}
2014-06-27 09:34:02,427 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{8, 6, 2007/11/09 16:23:00}
2014-06-27 09:34:02,429 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{9, 8, 2006/12/22 23:59:59}
2014-06-27 09:34:02,430 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{10, 6, 2007/11/11 09:01:00}
2014-06-27 09:34:02,431 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{11, 1, 2006/12/23 23:59:59}
2014-06-27 09:34:02,433 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{12, 9, 2007/11/15 12:43:00}
2014-06-27 09:34:02,434 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{13, 10, 2006/12/24 23:59:59}
2014-06-27 09:34:02,435 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{14, 6, 2007/04/01 16:23:01}
2014-06-27 09:34:02,437 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{15, 7, 2006/12/24 23:59:20}
2014-06-27 09:34:02,438 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{16, 6, 2007/05/01 12:23:02}
2014-06-27 09:34:02,439 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{17, 7, 2006/12/24 23:59:21}
2014-06-27 09:34:02,441 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{18, 6, 2007/06/11 17:23:03}
2014-06-27 09:34:02,442 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{19, 4, 2006/12/24 23:59:22}
2014-06-27 09:34:02,444 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{20, 3, 2007/11/01 16:12:04}
2014-06-27 09:34:02,445 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{21, 11, 2006/12/24 23:59:23}
2014-06-27 09:34:02,447 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{22, 1, 2007/11/01 16:23:05}
2014-06-27 09:34:02,448 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{23, 9, 2006/12/24 23:59:24}
2014-06-27 09:34:02,449 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{24, 8, 2007/11/01 16:23:06}
2014-06-27 09:34:02,451 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{25, 7, 2007/12/24 11:59:25}
2014-06-27 09:34:02,452 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{26, 6, 2007/06/21 01:23:57}
2014-06-27 09:34:02,453 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{27, 5, 2006/12/24 23:59:26}
2014-06-27 09:34:02,455 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{28, 3, 2007/11/01 16:23:08}
2014-06-27 09:34:02,456 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{29, 3, 2006/12/24 23:59:27}
2014-06-27 09:34:02,457 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{30, 10, 2007/11/01 16:23:09}
2014-06-27 09:34:02,459 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-27 09:34:02,473 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 30 rows are loaded to LOGIN
2014-06-27 09:34:02,475 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014/06/23, null}
2014-06-27 09:34:02,477 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014/06/24, null}
2014-06-27 09:34:02,478 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{3, ccc, 2014/06/25, 2014/06/25}
2014-06-27 09:34:02,479 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{4, ddd, 2014/06/26, null}
2014-06-27 09:34:02,480 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{5, eee2, 2014/06/27, null}
2014-06-27 09:34:02,481 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{6, fff, 2014/06/28, null}
2014-06-27 09:34:02,482 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{7, ggg3, 2014/06/29, 2014/06/25}
2014-06-27 09:34:02,484 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{8, hhh555, 2014/06/30, null}
2014-06-27 09:34:02,485 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{9, iii, 2014/07/01, 2014/06/25}
2014-06-27 09:34:02,487 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{10, jjj, 2014/07/02, null}
2014-06-27 09:34:02,488 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-27 09:34:02,501 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to MEMBER_SECURITY
2014-06-27 09:34:02,502 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 2013-06-13 00:00:00.0}
2014-06-27 09:34:02,504 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{2, 2345, 清君頼りになるー！, 2013-06-14 00:00:00.0}
2014-06-27 09:34:02,506 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{3, 3456, GLD, 2013-06-15 00:00:00.0}
2014-06-27 09:34:02,507 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{4, 875, BRZ, 2013-06-16 00:00:00.0}
2014-06-27 09:34:02,508 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{5, 1111, BRZ, 2013-06-17 00:00:00.0}
2014-06-27 09:34:02,510 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{6, 5422, SIL, 2013-06-18 00:00:00.0}
2014-06-27 09:34:02,512 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{7, 24678, SIL, 2013-06-19 00:00:00.0}
2014-06-27 09:34:02,513 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{8, 234, SIL, 2013-06-20 00:00:00.0}
2014-06-27 09:34:02,514 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{9, 3, SIL, 2013-06-21 00:00:00.0}
2014-06-27 09:34:02,515 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{10, 98765, PLT, 2013-06-22 00:00:00.0}
2014-06-27 09:34:02,517 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-27 09:34:02,525 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to TWEET
2014-06-27 09:34:02,527 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{3, 1, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123}
2014-06-27 09:34:02,530 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{6, 1, null, 2007/11/11 16:00:00.456}
2014-06-27 09:34:02,532 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{13, 2, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789}
2014-06-27 09:34:02,535 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{16, 3, コバチが２人いるため, 2007/11/13 16:00:00.456}
2014-06-27 09:34:02,546 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 4 rows are loaded to MEMBER_WITHDRAW
2014-06-27 09:34:02,547 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - FOLLOW:{2, 1, 1, 2014-06-21 00:00:00.0}
2014-06-27 09:34:02,571 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 1 rows are loaded to FOLLOW
2014-06-27 09:34:02,579 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():379) - ...Checking implicit set of classification
2014-06-27 09:34:02,599 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - 
2014-06-27 09:34:02,600 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * * * * * * * **
2014-06-27 09:34:02,602 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2014-06-27 09:34:02,603 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * Take Finally *
2014-06-27 09:34:02,605 [main] INFO  (DfTakeFinallyProcess#takeFinally():225) - *              *
2014-06-27 09:34:02,607 [main] INFO  (DfTakeFinallyProcess#takeFinally():226) - * * * * * * * **
2014-06-27 09:34:02,619 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: take-finally.sql
2014-06-27 09:34:02,621 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2014-06-27 09:34:02,622 [main] INFO  (DfSqlFileFireMan#fire():90) - {Take Finally}: success=0 failure=0 (in 1 files)
2014-06-27 09:34:02,625 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-27 09:34:02,632 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m03s840ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=13 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=1
  (ut)
  o 20-member.xls

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-06-27 09:34:03,581 [main] INFO  (TorqueJDBCTransformTask#begin():100) - +------------------------------------------+
2014-06-27 09:34:03,583 [main] INFO  (TorqueJDBCTransformTask#begin():101) - |                                          |
2014-06-27 09:34:03,584 [main] INFO  (TorqueJDBCTransformTask#begin():102) - |                   JDBC                   |
2014-06-27 09:34:03,585 [main] INFO  (TorqueJDBCTransformTask#begin():103) - |                                          |
2014-06-27 09:34:03,586 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2014-06-27 09:34:03,629 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 09:34:03,629 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 09:34:03,630 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 09:34:03,632 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 09:34:03,679 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2014-06-27 09:34:03,680 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2014-06-27 09:34:03,681 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1469) - ...Loading previous schema (schema diff process)
2014-06-27 09:34:03,699 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-27 09:34:03,789 [main] INFO  (DfSchemaXmlSerializer#generateXML():361) - ...Getting DB connection
2014-06-27 09:34:03,794 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-27 09:34:04,016 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-27 09:34:04,017 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-27 09:34:04,019 [main] INFO  (DfSchemaXmlSerializer#generateXML():364) - ...Getting DB meta data
2014-06-27 09:34:04,021 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-27 09:34:04,022 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-27 09:34:04,022 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-27 09:34:04,037 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2014-06-27 09:34:04,040 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2014-06-27 09:34:04,052 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - 
2014-06-27 09:34:04,052 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2014-06-27 09:34:04,053 [main] INFO  (DfSchemaXmlSerializer#processTable():423) - $ [Table List]
2014-06-27 09:34:04,055 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.follow(TABLE) // フォロー
2014-06-27 09:34:04,096 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.login(TABLE) // ログイン
2014-06-27 09:34:04,110 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member(TABLE) // 会員
2014-06-27 09:34:04,126 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_security(TABLE) // 会員セキュリティ
2014-06-27 09:34:04,139 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_withdraw(TABLE) // 会員退会
2014-06-27 09:34:04,153 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.tweet(TABLE) // TWEET
2014-06-27 09:34:04,167 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 
2014-06-27 09:34:04,168 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ [Table Count]
2014-06-27 09:34:04,169 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ 6
2014-06-27 09:34:04,170 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - $ = = = = = = = = = =/
2014-06-27 09:34:04,172 [main] INFO  (DfSchemaXmlSerializer#processTable():439) - 
2014-06-27 09:34:04,176 [main] INFO  (DfSchemaXmlSerializer#processSequence():799) - ...Getting sequences
2014-06-27 09:34:04,180 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2014-06-27 09:34:04,181 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-twitter.xml
2014-06-27 09:34:04,182 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2014-06-27 09:34:04,198 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1487) - ...Loading next schema (schema diff process)
2014-06-27 09:34:04,200 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-27 09:34:04,241 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1492) -  -> different from previous (schema diff)
2014-06-27 09:34:04,243 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1494) - ...Serializing schema-diff:
2014-06-27 09:34:04,244 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1495) -   filePath = ./schema/project-history-twitter.diffmap
2014-06-27 09:34:04,265 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-27 09:34:04,272 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s686ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2014-06-27 09:34:05,208 [main] INFO  (TorqueDocumentationTask#begin():171) - +------------------------------------------+
2014-06-27 09:34:05,211 [main] INFO  (TorqueDocumentationTask#begin():172) - |                                          |
2014-06-27 09:34:05,211 [main] INFO  (TorqueDocumentationTask#begin():173) - |                   Doc                    |
2014-06-27 09:34:05,212 [main] INFO  (TorqueDocumentationTask#begin():181) - |                                          |
2014-06-27 09:34:05,213 [main] INFO  (TorqueDocumentationTask#begin():182) - +------------------------------------------+
2014-06-27 09:34:05,257 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 09:34:05,257 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 09:34:05,258 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 09:34:05,259 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 09:34:05,263 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():242) - 
2014-06-27 09:34:05,264 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():243) - * * * * * * * * * * *
2014-06-27 09:34:05,265 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():244) - *                   *
2014-06-27 09:34:05,267 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():245) - *    Schema HTML    *
2014-06-27 09:34:05,268 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - *                   *
2014-06-27 09:34:05,269 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2014-06-27 09:34:05,445 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-27 09:34:05,506 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("doc/ControlDocument.vm", c);
2014-06-27 09:34:05,578 [main] INFO  (Database#doEnableDocumentOutputDirectory():1180) - ...Setting up documentOutputDirectory: ./output/doc
2014-06-27 09:34:05,591 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-27 09:34:05,591 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-27 09:34:05,595 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-27 09:34:05,596 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-27 09:34:05,597 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-27 09:34:05,600 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-27 09:34:05,602 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-27 09:34:05,603 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-27 09:34:05,606 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-27 09:34:05,616 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():150) - ...Loading schema history
2014-06-27 09:34:05,677 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():154) -  -> found history: count=13
2014-06-27 09:34:05,896 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-27 09:34:05,911 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s700ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Doc}
2014-06-27 09:34:08,868 [main] INFO  (TorqueDataModelTask#begin():105) - +------------------------------------------+
2014-06-27 09:34:08,871 [main] INFO  (TorqueDataModelTask#begin():106) - |                                          |
2014-06-27 09:34:08,872 [main] INFO  (TorqueDataModelTask#begin():107) - |                 Generate                 |
2014-06-27 09:34:08,873 [main] INFO  (TorqueDataModelTask#begin():108) - |                                          |
2014-06-27 09:34:08,874 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2014-06-27 09:34:08,916 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 09:34:08,916 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 09:34:08,917 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 09:34:08,919 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 09:34:08,941 [main] INFO  (TorqueDataModelTask#setupControlTemplate():160) - 
2014-06-27 09:34:08,941 [main] INFO  (TorqueDataModelTask#setupControlTemplate():161) - ...Using Java control: om/ControlGenerateJava.vm
2014-06-27 09:34:09,104 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-27 09:34:09,150 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlGenerateJava.vm", c);
2014-06-27 09:34:09,279 [main] INFO  (Database#doEnableGenerateOutputDirectory():1148) - ...Setting up generateOutputDirectory: ../src/main/java
2014-06-27 09:34:09,291 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-27 09:34:09,294 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-27 09:34:09,296 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-27 09:34:09,298 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-27 09:34:09,299 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-27 09:34:09,304 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-27 09:34:09,307 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-27 09:34:09,307 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-27 09:34:09,310 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-27 09:34:09,325 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - /=============================
2014-06-27 09:34:09,326 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():60) - ...Initializing include query.
2014-06-27 09:34:09,327 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - String
2014-06-27 09:34:09,328 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Number
2014-06-27 09:34:09,330 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Date
2014-06-27 09:34:09,331 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotEqual -> []
2014-06-27 09:34:09,332 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   InScope -> []
2014-06-27 09:34:09,334 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotInScope -> []
2014-06-27 09:34:09,335 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - OrderBy
2014-06-27 09:34:09,336 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():62) - ========/
2014-06-27 09:34:09,357 [main] INFO  (Database#info():2573) - public void parseAllCommon() {
2014-06-27 09:34:09,361 [main] INFO  (Database#info():2573) -     parse('DBCurrent');
2014-06-27 09:34:09,371 [main] INFO  (Database#info():2573) -     parse('DBFluteConfig');
2014-06-27 09:34:09,401 [main] INFO  (Database#info():2573) -     parse('DBFluteInitializer');
2014-06-27 09:34:09,409 [main] INFO  (Database#info():2573) -     parse('DBMetaInstanceHandler');
2014-06-27 09:34:09,429 [main] INFO  (Database#info():2573) -     parse('EntityDefinedCommonColumn');
2014-06-27 09:34:09,434 [main] INFO  (Database#info():2573) -     parse('ImplementedBehaviorSelector');
2014-06-27 09:34:09,440 [main] INFO  (Database#info():2573) -     parse('ImplementedCommonColumnAutoSetupper');
2014-06-27 09:34:09,446 [main] INFO  (Database#info():2573) -     parse('ImplementedInvokerAssistant');
2014-06-27 09:34:09,451 [main] INFO  (Database#info():2573) -     parse('ImplementedSqlClauseCreator');
2014-06-27 09:34:09,455 [main] INFO  (Database#info():2573) - }
2014-06-27 09:34:09,455 [main] INFO  (Database#info():2573) - public void parseContainerConfig() {
2014-06-27 09:34:09,457 [main] INFO  (Database#info():2573) -     parse('../resources/dbflute.dicon')
2014-06-27 09:34:09,464 [main] INFO  (Database#info():2573) - }
2014-06-27 09:34:09,470 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldTableClass() {
2014-06-27 09:34:09,492 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-06-27 09:34:09,493 [main] INFO  (Database#info():2573) - public void parseTableClass() {
2014-06-27 09:34:09,494 [main] INFO  (Database#info():2573) -     parse('follow');
2014-06-27 09:34:09,771 [main] INFO  (Database#info():2573) -     parse('login');
2014-06-27 09:34:09,956 [main] INFO  (Database#info():2573) -     parse('member');
2014-06-27 09:34:10,251 [main] INFO  (Database#info():2573) -     parse('member_security');
2014-06-27 09:34:10,386 [main] INFO  (Database#info():2573) -     parse('member_withdraw');
2014-06-27 09:34:10,515 [main] INFO  (Database#info():2573) -     parse('tweet');
2014-06-27 09:34:10,608 [main] INFO  (Database#info():2573) - }
2014-06-27 09:34:10,609 [main] INFO  (Database#info():2573) -  
2014-06-27 09:34:10,633 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-27 09:34:10,640 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s768ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Generate}
2014-06-27 09:34:11,634 [main] INFO  (DfOutsideSqlTestTask#begin():72) - +------------------------------------------+
2014-06-27 09:34:11,638 [main] INFO  (DfOutsideSqlTestTask#begin():73) - |                                          |
2014-06-27 09:34:11,638 [main] INFO  (DfOutsideSqlTestTask#begin():74) - |              OutsideSqlTest              |
2014-06-27 09:34:11,640 [main] INFO  (DfOutsideSqlTestTask#begin():75) - |                                          |
2014-06-27 09:34:11,641 [main] INFO  (DfOutsideSqlTestTask#begin():76) - +------------------------------------------+
2014-06-27 09:34:11,710 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 09:34:11,711 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 09:34:11,712 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 09:34:11,714 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 09:34:11,765 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-27 09:34:11,771 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s133ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2014-06-27 09:34:12,690 [main] INFO  (DfSql2EntityTask#begin():100) - +------------------------------------------+
2014-06-27 09:34:12,692 [main] INFO  (DfSql2EntityTask#begin():101) - |                                          |
2014-06-27 09:34:12,693 [main] INFO  (DfSql2EntityTask#begin():102) - |                Sql2Entity                |
2014-06-27 09:34:12,694 [main] INFO  (DfSql2EntityTask#begin():103) - |                                          |
2014-06-27 09:34:12,695 [main] INFO  (DfSql2EntityTask#begin():104) - +------------------------------------------+
2014-06-27 09:34:12,752 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 09:34:12,752 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 09:34:12,753 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 09:34:12,754 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 09:34:12,773 [main] INFO  (DfSql2EntityTask#setupControlTemplate():170) - 
2014-06-27 09:34:12,774 [main] INFO  (DfSql2EntityTask#setupControlTemplate():171) - ...Using Java control: om/ControlSql2EntityJava.vm
2014-06-27 09:34:12,782 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-27 09:34:12,833 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-27 09:34:12,979 [main] INFO  (DfSql2EntityTask#initControlContext():301) - 
2014-06-27 09:34:12,980 [main] INFO  (DfSql2EntityTask#initControlContext():302) - ...Preparing generation of customize-entities and parameter-beans
2014-06-27 09:34:12,981 [main] INFO  (DfSql2EntityTask#initControlContext():303) - * * * * * * * * * *
2014-06-27 09:34:12,982 [main] INFO  (DfSql2EntityTask#initControlContext():304) - * CustomizeEntity *
2014-06-27 09:34:12,983 [main] INFO  (DfSql2EntityTask#initControlContext():305) - * * * * * * * * * *
2014-06-27 09:34:12,985 [main] INFO  (DfSql2EntityTask#showParameterBean():879) - * * * * * * * * *
2014-06-27 09:34:12,986 [main] INFO  (DfSql2EntityTask#showParameterBean():880) - * ParameterBean *
2014-06-27 09:34:12,987 [main] INFO  (DfSql2EntityTask#showParameterBean():881) - * * * * * * * * *
2014-06-27 09:34:12,993 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlSql2EntityJava.vm", c);
2014-06-27 09:34:13,089 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1164) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2014-06-27 09:34:13,092 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldCustomizeClass() {
2014-06-27 09:34:13,103 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-06-27 09:34:13,104 [main] INFO  (Database#info():2573) - public void parseCustomizeEntity() {
2014-06-27 09:34:13,107 [main] INFO  (Database#info():2573) - }
2014-06-27 09:34:13,119 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():293) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2014-06-27 09:34:13,128 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-27 09:34:13,134 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s442ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2014-06-27 15:00:16,202 [main] INFO  (DfReplaceSchemaTask#begin():87) - +------------------------------------------+
2014-06-27 15:00:16,207 [main] INFO  (DfReplaceSchemaTask#begin():88) - |                                          |
2014-06-27 15:00:16,207 [main] INFO  (DfReplaceSchemaTask#begin():89) - |              ReplaceSchema               |
2014-06-27 15:00:16,229 [main] INFO  (DfReplaceSchemaTask#begin():97) - |                                          |
2014-06-27 15:00:16,229 [main] INFO  (DfReplaceSchemaTask#begin():98) - +------------------------------------------+
2014-06-27 15:00:16,231 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():329) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2014-06-27 15:00:17,417 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 15:00:17,420 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 15:00:17,421 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 15:00:17,422 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 15:00:17,432 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-27 15:00:17,712 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-27 15:00:17,713 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-27 15:00:17,736 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():207) - 
2014-06-27 15:00:17,737 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():208) - * * * * * * * * * * *
2014-06-27 15:00:17,738 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():209) - *                   *
2014-06-27 15:00:17,739 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():210) - * Initialize Schema *
2014-06-27 15:00:17,741 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():211) - *                   *
2014-06-27 15:00:17,742 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():212) - * * * * * * * * * * *
2014-06-27 15:00:17,761 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-27 15:00:17,762 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-27 15:00:17,763 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-27 15:00:17,820 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table follow
2014-06-27 15:00:17,849 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table login
2014-06-27 15:00:17,888 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_security
2014-06-27 15:00:17,916 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_withdraw
2014-06-27 15:00:17,962 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table tweet
2014-06-27 15:00:17,999 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_1
2014-06-27 15:00:18,026 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table login drop foreign key login_ibfk_1
2014-06-27 15:00:18,037 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_security drop foreign key member_security_ibfk_1
2014-06-27 15:00:18,047 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_withdraw drop foreign key member_withdraw_ibfk_1
2014-06-27 15:00:18,057 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table tweet drop foreign key tweet_ibfk_1
2014-06-27 15:00:18,068 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table follow
2014-06-27 15:00:18,079 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table login
2014-06-27 15:00:18,089 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member
2014-06-27 15:00:18,102 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_security
2014-06-27 15:00:18,122 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_withdraw
2014-06-27 15:00:18,140 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table tweet
2014-06-27 15:00:18,208 [main] INFO  (DfCreateSchemaProcess#createSchema():244) - 
2014-06-27 15:00:18,209 [main] INFO  (DfCreateSchemaProcess#createSchema():245) - * * * * * * * * *
2014-06-27 15:00:18,209 [main] INFO  (DfCreateSchemaProcess#createSchema():246) - *               *
2014-06-27 15:00:18,211 [main] INFO  (DfCreateSchemaProcess#createSchema():247) - * Create Schema *
2014-06-27 15:00:18,212 [main] INFO  (DfCreateSchemaProcess#createSchema():248) - *               *
2014-06-27 15:00:18,213 [main] INFO  (DfCreateSchemaProcess#createSchema():249) - * * * * * * * * *
2014-06-27 15:00:18,219 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-00-system.sql
2014-06-27 15:00:18,223 [main] INFO  (DfReplaceSchemaProperties#checkTargetEnvType():277) - ...Checking envType: ut in [ut]
2014-06-27 15:00:18,224 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:checkEnv(ut)#

-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database twitter
2014-06-27 15:00:18,231 [main] INFO  (DfCreateSchemaProcess$1#dispatch():273) - ...Creating a connection to system
2014-06-27 15:00:18,234 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():514) - ...Creating a connection for additional user: root
2014-06-27 15:00:18,245 [main] INFO  (DfCreateSchemaProcess$1#dispatch():299) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2014-06-27 15:00:18,246 [main] INFO  (DfCreateSchemaProcess$1#dispatch():301) -  -> Can't create database 'twitter'; database exists
2014-06-27 15:00:18,248 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():411) - ...Reviving the user 'system' until the end of this SQL file
2014-06-27 15:00:18,249 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on twitter.*
  to twitter@localhost identified by 'twitter'
2014-06-27 15:00:18,256 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2014-06-27 15:00:18,259 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2014-06-27 15:00:18,260 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-10-basic.sql
2014-06-27 15:00:18,261 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():348) - ...Saying good-bye to the user 'system' again
2014-06-27 15:00:18,262 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():352) - ...Clearing revived users
2014-06-27 15:00:18,264 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():359) - ...Coming back to the main user from the user 'system'
2014-06-27 15:00:18,266 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FOLLOW
(
	FOLLOW_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'フォローID',
	YOU_ID INT(100) NOT NULL UNIQUE COMMENT 'フォローする人のID : 会員のID
',
	ME_ID INT(100) NOT NULL UNIQUE COMMENT 'フォローされる人のID : 会員のID
',
	FOLLOW_DATETIME DATETIME NOT NULL COMMENT 'follow_datetime',
	PRIMARY KEY (FOLLOW_ID)
) COMMENT = 'フォロー'
2014-06-27 15:00:18,318 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE LOGIN
(
	LOGIN_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ログインID : ログインした瞬間のID
',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時',
	PRIMARY KEY (LOGIN_ID)
) COMMENT = 'ログイン'
2014-06-27 15:00:18,371 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER
(
	MEMBER_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員のID
',
	EMAIL_ADDRESS VARCHAR(100) NOT NULL UNIQUE COMMENT 'メールアドレス : 会員のメールアドレス',
	USER_NAME VARCHAR(50) NOT NULL UNIQUE COMMENT '会員ユーザ名 : 会員のユーザ名',
	BIRTHDATE DATE COMMENT '生年月日 : 会員の生年月日',
	PROFILE VARCHAR(200) COMMENT 'プロフィール',
	REGESTER_DATETIME DATETIME NOT NULL COMMENT '登録日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員'
2014-06-27 15:00:18,441 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PASSWORD VARCHAR(50) NOT NULL COMMENT 'パスワード',
	PASSWORD_UPDATE_DATETIME DATETIME COMMENT 'パスワード更新日時',
	PASSWORD_REGESTERATION_DATETIME DATETIME NOT NULL COMMENT 'パスワード登録日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員セキュリティ'
2014-06-27 15:00:18,516 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_WITHDRAW
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	WITHDRAWAL_REASON_ID INT COMMENT '退会理由ID : 会員の退会理由ID',
	WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト',
	WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT 'withdrawal_datetime : 退会日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員退会'
2014-06-27 15:00:18,574 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	TWEET_DATETIME DATETIME NOT NULL COMMENT 'TWEET日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-06-27 15:00:18,643 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FOLLOW
	ADD FOREIGN KEY (ME_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 15:00:18,761 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD FOREIGN KEY (YOU_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 15:00:18,866 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 15:00:18,955 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 15:00:19,055 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_WITHDRAW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 15:00:19,157 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 15:00:19,232 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=12 failure=0
2014-06-27 15:00:19,234 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=14 failure=0 (in 2 files)
2014-06-27 15:00:19,236 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-06-27 15:00:19,315 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-06-27 15:00:19,316 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-06-27 15:00:19,316 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-06-27 15:00:19,318 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-06-27 15:00:19,319 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-06-27 15:00:19,320 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-06-27 15:00:19,344 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-06-27 15:00:19,345 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-06-27 15:00:19,345 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-06-27 15:00:19,635 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-27 15:00:19,636 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-27 15:00:19,636 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-27 15:00:19,701 [main] ERROR (DfDBFluteTaskUtil#logException():161) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'ReplaceSchema'.

[Advice]
Check the exception messages and the stack traces.

[Database Product]
MySQL 5.6.17

[JDBC Driver]
MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
* * * * * * * * * */
org.seasar.dbflute.exception.DfLoadDataRegistrationFailureException: Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Found the no-exist column in your data file.

[Data Directory]
playsql/data/ut/xls

[Data File]
playsql\data\ut\xls\20-member.xls

[Table Name]
MEMBER

[Found Column]
UPDATE_DATETIME
* * * * * * * * * */
	at org.seasar.dbflute.logic.replaceschema.loaddata.impl.dataprop.DfLoadingControlProp.throwLoadingControlNoExistenceColumnFoundException(DfLoadingControlProp.java:152)
	at org.seasar.dbflute.logic.replaceschema.loaddata.impl.dataprop.DfLoadingControlProp.checkColumnDefExistence(DfLoadingControlProp.java:133)
	at org.seasar.dbflute.logic.replaceschema.loaddata.impl.DfAbsractDataWriter.checkColumnDefExistence(DfAbsractDataWriter.java:1108)
	at org.seasar.dbflute.logic.replaceschema.loaddata.impl.DfXlsDataHandlerImpl.checkHeaderColumnIfNeeds(DfXlsDataHandlerImpl.java:310)
	at org.seasar.dbflute.logic.replaceschema.loaddata.impl.DfXlsDataHandlerImpl.doWriteDataTable(DfXlsDataHandlerImpl.java:173)
	at org.seasar.dbflute.logic.replaceschema.loaddata.impl.DfXlsDataHandlerImpl.doWriteDataSet(DfXlsDataHandlerImpl.java:152)
	at org.seasar.dbflute.logic.replaceschema.loaddata.impl.DfXlsDataHandlerImpl.writeSeveralData(DfXlsDataHandlerImpl.java:133)
	at org.seasar.dbflute.logic.replaceschema.process.DfLoadDataProcess.writeDbFromXls(DfLoadDataProcess.java:319)
	at org.seasar.dbflute.logic.replaceschema.process.DfLoadDataProcess.writeDbFromXls(DfLoadDataProcess.java:307)
	at org.seasar.dbflute.logic.replaceschema.process.DfLoadDataProcess.writeDbFromXlsAsLoadingTypeData(DfLoadDataProcess.java:291)
	at org.seasar.dbflute.logic.replaceschema.process.DfLoadDataProcess.execute(DfLoadDataProcess.java:159)
	at org.seasar.dbflute.task.DfReplaceSchemaTask.loadData(DfReplaceSchemaTask.java:274)
	at org.seasar.dbflute.task.DfReplaceSchemaTask.doExecuteCoreProcess(DfReplaceSchemaTask.java:238)
	at org.seasar.dbflute.task.DfReplaceSchemaTask.executeCoreProcess(DfReplaceSchemaTask.java:232)
	at org.seasar.dbflute.task.DfReplaceSchemaTask.processMain(DfReplaceSchemaTask.java:225)
	at org.seasar.dbflute.task.DfReplaceSchemaTask.doExecute(DfReplaceSchemaTask.java:153)
	at org.seasar.dbflute.task.bs.DfAbstractTexenTask$1.callActualExecute(DfAbstractTexenTask.java:130)
	at org.seasar.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:184)
	at org.seasar.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:77)
	at org.seasar.dbflute.task.bs.DfAbstractTexenTask.execute(DfAbstractTexenTask.java:152)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:105)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
2014-06-27 15:00:19,821 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-27 15:00:19,826 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m03s620ms *Abort

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=14 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=0
  x (failed: Look at the exception message)
    * * * * * *
    * Failure *
    * * * * * *
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-06-27 15:01:37,190 [main] INFO  (DfReplaceSchemaTask#begin():87) - +------------------------------------------+
2014-06-27 15:01:37,193 [main] INFO  (DfReplaceSchemaTask#begin():88) - |                                          |
2014-06-27 15:01:37,194 [main] INFO  (DfReplaceSchemaTask#begin():89) - |              ReplaceSchema               |
2014-06-27 15:01:37,214 [main] INFO  (DfReplaceSchemaTask#begin():97) - |                                          |
2014-06-27 15:01:37,214 [main] INFO  (DfReplaceSchemaTask#begin():98) - +------------------------------------------+
2014-06-27 15:01:37,216 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():329) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2014-06-27 15:01:38,262 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 15:01:38,266 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 15:01:38,272 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 15:01:38,276 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 15:01:38,295 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-27 15:01:38,517 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-27 15:01:38,517 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-27 15:01:38,536 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():207) - 
2014-06-27 15:01:38,537 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():208) - * * * * * * * * * * *
2014-06-27 15:01:38,538 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():209) - *                   *
2014-06-27 15:01:38,539 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():210) - * Initialize Schema *
2014-06-27 15:01:38,541 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():211) - *                   *
2014-06-27 15:01:38,542 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():212) - * * * * * * * * * * *
2014-06-27 15:01:38,560 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-27 15:01:38,561 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-27 15:01:38,562 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-27 15:01:38,611 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table follow
2014-06-27 15:01:38,644 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table login
2014-06-27 15:01:38,680 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_security
2014-06-27 15:01:38,728 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_withdraw
2014-06-27 15:01:38,766 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table tweet
2014-06-27 15:01:38,799 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_1
2014-06-27 15:01:38,820 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_2
2014-06-27 15:01:38,832 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table login drop foreign key login_ibfk_1
2014-06-27 15:01:38,848 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_security drop foreign key member_security_ibfk_1
2014-06-27 15:01:38,858 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_withdraw drop foreign key member_withdraw_ibfk_1
2014-06-27 15:01:38,868 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table tweet drop foreign key tweet_ibfk_1
2014-06-27 15:01:38,883 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table follow
2014-06-27 15:01:38,894 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table login
2014-06-27 15:01:38,904 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member
2014-06-27 15:01:38,915 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_security
2014-06-27 15:01:38,925 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_withdraw
2014-06-27 15:01:38,937 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table tweet
2014-06-27 15:01:38,980 [main] INFO  (DfCreateSchemaProcess#createSchema():244) - 
2014-06-27 15:01:38,980 [main] INFO  (DfCreateSchemaProcess#createSchema():245) - * * * * * * * * *
2014-06-27 15:01:38,981 [main] INFO  (DfCreateSchemaProcess#createSchema():246) - *               *
2014-06-27 15:01:38,983 [main] INFO  (DfCreateSchemaProcess#createSchema():247) - * Create Schema *
2014-06-27 15:01:38,984 [main] INFO  (DfCreateSchemaProcess#createSchema():248) - *               *
2014-06-27 15:01:38,985 [main] INFO  (DfCreateSchemaProcess#createSchema():249) - * * * * * * * * *
2014-06-27 15:01:38,991 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-00-system.sql
2014-06-27 15:01:38,994 [main] INFO  (DfReplaceSchemaProperties#checkTargetEnvType():277) - ...Checking envType: ut in [ut]
2014-06-27 15:01:38,995 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:checkEnv(ut)#

-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database twitter
2014-06-27 15:01:39,003 [main] INFO  (DfCreateSchemaProcess$1#dispatch():273) - ...Creating a connection to system
2014-06-27 15:01:39,005 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():514) - ...Creating a connection for additional user: root
2014-06-27 15:01:39,018 [main] INFO  (DfCreateSchemaProcess$1#dispatch():299) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2014-06-27 15:01:39,019 [main] INFO  (DfCreateSchemaProcess$1#dispatch():301) -  -> Can't create database 'twitter'; database exists
2014-06-27 15:01:39,021 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():411) - ...Reviving the user 'system' until the end of this SQL file
2014-06-27 15:01:39,022 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on twitter.*
  to twitter@localhost identified by 'twitter'
2014-06-27 15:01:39,029 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2014-06-27 15:01:39,032 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2014-06-27 15:01:39,033 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-10-basic.sql
2014-06-27 15:01:39,034 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():348) - ...Saying good-bye to the user 'system' again
2014-06-27 15:01:39,035 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():352) - ...Clearing revived users
2014-06-27 15:01:39,037 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():359) - ...Coming back to the main user from the user 'system'
2014-06-27 15:01:39,039 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FOLLOW
(
	FOLLOW_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'フォローID',
	YOU_ID INT(100) NOT NULL UNIQUE COMMENT 'フォローする人のID : 会員のID
',
	ME_ID INT(100) NOT NULL UNIQUE COMMENT 'フォローされる人のID : 会員のID
',
	FOLLOW_DATETIME DATETIME NOT NULL COMMENT 'follow_datetime',
	PRIMARY KEY (FOLLOW_ID)
) COMMENT = 'フォロー'
2014-06-27 15:01:39,093 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE LOGIN
(
	LOGIN_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ログインID : ログインした瞬間のID
',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時',
	PRIMARY KEY (LOGIN_ID)
) COMMENT = 'ログイン'
2014-06-27 15:01:39,153 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER
(
	MEMBER_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員のID
',
	EMAIL_ADDRESS VARCHAR(100) NOT NULL UNIQUE COMMENT 'メールアドレス : 会員のメールアドレス',
	USER_NAME VARCHAR(50) NOT NULL UNIQUE COMMENT '会員ユーザ名 : 会員のユーザ名',
	BIRTHDATE DATE COMMENT '生年月日 : 会員の生年月日',
	PROFILE VARCHAR(200) COMMENT 'プロフィール',
	REGESTER_DATETIME DATETIME NOT NULL COMMENT '登録日時',
	UPDATE_DATETIME DATETIME COMMENT '更新日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員'
2014-06-27 15:01:39,210 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PASSWORD VARCHAR(50) NOT NULL COMMENT 'パスワード',
	PASSWORD_UPDATE_DATETIME DATETIME COMMENT 'パスワード更新日時',
	PASSWORD_REGESTERATION_DATETIME DATETIME NOT NULL COMMENT 'パスワード登録日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員セキュリティ'
2014-06-27 15:01:39,251 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_WITHDRAW
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	WITHDRAWAL_REASON_ID INT COMMENT '退会理由ID : 会員の退会理由ID',
	WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト',
	WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT 'withdrawal_datetime : 退会日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員退会'
2014-06-27 15:01:39,285 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	TWEET_DATETIME DATETIME NOT NULL COMMENT 'TWEET日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-06-27 15:01:39,323 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FOLLOW
	ADD FOREIGN KEY (ME_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 15:01:39,388 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD FOREIGN KEY (YOU_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 15:01:39,491 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 15:01:39,589 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 15:01:39,651 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_WITHDRAW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 15:01:39,736 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 15:01:39,833 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=12 failure=0
2014-06-27 15:01:39,834 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=14 failure=0 (in 2 files)
2014-06-27 15:01:39,834 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-06-27 15:01:39,870 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-06-27 15:01:39,871 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-06-27 15:01:39,872 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-06-27 15:01:39,873 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-06-27 15:01:39,874 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-06-27 15:01:39,876 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-06-27 15:01:39,899 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-06-27 15:01:39,900 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-06-27 15:01:39,901 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-06-27 15:01:40,200 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-27 15:01:40,201 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-27 15:01:40,201 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-27 15:01:40,266 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{1, Stojkovic@gmail.com, Pixy, 1965/03/03, 2014-06-24 00:00:00.0, 2014-06-27 15:01:40.265}
2014-06-27 15:01:40,318 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{2, Savicevic@gmail.com, Genius, 1966/09/15, 2014-06-25 00:00:00.0, 2014-06-27 15:01:40.318}
2014-06-27 15:01:40,320 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{3, Mijatovic@gmail.com, Mijato, null, 2014-06-26 00:00:00.0, 2014-06-27 15:01:40.32}
2014-06-27 15:01:40,321 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{4, Stankovic@gmail.com, Stanko, 1978/09/11, 2014-06-27 00:00:00.0, 2014-06-27 15:01:40.321}
2014-06-27 15:01:40,322 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{5, Milosevic@gmail.com, Milose, null, 2014-06-28 00:00:00.0, 2014-06-27 15:01:40.322}
2014-06-27 15:01:40,323 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{6, Mihajlovic@gmail.com, FreeKick, 1969/02/20, 2014-06-29 00:00:00.0, 2014-06-27 15:01:40.323}
2014-06-27 15:01:40,324 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{7, アカギ@gmail.com, Akagi, null, 2014-06-30 00:00:00.0, 2014-06-27 15:01:40.324}
2014-06-27 15:01:40,327 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{8, Kezman@gmial.com, RedCard, null, 2014-07-01 00:00:00.0, 2014-06-27 15:01:40.327}
2014-06-27 15:01:40,328 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{9, Maslovar@gmail.com, JEFUnited, 1967/02/20, 2014-07-02 00:00:00.0, 2014-06-27 15:01:40.328}
2014-06-27 15:01:40,330 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{10, 諸葛亮孔明@gmail.com, ShokatsuGoGo, null, 2014-07-03 00:00:00.0, 2014-06-27 15:01:40.33}
2014-06-27 15:01:40,332 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{11, Boban@gmail.com, Boban, 1968/10/08, 2014-07-04 00:00:00.0, 2014-06-27 15:01:40.332}
2014-06-27 15:01:40,334 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{12, Suker@gmail.com, Suker, 1968/01/01, 2014-07-05 00:00:00.0, 2014-06-27 15:01:40.334}
2014-06-27 15:01:40,336 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{13, Jarni@gmail.com, Jarni, 1968/10/26, 2014-07-06 00:00:00.0, 2014-06-27 15:01:40.336}
2014-06-27 15:01:40,338 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{14, Boksic@gmail.com, Boksic, 1970/01/21, 2014-07-07 00:00:00.0, 2014-06-27 15:01:40.338}
2014-06-27 15:01:40,340 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{15, Prosinecki@gmail.com, Prosinecki, 1969/01/12, 2014-07-08 00:00:00.0, 2014-06-27 15:01:40.34}
2014-06-27 15:01:40,341 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{16, RobeltKovac@gmail.com, RobeltKovac, null, 2014-07-09 00:00:00.0, 2014-06-27 15:01:40.341}
2014-06-27 15:01:40,343 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{17, NikoKovac@gmail.com, NikoKovac, null, 2014-07-10 00:00:00.0, 2014-06-27 15:01:40.343}
2014-06-27 15:01:40,345 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{18, Jovanovic@gmail.com, Jovano, 1981/04/18, 2014-07-11 00:00:00.0, 2014-06-27 15:01:40.345}
2014-06-27 15:01:40,346 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{19, Milko@gmail.com, Milko, 1974/09/10, 2014-07-12 00:00:00.0, 2014-06-27 15:01:40.346}
2014-06-27 15:01:40,348 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{20, 諸葛瑾子瑜@gmail.com, ShokatsuKinKin, null, 2014-07-13 00:00:00.0, 2014-06-27 15:01:40.348}
2014-06-27 15:01:40,360 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 20 rows are loaded to MEMBER
2014-06-27 15:01:40,363 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 3, 2006/12/24 23:59:59}
2014-06-27 15:01:40,365 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 6, 2007/11/11 16:16:16}
2014-06-27 15:01:40,366 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{3, 1, 2006/12/23 22:56:29}
2014-06-27 15:01:40,367 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{4, 6, 2007/11/01 02:13:00}
2014-06-27 15:01:40,368 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{5, 7, 2006/05/24 23:12:59}
2014-06-27 15:01:40,369 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{6, 6, 2005/11/11 16:32:01}
2014-06-27 15:01:40,370 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{7, 6, 2006/01/28 23:59:59}
2014-06-27 15:01:40,372 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{8, 6, 2007/11/09 16:23:00}
2014-06-27 15:01:40,373 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{9, 8, 2006/12/22 23:59:59}
2014-06-27 15:01:40,374 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{10, 6, 2007/11/11 09:01:00}
2014-06-27 15:01:40,376 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{11, 1, 2006/12/23 23:59:59}
2014-06-27 15:01:40,377 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{12, 9, 2007/11/15 12:43:00}
2014-06-27 15:01:40,379 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{13, 10, 2006/12/24 23:59:59}
2014-06-27 15:01:40,380 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{14, 6, 2007/04/01 16:23:01}
2014-06-27 15:01:40,382 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{15, 7, 2006/12/24 23:59:20}
2014-06-27 15:01:40,383 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{16, 6, 2007/05/01 12:23:02}
2014-06-27 15:01:40,384 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{17, 7, 2006/12/24 23:59:21}
2014-06-27 15:01:40,386 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{18, 6, 2007/06/11 17:23:03}
2014-06-27 15:01:40,387 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{19, 4, 2006/12/24 23:59:22}
2014-06-27 15:01:40,388 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{20, 3, 2007/11/01 16:12:04}
2014-06-27 15:01:40,390 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{21, 11, 2006/12/24 23:59:23}
2014-06-27 15:01:40,391 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{22, 1, 2007/11/01 16:23:05}
2014-06-27 15:01:40,392 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{23, 9, 2006/12/24 23:59:24}
2014-06-27 15:01:40,393 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{24, 8, 2007/11/01 16:23:06}
2014-06-27 15:01:40,395 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{25, 7, 2007/12/24 11:59:25}
2014-06-27 15:01:40,397 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{26, 6, 2007/06/21 01:23:57}
2014-06-27 15:01:40,398 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{27, 5, 2006/12/24 23:59:26}
2014-06-27 15:01:40,399 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{28, 3, 2007/11/01 16:23:08}
2014-06-27 15:01:40,400 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{29, 3, 2006/12/24 23:59:27}
2014-06-27 15:01:40,402 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{30, 10, 2007/11/01 16:23:09}
2014-06-27 15:01:40,403 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-27 15:01:40,418 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 30 rows are loaded to LOGIN
2014-06-27 15:01:40,419 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014/06/23, null}
2014-06-27 15:01:40,421 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014/06/24, null}
2014-06-27 15:01:40,422 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{3, ccc, 2014/06/25, 2014/06/25}
2014-06-27 15:01:40,423 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{4, ddd, 2014/06/26, null}
2014-06-27 15:01:40,424 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{5, eee2, 2014/06/27, null}
2014-06-27 15:01:40,425 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{6, fff, 2014/06/28, null}
2014-06-27 15:01:40,427 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{7, ggg3, 2014/06/29, 2014/06/25}
2014-06-27 15:01:40,428 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{8, hhh555, 2014/06/30, null}
2014-06-27 15:01:40,430 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{9, iii, 2014/07/01, 2014/06/25}
2014-06-27 15:01:40,431 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{10, jjj, 2014/07/02, null}
2014-06-27 15:01:40,433 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-27 15:01:40,444 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to MEMBER_SECURITY
2014-06-27 15:01:40,446 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 2013-06-13 00:00:00.0}
2014-06-27 15:01:40,448 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{2, 2345, 清君頼りになるー！, 2013-06-14 00:00:00.0}
2014-06-27 15:01:40,450 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{3, 3456, GLD, 2013-06-15 00:00:00.0}
2014-06-27 15:01:40,451 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{4, 875, BRZ, 2013-06-16 00:00:00.0}
2014-06-27 15:01:40,452 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{5, 1111, BRZ, 2013-06-17 00:00:00.0}
2014-06-27 15:01:40,453 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{6, 5422, SIL, 2013-06-18 00:00:00.0}
2014-06-27 15:01:40,455 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{7, 24678, SIL, 2013-06-19 00:00:00.0}
2014-06-27 15:01:40,456 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{8, 234, SIL, 2013-06-20 00:00:00.0}
2014-06-27 15:01:40,457 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{9, 3, SIL, 2013-06-21 00:00:00.0}
2014-06-27 15:01:40,459 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{10, 98765, PLT, 2013-06-22 00:00:00.0}
2014-06-27 15:01:40,460 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-27 15:01:40,469 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to TWEET
2014-06-27 15:01:40,471 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{3, 1, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123}
2014-06-27 15:01:40,473 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{6, 1, null, 2007/11/11 16:00:00.456}
2014-06-27 15:01:40,475 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{13, 2, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789}
2014-06-27 15:01:40,478 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{16, 3, コバチが２人いるため, 2007/11/13 16:00:00.456}
2014-06-27 15:01:40,487 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 4 rows are loaded to MEMBER_WITHDRAW
2014-06-27 15:01:40,489 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - FOLLOW:{2, 1, 1, 2014-06-21 00:00:00.0}
2014-06-27 15:01:40,504 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 1 rows are loaded to FOLLOW
2014-06-27 15:01:40,509 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():379) - ...Checking implicit set of classification
2014-06-27 15:01:40,529 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - 
2014-06-27 15:01:40,530 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * * * * * * * **
2014-06-27 15:01:40,530 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2014-06-27 15:01:40,532 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * Take Finally *
2014-06-27 15:01:40,533 [main] INFO  (DfTakeFinallyProcess#takeFinally():225) - *              *
2014-06-27 15:01:40,534 [main] INFO  (DfTakeFinallyProcess#takeFinally():226) - * * * * * * * **
2014-06-27 15:01:40,547 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: take-finally.sql
2014-06-27 15:01:40,549 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2014-06-27 15:01:40,549 [main] INFO  (DfSqlFileFireMan#fire():90) - {Take Finally}: success=0 failure=0 (in 1 files)
2014-06-27 15:01:40,552 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-27 15:01:40,558 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m03s362ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=14 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=1
  (ut)
  o 20-member.xls

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-06-27 15:01:41,501 [main] INFO  (TorqueJDBCTransformTask#begin():100) - +------------------------------------------+
2014-06-27 15:01:41,503 [main] INFO  (TorqueJDBCTransformTask#begin():101) - |                                          |
2014-06-27 15:01:41,504 [main] INFO  (TorqueJDBCTransformTask#begin():102) - |                   JDBC                   |
2014-06-27 15:01:41,504 [main] INFO  (TorqueJDBCTransformTask#begin():103) - |                                          |
2014-06-27 15:01:41,506 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2014-06-27 15:01:41,562 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 15:01:41,563 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 15:01:41,563 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 15:01:41,565 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 15:01:41,615 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2014-06-27 15:01:41,615 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2014-06-27 15:01:41,616 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1469) - ...Loading previous schema (schema diff process)
2014-06-27 15:01:41,628 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-27 15:01:41,701 [main] INFO  (DfSchemaXmlSerializer#generateXML():361) - ...Getting DB connection
2014-06-27 15:01:41,706 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-27 15:01:41,949 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-27 15:01:41,950 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-27 15:01:41,951 [main] INFO  (DfSchemaXmlSerializer#generateXML():364) - ...Getting DB meta data
2014-06-27 15:01:41,954 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-27 15:01:41,954 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-27 15:01:41,955 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-27 15:01:41,966 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2014-06-27 15:01:41,969 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2014-06-27 15:01:41,983 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - 
2014-06-27 15:01:41,984 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2014-06-27 15:01:41,984 [main] INFO  (DfSchemaXmlSerializer#processTable():423) - $ [Table List]
2014-06-27 15:01:41,986 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.follow(TABLE) // フォロー
2014-06-27 15:01:42,026 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.login(TABLE) // ログイン
2014-06-27 15:01:42,041 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member(TABLE) // 会員
2014-06-27 15:01:42,058 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_security(TABLE) // 会員セキュリティ
2014-06-27 15:01:42,072 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_withdraw(TABLE) // 会員退会
2014-06-27 15:01:42,087 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.tweet(TABLE) // TWEET
2014-06-27 15:01:42,101 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 
2014-06-27 15:01:42,101 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ [Table Count]
2014-06-27 15:01:42,102 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ 6
2014-06-27 15:01:42,104 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - $ = = = = = = = = = =/
2014-06-27 15:01:42,105 [main] INFO  (DfSchemaXmlSerializer#processTable():439) - 
2014-06-27 15:01:42,109 [main] INFO  (DfSchemaXmlSerializer#processSequence():799) - ...Getting sequences
2014-06-27 15:01:42,115 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2014-06-27 15:01:42,116 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-twitter.xml
2014-06-27 15:01:42,117 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2014-06-27 15:01:42,133 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1487) - ...Loading next schema (schema diff process)
2014-06-27 15:01:42,136 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-27 15:01:42,179 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1492) -  -> different from previous (schema diff)
2014-06-27 15:01:42,182 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1494) - ...Serializing schema-diff:
2014-06-27 15:01:42,182 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1495) -   filePath = ./schema/project-history-twitter.diffmap
2014-06-27 15:01:42,216 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-27 15:01:42,222 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s717ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2014-06-27 15:01:43,176 [main] INFO  (TorqueDocumentationTask#begin():171) - +------------------------------------------+
2014-06-27 15:01:43,180 [main] INFO  (TorqueDocumentationTask#begin():172) - |                                          |
2014-06-27 15:01:43,180 [main] INFO  (TorqueDocumentationTask#begin():173) - |                   Doc                    |
2014-06-27 15:01:43,180 [main] INFO  (TorqueDocumentationTask#begin():181) - |                                          |
2014-06-27 15:01:43,182 [main] INFO  (TorqueDocumentationTask#begin():182) - +------------------------------------------+
2014-06-27 15:01:43,229 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 15:01:43,230 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 15:01:43,230 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 15:01:43,232 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 15:01:43,235 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():242) - 
2014-06-27 15:01:43,236 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():243) - * * * * * * * * * * *
2014-06-27 15:01:43,237 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():244) - *                   *
2014-06-27 15:01:43,238 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():245) - *    Schema HTML    *
2014-06-27 15:01:43,239 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - *                   *
2014-06-27 15:01:43,240 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2014-06-27 15:01:43,413 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-27 15:01:43,475 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("doc/ControlDocument.vm", c);
2014-06-27 15:01:43,549 [main] INFO  (Database#doEnableDocumentOutputDirectory():1180) - ...Setting up documentOutputDirectory: ./output/doc
2014-06-27 15:01:43,558 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-27 15:01:43,559 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-27 15:01:43,562 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-27 15:01:43,564 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-27 15:01:43,564 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-27 15:01:43,567 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-27 15:01:43,569 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-27 15:01:43,570 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-27 15:01:43,573 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-27 15:01:43,582 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():150) - ...Loading schema history
2014-06-27 15:01:43,635 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():154) -  -> found history: count=14
2014-06-27 15:01:43,853 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-27 15:01:43,877 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s697ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Doc}
2014-06-27 15:01:46,683 [main] INFO  (TorqueDataModelTask#begin():105) - +------------------------------------------+
2014-06-27 15:01:46,686 [main] INFO  (TorqueDataModelTask#begin():106) - |                                          |
2014-06-27 15:01:46,686 [main] INFO  (TorqueDataModelTask#begin():107) - |                 Generate                 |
2014-06-27 15:01:46,687 [main] INFO  (TorqueDataModelTask#begin():108) - |                                          |
2014-06-27 15:01:46,689 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2014-06-27 15:01:46,728 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 15:01:46,729 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 15:01:46,730 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 15:01:46,732 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 15:01:46,751 [main] INFO  (TorqueDataModelTask#setupControlTemplate():160) - 
2014-06-27 15:01:46,752 [main] INFO  (TorqueDataModelTask#setupControlTemplate():161) - ...Using Java control: om/ControlGenerateJava.vm
2014-06-27 15:01:46,896 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-27 15:01:46,935 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlGenerateJava.vm", c);
2014-06-27 15:01:47,089 [main] INFO  (Database#doEnableGenerateOutputDirectory():1148) - ...Setting up generateOutputDirectory: ../src/main/java
2014-06-27 15:01:47,096 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-27 15:01:47,096 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-27 15:01:47,100 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-27 15:01:47,101 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-27 15:01:47,102 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-27 15:01:47,105 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-27 15:01:47,108 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-27 15:01:47,109 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-27 15:01:47,113 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-27 15:01:47,130 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - /=============================
2014-06-27 15:01:47,130 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():60) - ...Initializing include query.
2014-06-27 15:01:47,131 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - String
2014-06-27 15:01:47,133 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Number
2014-06-27 15:01:47,134 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Date
2014-06-27 15:01:47,135 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotEqual -> []
2014-06-27 15:01:47,136 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   InScope -> []
2014-06-27 15:01:47,138 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotInScope -> []
2014-06-27 15:01:47,139 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - OrderBy
2014-06-27 15:01:47,141 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():62) - ========/
2014-06-27 15:01:47,161 [main] INFO  (Database#info():2573) - public void parseAllCommon() {
2014-06-27 15:01:47,163 [main] INFO  (Database#info():2573) -     parse('DBCurrent');
2014-06-27 15:01:47,170 [main] INFO  (Database#info():2573) -     parse('DBFluteConfig');
2014-06-27 15:01:47,191 [main] INFO  (Database#info():2573) -     parse('DBFluteInitializer');
2014-06-27 15:01:47,197 [main] INFO  (Database#info():2573) -     parse('DBMetaInstanceHandler');
2014-06-27 15:01:47,214 [main] INFO  (Database#info():2573) -     parse('EntityDefinedCommonColumn');
2014-06-27 15:01:47,219 [main] INFO  (Database#info():2573) -     parse('ImplementedBehaviorSelector');
2014-06-27 15:01:47,224 [main] INFO  (Database#info():2573) -     parse('ImplementedCommonColumnAutoSetupper');
2014-06-27 15:01:47,231 [main] INFO  (Database#info():2573) -     parse('ImplementedInvokerAssistant');
2014-06-27 15:01:47,237 [main] INFO  (Database#info():2573) -     parse('ImplementedSqlClauseCreator');
2014-06-27 15:01:47,241 [main] INFO  (Database#info():2573) - }
2014-06-27 15:01:47,242 [main] INFO  (Database#info():2573) - public void parseContainerConfig() {
2014-06-27 15:01:47,243 [main] INFO  (Database#info():2573) -     parse('../resources/dbflute.dicon')
2014-06-27 15:01:47,252 [main] INFO  (Database#info():2573) - }
2014-06-27 15:01:47,257 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldTableClass() {
2014-06-27 15:01:47,278 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-06-27 15:01:47,279 [main] INFO  (Database#info():2573) - public void parseTableClass() {
2014-06-27 15:01:47,280 [main] INFO  (Database#info():2573) -     parse('follow');
2014-06-27 15:01:47,569 [main] INFO  (Database#info():2573) -     parse('login');
2014-06-27 15:01:47,746 [main] INFO  (Database#info():2573) -     parse('member');
2014-06-27 15:01:48,047 [main] INFO  (Database#info():2573) -     parse('member_security');
2014-06-27 15:01:48,178 [main] INFO  (Database#info():2573) -     parse('member_withdraw');
2014-06-27 15:01:48,309 [main] INFO  (Database#info():2573) -     parse('tweet');
2014-06-27 15:01:48,403 [main] INFO  (Database#info():2573) - }
2014-06-27 15:01:48,404 [main] INFO  (Database#info():2573) -  
2014-06-27 15:01:48,446 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-27 15:01:48,453 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s767ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Generate}
2014-06-27 15:01:49,522 [main] INFO  (DfOutsideSqlTestTask#begin():72) - +------------------------------------------+
2014-06-27 15:01:49,525 [main] INFO  (DfOutsideSqlTestTask#begin():73) - |                                          |
2014-06-27 15:01:49,525 [main] INFO  (DfOutsideSqlTestTask#begin():74) - |              OutsideSqlTest              |
2014-06-27 15:01:49,526 [main] INFO  (DfOutsideSqlTestTask#begin():75) - |                                          |
2014-06-27 15:01:49,527 [main] INFO  (DfOutsideSqlTestTask#begin():76) - +------------------------------------------+
2014-06-27 15:01:49,571 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 15:01:49,571 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 15:01:49,572 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 15:01:49,574 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 15:01:49,613 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-27 15:01:49,618 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s092ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2014-06-27 15:01:50,555 [main] INFO  (DfSql2EntityTask#begin():100) - +------------------------------------------+
2014-06-27 15:01:50,558 [main] INFO  (DfSql2EntityTask#begin():101) - |                                          |
2014-06-27 15:01:50,559 [main] INFO  (DfSql2EntityTask#begin():102) - |                Sql2Entity                |
2014-06-27 15:01:50,560 [main] INFO  (DfSql2EntityTask#begin():103) - |                                          |
2014-06-27 15:01:50,561 [main] INFO  (DfSql2EntityTask#begin():104) - +------------------------------------------+
2014-06-27 15:01:50,615 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 15:01:50,615 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 15:01:50,616 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 15:01:50,617 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 15:01:50,634 [main] INFO  (DfSql2EntityTask#setupControlTemplate():170) - 
2014-06-27 15:01:50,635 [main] INFO  (DfSql2EntityTask#setupControlTemplate():171) - ...Using Java control: om/ControlSql2EntityJava.vm
2014-06-27 15:01:50,643 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-27 15:01:50,695 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-27 15:01:50,843 [main] INFO  (DfSql2EntityTask#initControlContext():301) - 
2014-06-27 15:01:50,844 [main] INFO  (DfSql2EntityTask#initControlContext():302) - ...Preparing generation of customize-entities and parameter-beans
2014-06-27 15:01:50,844 [main] INFO  (DfSql2EntityTask#initControlContext():303) - * * * * * * * * * *
2014-06-27 15:01:50,846 [main] INFO  (DfSql2EntityTask#initControlContext():304) - * CustomizeEntity *
2014-06-27 15:01:50,847 [main] INFO  (DfSql2EntityTask#initControlContext():305) - * * * * * * * * * *
2014-06-27 15:01:50,849 [main] INFO  (DfSql2EntityTask#showParameterBean():879) - * * * * * * * * *
2014-06-27 15:01:50,850 [main] INFO  (DfSql2EntityTask#showParameterBean():880) - * ParameterBean *
2014-06-27 15:01:50,851 [main] INFO  (DfSql2EntityTask#showParameterBean():881) - * * * * * * * * *
2014-06-27 15:01:50,857 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlSql2EntityJava.vm", c);
2014-06-27 15:01:50,958 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1164) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2014-06-27 15:01:50,961 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldCustomizeClass() {
2014-06-27 15:01:50,973 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-06-27 15:01:50,974 [main] INFO  (Database#info():2573) - public void parseCustomizeEntity() {
2014-06-27 15:01:50,977 [main] INFO  (Database#info():2573) - }
2014-06-27 15:01:50,991 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():293) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2014-06-27 15:01:50,999 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-27 15:01:51,006 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s447ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2014-06-27 16:35:22,695 [main] INFO  (DfReplaceSchemaTask#begin():87) - +------------------------------------------+
2014-06-27 16:35:22,698 [main] INFO  (DfReplaceSchemaTask#begin():88) - |                                          |
2014-06-27 16:35:22,698 [main] INFO  (DfReplaceSchemaTask#begin():89) - |              ReplaceSchema               |
2014-06-27 16:35:22,718 [main] INFO  (DfReplaceSchemaTask#begin():97) - |                                          |
2014-06-27 16:35:22,718 [main] INFO  (DfReplaceSchemaTask#begin():98) - +------------------------------------------+
2014-06-27 16:35:22,721 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():329) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2014-06-27 16:35:24,460 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 16:35:24,461 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 16:35:24,463 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 16:35:24,464 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 16:35:24,478 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-27 16:35:24,712 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-27 16:35:24,713 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-27 16:35:24,733 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():207) - 
2014-06-27 16:35:24,734 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():208) - * * * * * * * * * * *
2014-06-27 16:35:24,735 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():209) - *                   *
2014-06-27 16:35:24,736 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():210) - * Initialize Schema *
2014-06-27 16:35:24,738 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():211) - *                   *
2014-06-27 16:35:24,739 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():212) - * * * * * * * * * * *
2014-06-27 16:35:24,757 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-27 16:35:24,758 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-27 16:35:24,759 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-27 16:35:24,822 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table follow
2014-06-27 16:35:24,861 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table login
2014-06-27 16:35:24,903 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_security
2014-06-27 16:35:24,937 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_withdraw
2014-06-27 16:35:24,985 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table tweet
2014-06-27 16:35:25,022 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_1
2014-06-27 16:35:25,046 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_2
2014-06-27 16:35:25,056 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table login drop foreign key login_ibfk_1
2014-06-27 16:35:25,072 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_security drop foreign key member_security_ibfk_1
2014-06-27 16:35:25,082 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_withdraw drop foreign key member_withdraw_ibfk_1
2014-06-27 16:35:25,100 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table tweet drop foreign key tweet_ibfk_1
2014-06-27 16:35:25,126 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table follow
2014-06-27 16:35:25,151 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table login
2014-06-27 16:35:25,172 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member
2014-06-27 16:35:25,187 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_security
2014-06-27 16:35:25,200 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_withdraw
2014-06-27 16:35:25,214 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table tweet
2014-06-27 16:35:25,285 [main] INFO  (DfCreateSchemaProcess#createSchema():244) - 
2014-06-27 16:35:25,286 [main] INFO  (DfCreateSchemaProcess#createSchema():245) - * * * * * * * * *
2014-06-27 16:35:25,287 [main] INFO  (DfCreateSchemaProcess#createSchema():246) - *               *
2014-06-27 16:35:25,289 [main] INFO  (DfCreateSchemaProcess#createSchema():247) - * Create Schema *
2014-06-27 16:35:25,290 [main] INFO  (DfCreateSchemaProcess#createSchema():248) - *               *
2014-06-27 16:35:25,292 [main] INFO  (DfCreateSchemaProcess#createSchema():249) - * * * * * * * * *
2014-06-27 16:35:25,298 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-00-system.sql
2014-06-27 16:35:25,301 [main] INFO  (DfReplaceSchemaProperties#checkTargetEnvType():277) - ...Checking envType: ut in [ut]
2014-06-27 16:35:25,303 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:checkEnv(ut)#

-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database twitter
2014-06-27 16:35:25,311 [main] INFO  (DfCreateSchemaProcess$1#dispatch():273) - ...Creating a connection to system
2014-06-27 16:35:25,313 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():514) - ...Creating a connection for additional user: root
2014-06-27 16:35:25,328 [main] INFO  (DfCreateSchemaProcess$1#dispatch():299) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2014-06-27 16:35:25,330 [main] INFO  (DfCreateSchemaProcess$1#dispatch():301) -  -> Can't create database 'twitter'; database exists
2014-06-27 16:35:25,332 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():411) - ...Reviving the user 'system' until the end of this SQL file
2014-06-27 16:35:25,333 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on twitter.*
  to twitter@localhost identified by 'twitter'
2014-06-27 16:35:25,340 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2014-06-27 16:35:25,344 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2014-06-27 16:35:25,345 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-10-basic.sql
2014-06-27 16:35:25,346 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():348) - ...Saying good-bye to the user 'system' again
2014-06-27 16:35:25,347 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():352) - ...Clearing revived users
2014-06-27 16:35:25,348 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():359) - ...Coming back to the main user from the user 'system'
2014-06-27 16:35:25,352 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FOLLOW
(
	FOLLOW_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'フォローID',
	YOU_ID INT(100) NOT NULL COMMENT 'フォローする人のID : 会員のID
',
	ME_ID INT(100) NOT NULL COMMENT 'フォローされる人のID : 会員のID
',
	FOLLOW_DATETIME DATETIME NOT NULL COMMENT 'follow_datetime',
	PRIMARY KEY (FOLLOW_ID)
) COMMENT = 'フォロー'
2014-06-27 16:35:25,414 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE LOGIN
(
	LOGIN_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ログインID : ログインした瞬間のID
',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時',
	PRIMARY KEY (LOGIN_ID)
) COMMENT = 'ログイン'
2014-06-27 16:35:25,477 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER
(
	MEMBER_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員のID
',
	EMAIL_ADDRESS VARCHAR(100) NOT NULL UNIQUE COMMENT 'メールアドレス : 会員のメールアドレス',
	USER_NAME VARCHAR(50) NOT NULL UNIQUE COMMENT '会員ユーザ名 : 会員のユーザ名',
	BIRTHDATE DATE COMMENT '生年月日 : 会員の生年月日',
	PROFILE VARCHAR(200) COMMENT 'プロフィール',
	REGESTER_DATETIME DATETIME NOT NULL COMMENT '登録日時',
	UPDATE_DATETIME DATETIME COMMENT '更新日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員'
2014-06-27 16:35:25,538 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PASSWORD VARCHAR(50) NOT NULL COMMENT 'パスワード',
	PASSWORD_UPDATE_DATETIME DATETIME COMMENT 'パスワード更新日時',
	PASSWORD_REGESTERATION_DATETIME DATETIME NOT NULL COMMENT 'パスワード登録日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員セキュリティ'
2014-06-27 16:35:25,581 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_WITHDRAW
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	WITHDRAWAL_REASON_ID INT COMMENT '退会理由ID : 会員の退会理由ID',
	WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト',
	WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT 'withdrawal_datetime : 退会日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員退会'
2014-06-27 16:35:25,641 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	TWEET_DATETIME DATETIME NOT NULL COMMENT 'TWEET日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-06-27 16:35:25,699 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FOLLOW
	ADD FOREIGN KEY (ME_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 16:35:25,775 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD FOREIGN KEY (YOU_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 16:35:25,842 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 16:35:25,926 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 16:35:26,030 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_WITHDRAW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 16:35:26,124 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 16:35:26,226 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=12 failure=0
2014-06-27 16:35:26,228 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=14 failure=0 (in 2 files)
2014-06-27 16:35:26,230 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-06-27 16:35:26,285 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-06-27 16:35:26,285 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-06-27 16:35:26,286 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-06-27 16:35:26,288 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-06-27 16:35:26,289 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-06-27 16:35:26,291 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-06-27 16:35:26,315 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-06-27 16:35:26,316 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-06-27 16:35:26,316 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-06-27 16:35:26,624 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-27 16:35:26,625 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-27 16:35:26,625 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-27 16:35:26,690 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{1, Stojkovic@gmail.com, Pixy, 1965/03/03, 2014-06-24 00:00:00.0, 2014-06-27 16:35:26.689}
2014-06-27 16:35:26,744 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{2, Savicevic@gmail.com, Genius, 1966/09/15, 2014-06-25 00:00:00.0, 2014-06-27 16:35:26.744}
2014-06-27 16:35:26,745 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{3, Mijatovic@gmail.com, Mijato, null, 2014-06-26 00:00:00.0, 2014-06-27 16:35:26.745}
2014-06-27 16:35:26,746 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{4, Stankovic@gmail.com, Stanko, 1978/09/11, 2014-06-27 00:00:00.0, 2014-06-27 16:35:26.746}
2014-06-27 16:35:26,747 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{5, Milosevic@gmail.com, Milose, null, 2014-06-28 00:00:00.0, 2014-06-27 16:35:26.747}
2014-06-27 16:35:26,748 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{6, Mihajlovic@gmail.com, FreeKick, 1969/02/20, 2014-06-29 00:00:00.0, 2014-06-27 16:35:26.748}
2014-06-27 16:35:26,750 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{7, アカギ@gmail.com, Akagi, null, 2014-06-30 00:00:00.0, 2014-06-27 16:35:26.75}
2014-06-27 16:35:26,752 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{8, Kezman@gmial.com, RedCard, null, 2014-07-01 00:00:00.0, 2014-06-27 16:35:26.752}
2014-06-27 16:35:26,754 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{9, Maslovar@gmail.com, JEFUnited, 1967/02/20, 2014-07-02 00:00:00.0, 2014-06-27 16:35:26.754}
2014-06-27 16:35:26,756 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{10, 諸葛亮孔明@gmail.com, ShokatsuGoGo, null, 2014-07-03 00:00:00.0, 2014-06-27 16:35:26.756}
2014-06-27 16:35:26,759 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{11, Boban@gmail.com, Boban, 1968/10/08, 2014-07-04 00:00:00.0, 2014-06-27 16:35:26.758}
2014-06-27 16:35:26,760 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{12, Suker@gmail.com, Suker, 1968/01/01, 2014-07-05 00:00:00.0, 2014-06-27 16:35:26.76}
2014-06-27 16:35:26,762 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{13, Jarni@gmail.com, Jarni, 1968/10/26, 2014-07-06 00:00:00.0, 2014-06-27 16:35:26.762}
2014-06-27 16:35:26,764 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{14, Boksic@gmail.com, Boksic, 1970/01/21, 2014-07-07 00:00:00.0, 2014-06-27 16:35:26.764}
2014-06-27 16:35:26,766 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{15, Prosinecki@gmail.com, Prosinecki, 1969/01/12, 2014-07-08 00:00:00.0, 2014-06-27 16:35:26.766}
2014-06-27 16:35:26,767 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{16, RobeltKovac@gmail.com, RobeltKovac, null, 2014-07-09 00:00:00.0, 2014-06-27 16:35:26.767}
2014-06-27 16:35:26,769 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{17, NikoKovac@gmail.com, NikoKovac, null, 2014-07-10 00:00:00.0, 2014-06-27 16:35:26.769}
2014-06-27 16:35:26,770 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{18, Jovanovic@gmail.com, Jovano, 1981/04/18, 2014-07-11 00:00:00.0, 2014-06-27 16:35:26.77}
2014-06-27 16:35:26,772 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{19, Milko@gmail.com, Milko, 1974/09/10, 2014-07-12 00:00:00.0, 2014-06-27 16:35:26.772}
2014-06-27 16:35:26,774 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{20, 諸葛瑾子瑜@gmail.com, ShokatsuKinKin, null, 2014-07-13 00:00:00.0, 2014-06-27 16:35:26.774}
2014-06-27 16:35:26,790 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 20 rows are loaded to MEMBER
2014-06-27 16:35:26,793 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 3, 2006/12/24 23:59:59}
2014-06-27 16:35:26,795 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 6, 2007/11/11 16:16:16}
2014-06-27 16:35:26,795 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{3, 1, 2006/12/23 22:56:29}
2014-06-27 16:35:26,796 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{4, 6, 2007/11/01 02:13:00}
2014-06-27 16:35:26,797 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{5, 7, 2006/05/24 23:12:59}
2014-06-27 16:35:26,799 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{6, 6, 2005/11/11 16:32:01}
2014-06-27 16:35:26,800 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{7, 6, 2006/01/28 23:59:59}
2014-06-27 16:35:26,801 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{8, 6, 2007/11/09 16:23:00}
2014-06-27 16:35:26,803 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{9, 8, 2006/12/22 23:59:59}
2014-06-27 16:35:26,804 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{10, 6, 2007/11/11 09:01:00}
2014-06-27 16:35:26,805 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{11, 1, 2006/12/23 23:59:59}
2014-06-27 16:35:26,807 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{12, 9, 2007/11/15 12:43:00}
2014-06-27 16:35:26,809 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{13, 10, 2006/12/24 23:59:59}
2014-06-27 16:35:26,810 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{14, 6, 2007/04/01 16:23:01}
2014-06-27 16:35:26,811 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{15, 7, 2006/12/24 23:59:20}
2014-06-27 16:35:26,812 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{16, 6, 2007/05/01 12:23:02}
2014-06-27 16:35:26,814 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{17, 7, 2006/12/24 23:59:21}
2014-06-27 16:35:26,815 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{18, 6, 2007/06/11 17:23:03}
2014-06-27 16:35:26,816 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{19, 4, 2006/12/24 23:59:22}
2014-06-27 16:35:26,818 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{20, 3, 2007/11/01 16:12:04}
2014-06-27 16:35:26,819 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{21, 11, 2006/12/24 23:59:23}
2014-06-27 16:35:26,821 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{22, 1, 2007/11/01 16:23:05}
2014-06-27 16:35:26,822 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{23, 9, 2006/12/24 23:59:24}
2014-06-27 16:35:26,823 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{24, 8, 2007/11/01 16:23:06}
2014-06-27 16:35:26,825 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{25, 7, 2007/12/24 11:59:25}
2014-06-27 16:35:26,826 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{26, 6, 2007/06/21 01:23:57}
2014-06-27 16:35:26,828 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{27, 5, 2006/12/24 23:59:26}
2014-06-27 16:35:26,829 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{28, 3, 2007/11/01 16:23:08}
2014-06-27 16:35:26,830 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{29, 3, 2006/12/24 23:59:27}
2014-06-27 16:35:26,831 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{30, 10, 2007/11/01 16:23:09}
2014-06-27 16:35:26,833 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-27 16:35:26,846 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 30 rows are loaded to LOGIN
2014-06-27 16:35:26,847 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014/06/23, null}
2014-06-27 16:35:26,849 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014/06/24, null}
2014-06-27 16:35:26,850 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{3, ccc, 2014/06/25, 2014/06/25}
2014-06-27 16:35:26,851 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{4, ddd, 2014/06/26, null}
2014-06-27 16:35:26,852 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{5, eee2, 2014/06/27, null}
2014-06-27 16:35:26,853 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{6, fff, 2014/06/28, null}
2014-06-27 16:35:26,855 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{7, ggg3, 2014/06/29, 2014/06/25}
2014-06-27 16:35:26,857 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{8, hhh555, 2014/06/30, null}
2014-06-27 16:35:26,858 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{9, iii, 2014/07/01, 2014/06/25}
2014-06-27 16:35:26,860 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{10, jjj, 2014/07/02, null}
2014-06-27 16:35:26,861 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-27 16:35:26,872 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to MEMBER_SECURITY
2014-06-27 16:35:26,873 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 2013-06-13 00:00:00.0}
2014-06-27 16:35:26,876 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{2, 2345, 清君頼りになるー！, 2013-06-14 00:00:00.0}
2014-06-27 16:35:26,877 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{3, 3456, GLD, 2013-06-15 00:00:00.0}
2014-06-27 16:35:26,878 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{4, 875, BRZ, 2013-06-16 00:00:00.0}
2014-06-27 16:35:26,880 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{5, 1111, BRZ, 2013-06-17 00:00:00.0}
2014-06-27 16:35:26,881 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{6, 5422, SIL, 2013-06-18 00:00:00.0}
2014-06-27 16:35:26,882 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{7, 24678, SIL, 2013-06-19 00:00:00.0}
2014-06-27 16:35:26,884 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{8, 234, SIL, 2013-06-20 00:00:00.0}
2014-06-27 16:35:26,885 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{9, 3, SIL, 2013-06-21 00:00:00.0}
2014-06-27 16:35:26,886 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{10, 98765, PLT, 2013-06-22 00:00:00.0}
2014-06-27 16:35:26,888 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-27 16:35:26,895 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to TWEET
2014-06-27 16:35:26,897 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{3, 1, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123}
2014-06-27 16:35:26,901 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{6, 1, null, 2007/11/11 16:00:00.456}
2014-06-27 16:35:26,902 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{13, 2, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789}
2014-06-27 16:35:26,904 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{16, 3, コバチが２人いるため, 2007/11/13 16:00:00.456}
2014-06-27 16:35:26,937 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 4 rows are loaded to MEMBER_WITHDRAW
2014-06-27 16:35:26,938 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - FOLLOW:{0, 1, 1, 2014-06-21 00:00:00.0}
2014-06-27 16:35:26,944 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 1 rows are loaded to FOLLOW
2014-06-27 16:35:26,947 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():379) - ...Checking implicit set of classification
2014-06-27 16:35:26,968 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - 
2014-06-27 16:35:26,969 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * * * * * * * **
2014-06-27 16:35:26,969 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2014-06-27 16:35:26,971 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * Take Finally *
2014-06-27 16:35:26,972 [main] INFO  (DfTakeFinallyProcess#takeFinally():225) - *              *
2014-06-27 16:35:26,974 [main] INFO  (DfTakeFinallyProcess#takeFinally():226) - * * * * * * * **
2014-06-27 16:35:26,984 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: take-finally.sql
2014-06-27 16:35:26,986 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2014-06-27 16:35:26,988 [main] INFO  (DfSqlFileFireMan#fire():90) - {Take Finally}: success=0 failure=0 (in 1 files)
2014-06-27 16:35:26,991 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-27 16:35:26,999 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m04s299ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=14 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=1
  (ut)
  o 20-member.xls

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-06-27 16:35:28,015 [main] INFO  (TorqueJDBCTransformTask#begin():100) - +------------------------------------------+
2014-06-27 16:35:28,018 [main] INFO  (TorqueJDBCTransformTask#begin():101) - |                                          |
2014-06-27 16:35:28,018 [main] INFO  (TorqueJDBCTransformTask#begin():102) - |                   JDBC                   |
2014-06-27 16:35:28,019 [main] INFO  (TorqueJDBCTransformTask#begin():103) - |                                          |
2014-06-27 16:35:28,020 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2014-06-27 16:35:28,062 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 16:35:28,063 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 16:35:28,063 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 16:35:28,065 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 16:35:28,109 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2014-06-27 16:35:28,110 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2014-06-27 16:35:28,111 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1469) - ...Loading previous schema (schema diff process)
2014-06-27 16:35:28,122 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-27 16:35:28,207 [main] INFO  (DfSchemaXmlSerializer#generateXML():361) - ...Getting DB connection
2014-06-27 16:35:28,212 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-27 16:35:28,394 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-27 16:35:28,395 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-27 16:35:28,397 [main] INFO  (DfSchemaXmlSerializer#generateXML():364) - ...Getting DB meta data
2014-06-27 16:35:28,400 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-27 16:35:28,400 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-27 16:35:28,401 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-27 16:35:28,412 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2014-06-27 16:35:28,415 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2014-06-27 16:35:28,428 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - 
2014-06-27 16:35:28,429 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2014-06-27 16:35:28,430 [main] INFO  (DfSchemaXmlSerializer#processTable():423) - $ [Table List]
2014-06-27 16:35:28,431 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.follow(TABLE) // フォロー
2014-06-27 16:35:28,468 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.login(TABLE) // ログイン
2014-06-27 16:35:28,483 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member(TABLE) // 会員
2014-06-27 16:35:28,498 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_security(TABLE) // 会員セキュリティ
2014-06-27 16:35:28,512 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_withdraw(TABLE) // 会員退会
2014-06-27 16:35:28,526 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.tweet(TABLE) // TWEET
2014-06-27 16:35:28,539 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 
2014-06-27 16:35:28,539 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ [Table Count]
2014-06-27 16:35:28,540 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ 6
2014-06-27 16:35:28,541 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - $ = = = = = = = = = =/
2014-06-27 16:35:28,543 [main] INFO  (DfSchemaXmlSerializer#processTable():439) - 
2014-06-27 16:35:28,546 [main] INFO  (DfSchemaXmlSerializer#processSequence():799) - ...Getting sequences
2014-06-27 16:35:28,550 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2014-06-27 16:35:28,550 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-twitter.xml
2014-06-27 16:35:28,551 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2014-06-27 16:35:28,567 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1487) - ...Loading next schema (schema diff process)
2014-06-27 16:35:28,569 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-27 16:35:28,608 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1492) -  -> different from previous (schema diff)
2014-06-27 16:35:28,610 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1494) - ...Serializing schema-diff:
2014-06-27 16:35:28,610 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1495) -   filePath = ./schema/project-history-twitter.diffmap
2014-06-27 16:35:28,635 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-27 16:35:28,642 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s622ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2014-06-27 16:35:29,611 [main] INFO  (TorqueDocumentationTask#begin():171) - +------------------------------------------+
2014-06-27 16:35:29,615 [main] INFO  (TorqueDocumentationTask#begin():172) - |                                          |
2014-06-27 16:35:29,615 [main] INFO  (TorqueDocumentationTask#begin():173) - |                   Doc                    |
2014-06-27 16:35:29,616 [main] INFO  (TorqueDocumentationTask#begin():181) - |                                          |
2014-06-27 16:35:29,617 [main] INFO  (TorqueDocumentationTask#begin():182) - +------------------------------------------+
2014-06-27 16:35:29,659 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 16:35:29,660 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 16:35:29,660 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 16:35:29,661 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 16:35:29,665 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():242) - 
2014-06-27 16:35:29,666 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():243) - * * * * * * * * * * *
2014-06-27 16:35:29,667 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():244) - *                   *
2014-06-27 16:35:29,668 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():245) - *    Schema HTML    *
2014-06-27 16:35:29,669 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - *                   *
2014-06-27 16:35:29,671 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2014-06-27 16:35:29,842 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-27 16:35:29,905 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("doc/ControlDocument.vm", c);
2014-06-27 16:35:29,984 [main] INFO  (Database#doEnableDocumentOutputDirectory():1180) - ...Setting up documentOutputDirectory: ./output/doc
2014-06-27 16:35:29,994 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-27 16:35:29,995 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-27 16:35:29,998 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-27 16:35:30,000 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-27 16:35:30,001 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-27 16:35:30,004 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-27 16:35:30,007 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-27 16:35:30,008 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-27 16:35:30,010 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-27 16:35:30,021 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():150) - ...Loading schema history
2014-06-27 16:35:30,071 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():154) -  -> found history: count=15
2014-06-27 16:35:30,289 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-27 16:35:30,302 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s688ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Doc}
2014-06-27 16:35:33,210 [main] INFO  (TorqueDataModelTask#begin():105) - +------------------------------------------+
2014-06-27 16:35:33,213 [main] INFO  (TorqueDataModelTask#begin():106) - |                                          |
2014-06-27 16:35:33,213 [main] INFO  (TorqueDataModelTask#begin():107) - |                 Generate                 |
2014-06-27 16:35:33,214 [main] INFO  (TorqueDataModelTask#begin():108) - |                                          |
2014-06-27 16:35:33,216 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2014-06-27 16:35:33,255 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 16:35:33,256 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 16:35:33,256 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 16:35:33,258 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 16:35:33,278 [main] INFO  (TorqueDataModelTask#setupControlTemplate():160) - 
2014-06-27 16:35:33,278 [main] INFO  (TorqueDataModelTask#setupControlTemplate():161) - ...Using Java control: om/ControlGenerateJava.vm
2014-06-27 16:35:33,414 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-27 16:35:33,457 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlGenerateJava.vm", c);
2014-06-27 16:35:33,568 [main] INFO  (Database#doEnableGenerateOutputDirectory():1148) - ...Setting up generateOutputDirectory: ../src/main/java
2014-06-27 16:35:33,582 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-27 16:35:33,584 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-27 16:35:33,588 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-27 16:35:33,591 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-27 16:35:33,593 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-27 16:35:33,597 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-27 16:35:33,601 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-27 16:35:33,602 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-27 16:35:33,606 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-27 16:35:33,627 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - /=============================
2014-06-27 16:35:33,628 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():60) - ...Initializing include query.
2014-06-27 16:35:33,628 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - String
2014-06-27 16:35:33,630 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Number
2014-06-27 16:35:33,631 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Date
2014-06-27 16:35:33,632 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotEqual -> []
2014-06-27 16:35:33,634 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   InScope -> []
2014-06-27 16:35:33,636 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotInScope -> []
2014-06-27 16:35:33,638 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - OrderBy
2014-06-27 16:35:33,639 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():62) - ========/
2014-06-27 16:35:33,661 [main] INFO  (Database#info():2573) - public void parseAllCommon() {
2014-06-27 16:35:33,664 [main] INFO  (Database#info():2573) -     parse('DBCurrent');
2014-06-27 16:35:33,674 [main] INFO  (Database#info():2573) -     parse('DBFluteConfig');
2014-06-27 16:35:33,697 [main] INFO  (Database#info():2573) -     parse('DBFluteInitializer');
2014-06-27 16:35:33,703 [main] INFO  (Database#info():2573) -     parse('DBMetaInstanceHandler');
2014-06-27 16:35:33,727 [main] INFO  (Database#info():2573) -     parse('EntityDefinedCommonColumn');
2014-06-27 16:35:33,732 [main] INFO  (Database#info():2573) -     parse('ImplementedBehaviorSelector');
2014-06-27 16:35:33,738 [main] INFO  (Database#info():2573) -     parse('ImplementedCommonColumnAutoSetupper');
2014-06-27 16:35:33,743 [main] INFO  (Database#info():2573) -     parse('ImplementedInvokerAssistant');
2014-06-27 16:35:33,748 [main] INFO  (Database#info():2573) -     parse('ImplementedSqlClauseCreator');
2014-06-27 16:35:33,751 [main] INFO  (Database#info():2573) - }
2014-06-27 16:35:33,752 [main] INFO  (Database#info():2573) - public void parseContainerConfig() {
2014-06-27 16:35:33,753 [main] INFO  (Database#info():2573) -     parse('../resources/dbflute.dicon')
2014-06-27 16:35:33,761 [main] INFO  (Database#info():2573) - }
2014-06-27 16:35:33,767 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldTableClass() {
2014-06-27 16:35:33,788 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-06-27 16:35:33,788 [main] INFO  (Database#info():2573) - public void parseTableClass() {
2014-06-27 16:35:33,789 [main] INFO  (Database#info():2573) -     parse('follow');
2014-06-27 16:35:34,033 [main] INFO  (Database#info():2573) -     parse('login');
2014-06-27 16:35:34,190 [main] INFO  (Database#info():2573) -     parse('member');
2014-06-27 16:35:34,499 [main] INFO  (Database#info():2573) -     parse('member_security');
2014-06-27 16:35:34,636 [main] INFO  (Database#info():2573) -     parse('member_withdraw');
2014-06-27 16:35:34,743 [main] INFO  (Database#info():2573) -     parse('tweet');
2014-06-27 16:35:34,846 [main] INFO  (Database#info():2573) - }
2014-06-27 16:35:34,847 [main] INFO  (Database#info():2573) -  
2014-06-27 16:35:34,876 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-27 16:35:34,883 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s669ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Generate}
2014-06-27 16:35:35,874 [main] INFO  (DfOutsideSqlTestTask#begin():72) - +------------------------------------------+
2014-06-27 16:35:35,878 [main] INFO  (DfOutsideSqlTestTask#begin():73) - |                                          |
2014-06-27 16:35:35,879 [main] INFO  (DfOutsideSqlTestTask#begin():74) - |              OutsideSqlTest              |
2014-06-27 16:35:35,880 [main] INFO  (DfOutsideSqlTestTask#begin():75) - |                                          |
2014-06-27 16:35:35,881 [main] INFO  (DfOutsideSqlTestTask#begin():76) - +------------------------------------------+
2014-06-27 16:35:35,936 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 16:35:35,936 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 16:35:35,937 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 16:35:35,939 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 16:35:35,997 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-27 16:35:36,006 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s125ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2014-06-27 16:35:36,950 [main] INFO  (DfSql2EntityTask#begin():100) - +------------------------------------------+
2014-06-27 16:35:36,953 [main] INFO  (DfSql2EntityTask#begin():101) - |                                          |
2014-06-27 16:35:36,953 [main] INFO  (DfSql2EntityTask#begin():102) - |                Sql2Entity                |
2014-06-27 16:35:36,954 [main] INFO  (DfSql2EntityTask#begin():103) - |                                          |
2014-06-27 16:35:36,956 [main] INFO  (DfSql2EntityTask#begin():104) - +------------------------------------------+
2014-06-27 16:35:37,005 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 16:35:37,006 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 16:35:37,007 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 16:35:37,008 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 16:35:37,029 [main] INFO  (DfSql2EntityTask#setupControlTemplate():170) - 
2014-06-27 16:35:37,029 [main] INFO  (DfSql2EntityTask#setupControlTemplate():171) - ...Using Java control: om/ControlSql2EntityJava.vm
2014-06-27 16:35:37,038 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-27 16:35:37,093 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-27 16:35:37,242 [main] INFO  (DfSql2EntityTask#initControlContext():301) - 
2014-06-27 16:35:37,242 [main] INFO  (DfSql2EntityTask#initControlContext():302) - ...Preparing generation of customize-entities and parameter-beans
2014-06-27 16:35:37,243 [main] INFO  (DfSql2EntityTask#initControlContext():303) - * * * * * * * * * *
2014-06-27 16:35:37,245 [main] INFO  (DfSql2EntityTask#initControlContext():304) - * CustomizeEntity *
2014-06-27 16:35:37,246 [main] INFO  (DfSql2EntityTask#initControlContext():305) - * * * * * * * * * *
2014-06-27 16:35:37,247 [main] INFO  (DfSql2EntityTask#showParameterBean():879) - * * * * * * * * *
2014-06-27 16:35:37,248 [main] INFO  (DfSql2EntityTask#showParameterBean():880) - * ParameterBean *
2014-06-27 16:35:37,250 [main] INFO  (DfSql2EntityTask#showParameterBean():881) - * * * * * * * * *
2014-06-27 16:35:37,255 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlSql2EntityJava.vm", c);
2014-06-27 16:35:37,355 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1164) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2014-06-27 16:35:37,359 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldCustomizeClass() {
2014-06-27 16:35:37,370 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-06-27 16:35:37,371 [main] INFO  (Database#info():2573) - public void parseCustomizeEntity() {
2014-06-27 16:35:37,374 [main] INFO  (Database#info():2573) - }
2014-06-27 16:35:37,386 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():293) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2014-06-27 16:35:37,394 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-27 16:35:37,400 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s447ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2014-06-27 16:40:10,537 [main] INFO  (DfReplaceSchemaTask#begin():87) - +------------------------------------------+
2014-06-27 16:40:10,540 [main] INFO  (DfReplaceSchemaTask#begin():88) - |                                          |
2014-06-27 16:40:10,540 [main] INFO  (DfReplaceSchemaTask#begin():89) - |              ReplaceSchema               |
2014-06-27 16:40:10,559 [main] INFO  (DfReplaceSchemaTask#begin():97) - |                                          |
2014-06-27 16:40:10,560 [main] INFO  (DfReplaceSchemaTask#begin():98) - +------------------------------------------+
2014-06-27 16:40:10,563 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():329) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2014-06-27 16:40:12,524 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 16:40:12,528 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 16:40:12,532 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 16:40:12,535 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 16:40:12,555 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-27 16:40:12,785 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-27 16:40:12,786 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-27 16:40:12,805 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():207) - 
2014-06-27 16:40:12,806 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():208) - * * * * * * * * * * *
2014-06-27 16:40:12,807 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():209) - *                   *
2014-06-27 16:40:12,808 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():210) - * Initialize Schema *
2014-06-27 16:40:12,810 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():211) - *                   *
2014-06-27 16:40:12,811 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():212) - * * * * * * * * * * *
2014-06-27 16:40:12,831 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-27 16:40:12,831 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-27 16:40:12,832 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-27 16:40:12,889 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table follow
2014-06-27 16:40:12,934 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table login
2014-06-27 16:40:12,974 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_security
2014-06-27 16:40:13,004 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_withdraw
2014-06-27 16:40:13,038 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table tweet
2014-06-27 16:40:13,054 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_1
2014-06-27 16:40:13,064 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_2
2014-06-27 16:40:13,075 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table login drop foreign key login_ibfk_1
2014-06-27 16:40:13,091 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_security drop foreign key member_security_ibfk_1
2014-06-27 16:40:13,101 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_withdraw drop foreign key member_withdraw_ibfk_1
2014-06-27 16:40:13,112 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table tweet drop foreign key tweet_ibfk_1
2014-06-27 16:40:13,122 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table follow
2014-06-27 16:40:13,135 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table login
2014-06-27 16:40:13,152 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member
2014-06-27 16:40:13,163 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_security
2014-06-27 16:40:13,173 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_withdraw
2014-06-27 16:40:13,187 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table tweet
2014-06-27 16:40:13,252 [main] INFO  (DfCreateSchemaProcess#createSchema():244) - 
2014-06-27 16:40:13,253 [main] INFO  (DfCreateSchemaProcess#createSchema():245) - * * * * * * * * *
2014-06-27 16:40:13,254 [main] INFO  (DfCreateSchemaProcess#createSchema():246) - *               *
2014-06-27 16:40:13,256 [main] INFO  (DfCreateSchemaProcess#createSchema():247) - * Create Schema *
2014-06-27 16:40:13,257 [main] INFO  (DfCreateSchemaProcess#createSchema():248) - *               *
2014-06-27 16:40:13,258 [main] INFO  (DfCreateSchemaProcess#createSchema():249) - * * * * * * * * *
2014-06-27 16:40:13,264 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-00-system.sql
2014-06-27 16:40:13,267 [main] INFO  (DfReplaceSchemaProperties#checkTargetEnvType():277) - ...Checking envType: ut in [ut]
2014-06-27 16:40:13,269 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:checkEnv(ut)#

-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database twitter
2014-06-27 16:40:13,276 [main] INFO  (DfCreateSchemaProcess$1#dispatch():273) - ...Creating a connection to system
2014-06-27 16:40:13,279 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():514) - ...Creating a connection for additional user: root
2014-06-27 16:40:13,291 [main] INFO  (DfCreateSchemaProcess$1#dispatch():299) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2014-06-27 16:40:13,292 [main] INFO  (DfCreateSchemaProcess$1#dispatch():301) -  -> Can't create database 'twitter'; database exists
2014-06-27 16:40:13,294 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():411) - ...Reviving the user 'system' until the end of this SQL file
2014-06-27 16:40:13,295 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on twitter.*
  to twitter@localhost identified by 'twitter'
2014-06-27 16:40:13,302 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2014-06-27 16:40:13,306 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2014-06-27 16:40:13,307 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-10-basic.sql
2014-06-27 16:40:13,308 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():348) - ...Saying good-bye to the user 'system' again
2014-06-27 16:40:13,309 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():352) - ...Clearing revived users
2014-06-27 16:40:13,311 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():359) - ...Coming back to the main user from the user 'system'
2014-06-27 16:40:13,313 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FOLLOW
(
	FOLLOW_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'フォローID',
	YOU_ID INT(100) NOT NULL UNIQUE COMMENT 'フォローする人のID : 会員のID
',
	ME_ID INT(100) NOT NULL COMMENT 'フォローされる人のID : 会員のID
',
	FOLLOW_DATETIME DATETIME NOT NULL COMMENT 'follow_datetime',
	PRIMARY KEY (FOLLOW_ID)
) COMMENT = 'フォロー'
2014-06-27 16:40:13,367 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE LOGIN
(
	LOGIN_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ログインID : ログインした瞬間のID
',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時',
	PRIMARY KEY (LOGIN_ID)
) COMMENT = 'ログイン'
2014-06-27 16:40:13,428 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER
(
	MEMBER_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員のID
',
	EMAIL_ADDRESS VARCHAR(100) NOT NULL UNIQUE COMMENT 'メールアドレス : 会員のメールアドレス',
	USER_NAME VARCHAR(50) NOT NULL UNIQUE COMMENT '会員ユーザ名 : 会員のユーザ名',
	BIRTHDATE DATE COMMENT '生年月日 : 会員の生年月日',
	PROFILE VARCHAR(200) COMMENT 'プロフィール',
	REGESTER_DATETIME DATETIME NOT NULL COMMENT '登録日時',
	UPDATE_DATETIME DATETIME COMMENT '更新日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員'
2014-06-27 16:40:13,503 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PASSWORD VARCHAR(50) NOT NULL COMMENT 'パスワード',
	PASSWORD_UPDATE_DATETIME DATETIME COMMENT 'パスワード更新日時',
	PASSWORD_REGESTERATION_DATETIME DATETIME NOT NULL COMMENT 'パスワード登録日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員セキュリティ'
2014-06-27 16:40:13,561 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_WITHDRAW
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	WITHDRAWAL_REASON_ID INT COMMENT '退会理由ID : 会員の退会理由ID',
	WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト',
	WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT 'withdrawal_datetime : 退会日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員退会'
2014-06-27 16:40:13,619 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	TWEET_DATETIME DATETIME NOT NULL COMMENT 'TWEET日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-06-27 16:40:13,663 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FOLLOW
	ADD FOREIGN KEY (ME_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 16:40:13,769 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD FOREIGN KEY (YOU_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 16:40:13,867 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 16:40:13,970 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 16:40:14,058 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_WITHDRAW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 16:40:14,163 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-06-27 16:40:14,260 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=12 failure=0
2014-06-27 16:40:14,263 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=14 failure=0 (in 2 files)
2014-06-27 16:40:14,265 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-06-27 16:40:14,314 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-06-27 16:40:14,315 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-06-27 16:40:14,315 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-06-27 16:40:14,317 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-06-27 16:40:14,318 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-06-27 16:40:14,320 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-06-27 16:40:14,343 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-06-27 16:40:14,344 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-06-27 16:40:14,345 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-06-27 16:40:14,631 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-27 16:40:14,632 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-27 16:40:14,633 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-27 16:40:14,696 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{1, Stojkovic@gmail.com, Pixy, 1965/03/03, 2014-06-24 00:00:00.0, 2014-06-27 16:40:14.696}
2014-06-27 16:40:14,747 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{2, Savicevic@gmail.com, Genius, 1966/09/15, 2014-06-25 00:00:00.0, 2014-06-27 16:40:14.747}
2014-06-27 16:40:14,749 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{3, Mijatovic@gmail.com, Mijato, null, 2014-06-26 00:00:00.0, 2014-06-27 16:40:14.749}
2014-06-27 16:40:14,750 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{4, Stankovic@gmail.com, Stanko, 1978/09/11, 2014-06-27 00:00:00.0, 2014-06-27 16:40:14.75}
2014-06-27 16:40:14,751 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{5, Milosevic@gmail.com, Milose, null, 2014-06-28 00:00:00.0, 2014-06-27 16:40:14.751}
2014-06-27 16:40:14,752 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{6, Mihajlovic@gmail.com, FreeKick, 1969/02/20, 2014-06-29 00:00:00.0, 2014-06-27 16:40:14.752}
2014-06-27 16:40:14,754 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{7, アカギ@gmail.com, Akagi, null, 2014-06-30 00:00:00.0, 2014-06-27 16:40:14.754}
2014-06-27 16:40:14,756 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{8, Kezman@gmial.com, RedCard, null, 2014-07-01 00:00:00.0, 2014-06-27 16:40:14.756}
2014-06-27 16:40:14,757 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{9, Maslovar@gmail.com, JEFUnited, 1967/02/20, 2014-07-02 00:00:00.0, 2014-06-27 16:40:14.757}
2014-06-27 16:40:14,759 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{10, 諸葛亮孔明@gmail.com, ShokatsuGoGo, null, 2014-07-03 00:00:00.0, 2014-06-27 16:40:14.759}
2014-06-27 16:40:14,762 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{11, Boban@gmail.com, Boban, 1968/10/08, 2014-07-04 00:00:00.0, 2014-06-27 16:40:14.762}
2014-06-27 16:40:14,764 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{12, Suker@gmail.com, Suker, 1968/01/01, 2014-07-05 00:00:00.0, 2014-06-27 16:40:14.764}
2014-06-27 16:40:14,766 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{13, Jarni@gmail.com, Jarni, 1968/10/26, 2014-07-06 00:00:00.0, 2014-06-27 16:40:14.765}
2014-06-27 16:40:14,767 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{14, Boksic@gmail.com, Boksic, 1970/01/21, 2014-07-07 00:00:00.0, 2014-06-27 16:40:14.767}
2014-06-27 16:40:14,769 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{15, Prosinecki@gmail.com, Prosinecki, 1969/01/12, 2014-07-08 00:00:00.0, 2014-06-27 16:40:14.769}
2014-06-27 16:40:14,771 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{16, RobeltKovac@gmail.com, RobeltKovac, null, 2014-07-09 00:00:00.0, 2014-06-27 16:40:14.771}
2014-06-27 16:40:14,773 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{17, NikoKovac@gmail.com, NikoKovac, null, 2014-07-10 00:00:00.0, 2014-06-27 16:40:14.773}
2014-06-27 16:40:14,774 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{18, Jovanovic@gmail.com, Jovano, 1981/04/18, 2014-07-11 00:00:00.0, 2014-06-27 16:40:14.774}
2014-06-27 16:40:14,776 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{19, Milko@gmail.com, Milko, 1974/09/10, 2014-07-12 00:00:00.0, 2014-06-27 16:40:14.776}
2014-06-27 16:40:14,778 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{20, 諸葛瑾子瑜@gmail.com, ShokatsuKinKin, null, 2014-07-13 00:00:00.0, 2014-06-27 16:40:14.777}
2014-06-27 16:40:14,793 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 20 rows are loaded to MEMBER
2014-06-27 16:40:14,796 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 3, 2006/12/24 23:59:59}
2014-06-27 16:40:14,797 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 6, 2007/11/11 16:16:16}
2014-06-27 16:40:14,798 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{3, 1, 2006/12/23 22:56:29}
2014-06-27 16:40:14,799 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{4, 6, 2007/11/01 02:13:00}
2014-06-27 16:40:14,800 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{5, 7, 2006/05/24 23:12:59}
2014-06-27 16:40:14,802 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{6, 6, 2005/11/11 16:32:01}
2014-06-27 16:40:14,804 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{7, 6, 2006/01/28 23:59:59}
2014-06-27 16:40:14,805 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{8, 6, 2007/11/09 16:23:00}
2014-06-27 16:40:14,806 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{9, 8, 2006/12/22 23:59:59}
2014-06-27 16:40:14,807 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{10, 6, 2007/11/11 09:01:00}
2014-06-27 16:40:14,808 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{11, 1, 2006/12/23 23:59:59}
2014-06-27 16:40:14,810 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{12, 9, 2007/11/15 12:43:00}
2014-06-27 16:40:14,811 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{13, 10, 2006/12/24 23:59:59}
2014-06-27 16:40:14,812 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{14, 6, 2007/04/01 16:23:01}
2014-06-27 16:40:14,814 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{15, 7, 2006/12/24 23:59:20}
2014-06-27 16:40:14,815 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{16, 6, 2007/05/01 12:23:02}
2014-06-27 16:40:14,816 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{17, 7, 2006/12/24 23:59:21}
2014-06-27 16:40:14,818 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{18, 6, 2007/06/11 17:23:03}
2014-06-27 16:40:14,819 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{19, 4, 2006/12/24 23:59:22}
2014-06-27 16:40:14,820 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{20, 3, 2007/11/01 16:12:04}
2014-06-27 16:40:14,822 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{21, 11, 2006/12/24 23:59:23}
2014-06-27 16:40:14,823 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{22, 1, 2007/11/01 16:23:05}
2014-06-27 16:40:14,825 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{23, 9, 2006/12/24 23:59:24}
2014-06-27 16:40:14,826 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{24, 8, 2007/11/01 16:23:06}
2014-06-27 16:40:14,827 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{25, 7, 2007/12/24 11:59:25}
2014-06-27 16:40:14,829 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{26, 6, 2007/06/21 01:23:57}
2014-06-27 16:40:14,830 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{27, 5, 2006/12/24 23:59:26}
2014-06-27 16:40:14,831 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{28, 3, 2007/11/01 16:23:08}
2014-06-27 16:40:14,833 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{29, 3, 2006/12/24 23:59:27}
2014-06-27 16:40:14,834 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{30, 10, 2007/11/01 16:23:09}
2014-06-27 16:40:14,835 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-27 16:40:14,850 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 30 rows are loaded to LOGIN
2014-06-27 16:40:14,851 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014/06/23, null}
2014-06-27 16:40:14,853 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014/06/24, null}
2014-06-27 16:40:14,854 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{3, ccc, 2014/06/25, 2014/06/25}
2014-06-27 16:40:14,855 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{4, ddd, 2014/06/26, null}
2014-06-27 16:40:14,856 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{5, eee2, 2014/06/27, null}
2014-06-27 16:40:14,858 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{6, fff, 2014/06/28, null}
2014-06-27 16:40:14,859 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{7, ggg3, 2014/06/29, 2014/06/25}
2014-06-27 16:40:14,860 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{8, hhh555, 2014/06/30, null}
2014-06-27 16:40:14,861 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{9, iii, 2014/07/01, 2014/06/25}
2014-06-27 16:40:14,863 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{10, jjj, 2014/07/02, null}
2014-06-27 16:40:14,864 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-27 16:40:14,875 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to MEMBER_SECURITY
2014-06-27 16:40:14,877 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 2013-06-13 00:00:00.0}
2014-06-27 16:40:14,879 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{2, 2345, 清君頼りになるー！, 2013-06-14 00:00:00.0}
2014-06-27 16:40:14,881 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{3, 3456, GLD, 2013-06-15 00:00:00.0}
2014-06-27 16:40:14,882 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{4, 875, BRZ, 2013-06-16 00:00:00.0}
2014-06-27 16:40:14,883 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{5, 1111, BRZ, 2013-06-17 00:00:00.0}
2014-06-27 16:40:14,885 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{6, 5422, SIL, 2013-06-18 00:00:00.0}
2014-06-27 16:40:14,886 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{7, 24678, SIL, 2013-06-19 00:00:00.0}
2014-06-27 16:40:14,887 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{8, 234, SIL, 2013-06-20 00:00:00.0}
2014-06-27 16:40:14,889 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{9, 3, SIL, 2013-06-21 00:00:00.0}
2014-06-27 16:40:14,890 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{10, 98765, PLT, 2013-06-22 00:00:00.0}
2014-06-27 16:40:14,892 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-06-27 16:40:14,905 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 10 rows are loaded to TWEET
2014-06-27 16:40:14,908 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{3, 1, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123}
2014-06-27 16:40:14,910 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{6, 1, null, 2007/11/11 16:00:00.456}
2014-06-27 16:40:14,911 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{13, 2, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789}
2014-06-27 16:40:14,934 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{16, 3, コバチが２人いるため, 2007/11/13 16:00:00.456}
2014-06-27 16:40:14,944 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 4 rows are loaded to MEMBER_WITHDRAW
2014-06-27 16:40:14,948 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - FOLLOW:{0, 1, 1, 2014-06-21 00:00:00.0}
2014-06-27 16:40:14,968 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 1 rows are loaded to FOLLOW
2014-06-27 16:40:14,972 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():379) - ...Checking implicit set of classification
2014-06-27 16:40:14,985 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - 
2014-06-27 16:40:14,986 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * * * * * * * **
2014-06-27 16:40:14,987 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2014-06-27 16:40:14,988 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * Take Finally *
2014-06-27 16:40:14,989 [main] INFO  (DfTakeFinallyProcess#takeFinally():225) - *              *
2014-06-27 16:40:14,991 [main] INFO  (DfTakeFinallyProcess#takeFinally():226) - * * * * * * * **
2014-06-27 16:40:15,000 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: take-finally.sql
2014-06-27 16:40:15,003 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2014-06-27 16:40:15,005 [main] INFO  (DfSqlFileFireMan#fire():90) - {Take Finally}: success=0 failure=0 (in 1 files)
2014-06-27 16:40:15,006 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-27 16:40:15,011 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m04s470ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=14 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=1
  (ut)
  o 20-member.xls

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-06-27 16:40:15,982 [main] INFO  (TorqueJDBCTransformTask#begin():100) - +------------------------------------------+
2014-06-27 16:40:15,985 [main] INFO  (TorqueJDBCTransformTask#begin():101) - |                                          |
2014-06-27 16:40:15,985 [main] INFO  (TorqueJDBCTransformTask#begin():102) - |                   JDBC                   |
2014-06-27 16:40:15,986 [main] INFO  (TorqueJDBCTransformTask#begin():103) - |                                          |
2014-06-27 16:40:15,988 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2014-06-27 16:40:16,029 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 16:40:16,029 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 16:40:16,030 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 16:40:16,032 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 16:40:16,080 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2014-06-27 16:40:16,080 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2014-06-27 16:40:16,081 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1469) - ...Loading previous schema (schema diff process)
2014-06-27 16:40:16,091 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-27 16:40:16,164 [main] INFO  (DfSchemaXmlSerializer#generateXML():361) - ...Getting DB connection
2014-06-27 16:40:16,170 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-06-27 16:40:16,361 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-06-27 16:40:16,362 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-06-27 16:40:16,364 [main] INFO  (DfSchemaXmlSerializer#generateXML():364) - ...Getting DB meta data
2014-06-27 16:40:16,366 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-06-27 16:40:16,366 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-06-27 16:40:16,367 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-06-27 16:40:16,379 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2014-06-27 16:40:16,382 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2014-06-27 16:40:16,394 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - 
2014-06-27 16:40:16,394 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2014-06-27 16:40:16,395 [main] INFO  (DfSchemaXmlSerializer#processTable():423) - $ [Table List]
2014-06-27 16:40:16,397 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.follow(TABLE) // フォロー
2014-06-27 16:40:16,437 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.login(TABLE) // ログイン
2014-06-27 16:40:16,451 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member(TABLE) // 会員
2014-06-27 16:40:16,465 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_security(TABLE) // 会員セキュリティ
2014-06-27 16:40:16,479 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_withdraw(TABLE) // 会員退会
2014-06-27 16:40:16,494 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.tweet(TABLE) // TWEET
2014-06-27 16:40:16,507 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 
2014-06-27 16:40:16,507 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ [Table Count]
2014-06-27 16:40:16,508 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ 6
2014-06-27 16:40:16,510 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - $ = = = = = = = = = =/
2014-06-27 16:40:16,511 [main] INFO  (DfSchemaXmlSerializer#processTable():439) - 
2014-06-27 16:40:16,514 [main] INFO  (DfSchemaXmlSerializer#processSequence():799) - ...Getting sequences
2014-06-27 16:40:16,520 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2014-06-27 16:40:16,520 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-twitter.xml
2014-06-27 16:40:16,521 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2014-06-27 16:40:16,540 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1487) - ...Loading next schema (schema diff process)
2014-06-27 16:40:16,542 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-27 16:40:16,586 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1492) -  -> different from previous (schema diff)
2014-06-27 16:40:16,588 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1494) - ...Serializing schema-diff:
2014-06-27 16:40:16,588 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1495) -   filePath = ./schema/project-history-twitter.diffmap
2014-06-27 16:40:16,611 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-06-27 16:40:16,618 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s631ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2014-06-27 16:40:17,568 [main] INFO  (TorqueDocumentationTask#begin():171) - +------------------------------------------+
2014-06-27 16:40:17,571 [main] INFO  (TorqueDocumentationTask#begin():172) - |                                          |
2014-06-27 16:40:17,572 [main] INFO  (TorqueDocumentationTask#begin():173) - |                   Doc                    |
2014-06-27 16:40:17,572 [main] INFO  (TorqueDocumentationTask#begin():181) - |                                          |
2014-06-27 16:40:17,574 [main] INFO  (TorqueDocumentationTask#begin():182) - +------------------------------------------+
2014-06-27 16:40:17,615 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 16:40:17,615 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 16:40:17,616 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 16:40:17,617 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 16:40:17,622 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():242) - 
2014-06-27 16:40:17,623 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():243) - * * * * * * * * * * *
2014-06-27 16:40:17,623 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():244) - *                   *
2014-06-27 16:40:17,625 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():245) - *    Schema HTML    *
2014-06-27 16:40:17,626 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - *                   *
2014-06-27 16:40:17,627 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2014-06-27 16:40:17,792 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-27 16:40:17,872 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("doc/ControlDocument.vm", c);
2014-06-27 16:40:17,946 [main] INFO  (Database#doEnableDocumentOutputDirectory():1180) - ...Setting up documentOutputDirectory: ./output/doc
2014-06-27 16:40:17,955 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-27 16:40:17,956 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-27 16:40:17,958 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-27 16:40:17,960 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-27 16:40:17,960 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-27 16:40:17,962 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-27 16:40:17,964 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-27 16:40:17,965 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-27 16:40:17,968 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-27 16:40:17,978 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():150) - ...Loading schema history
2014-06-27 16:40:18,024 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():154) -  -> found history: count=16
2014-06-27 16:40:18,271 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-27 16:40:18,287 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s715ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Doc}
2014-06-27 16:40:21,208 [main] INFO  (TorqueDataModelTask#begin():105) - +------------------------------------------+
2014-06-27 16:40:21,210 [main] INFO  (TorqueDataModelTask#begin():106) - |                                          |
2014-06-27 16:40:21,211 [main] INFO  (TorqueDataModelTask#begin():107) - |                 Generate                 |
2014-06-27 16:40:21,212 [main] INFO  (TorqueDataModelTask#begin():108) - |                                          |
2014-06-27 16:40:21,213 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2014-06-27 16:40:21,253 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 16:40:21,254 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 16:40:21,255 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 16:40:21,257 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 16:40:21,279 [main] INFO  (TorqueDataModelTask#setupControlTemplate():160) - 
2014-06-27 16:40:21,280 [main] INFO  (TorqueDataModelTask#setupControlTemplate():161) - ...Using Java control: om/ControlGenerateJava.vm
2014-06-27 16:40:21,457 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-27 16:40:21,509 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlGenerateJava.vm", c);
2014-06-27 16:40:21,667 [main] INFO  (Database#doEnableGenerateOutputDirectory():1148) - ...Setting up generateOutputDirectory: ../src/main/java
2014-06-27 16:40:21,675 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-06-27 16:40:21,675 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-06-27 16:40:21,678 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-06-27 16:40:21,681 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-06-27 16:40:21,681 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-06-27 16:40:21,685 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-06-27 16:40:21,688 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-06-27 16:40:21,689 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-06-27 16:40:21,693 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-06-27 16:40:21,716 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - /=============================
2014-06-27 16:40:21,716 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():60) - ...Initializing include query.
2014-06-27 16:40:21,717 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - String
2014-06-27 16:40:21,719 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Number
2014-06-27 16:40:21,720 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Date
2014-06-27 16:40:21,722 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotEqual -> []
2014-06-27 16:40:21,723 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   InScope -> []
2014-06-27 16:40:21,725 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotInScope -> []
2014-06-27 16:40:21,726 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - OrderBy
2014-06-27 16:40:21,728 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():62) - ========/
2014-06-27 16:40:21,750 [main] INFO  (Database#info():2573) - public void parseAllCommon() {
2014-06-27 16:40:21,754 [main] INFO  (Database#info():2573) -     parse('DBCurrent');
2014-06-27 16:40:21,763 [main] INFO  (Database#info():2573) -     parse('DBFluteConfig');
2014-06-27 16:40:21,797 [main] INFO  (Database#info():2573) -     parse('DBFluteInitializer');
2014-06-27 16:40:21,808 [main] INFO  (Database#info():2573) -     parse('DBMetaInstanceHandler');
2014-06-27 16:40:21,830 [main] INFO  (Database#info():2573) -     parse('EntityDefinedCommonColumn');
2014-06-27 16:40:21,835 [main] INFO  (Database#info():2573) -     parse('ImplementedBehaviorSelector');
2014-06-27 16:40:21,840 [main] INFO  (Database#info():2573) -     parse('ImplementedCommonColumnAutoSetupper');
2014-06-27 16:40:21,846 [main] INFO  (Database#info():2573) -     parse('ImplementedInvokerAssistant');
2014-06-27 16:40:21,850 [main] INFO  (Database#info():2573) -     parse('ImplementedSqlClauseCreator');
2014-06-27 16:40:21,853 [main] INFO  (Database#info():2573) - }
2014-06-27 16:40:21,854 [main] INFO  (Database#info():2573) - public void parseContainerConfig() {
2014-06-27 16:40:21,856 [main] INFO  (Database#info():2573) -     parse('../resources/dbflute.dicon')
2014-06-27 16:40:21,863 [main] INFO  (Database#info():2573) - }
2014-06-27 16:40:21,868 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldTableClass() {
2014-06-27 16:40:21,890 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-06-27 16:40:21,891 [main] INFO  (Database#info():2573) - public void parseTableClass() {
2014-06-27 16:40:21,892 [main] INFO  (Database#info():2573) -     parse('follow');
2014-06-27 16:40:22,147 [main] INFO  (Database#info():2573) -     parse('login');
2014-06-27 16:40:22,288 [main] INFO  (Database#info():2573) -     parse('member');
2014-06-27 16:40:22,600 [main] INFO  (Database#info():2573) -     parse('member_security');
2014-06-27 16:40:22,766 [main] INFO  (Database#info():2573) -     parse('member_withdraw');
2014-06-27 16:40:22,874 [main] INFO  (Database#info():2573) -     parse('tweet');
2014-06-27 16:40:22,972 [main] INFO  (Database#info():2573) - }
2014-06-27 16:40:22,973 [main] INFO  (Database#info():2573) -  
2014-06-27 16:40:23,000 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-27 16:40:23,007 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s797ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Generate}
2014-06-27 16:40:24,071 [main] INFO  (DfOutsideSqlTestTask#begin():72) - +------------------------------------------+
2014-06-27 16:40:24,074 [main] INFO  (DfOutsideSqlTestTask#begin():73) - |                                          |
2014-06-27 16:40:24,075 [main] INFO  (DfOutsideSqlTestTask#begin():74) - |              OutsideSqlTest              |
2014-06-27 16:40:24,075 [main] INFO  (DfOutsideSqlTestTask#begin():75) - |                                          |
2014-06-27 16:40:24,077 [main] INFO  (DfOutsideSqlTestTask#begin():76) - +------------------------------------------+
2014-06-27 16:40:24,127 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 16:40:24,127 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 16:40:24,128 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 16:40:24,129 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 16:40:24,172 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-27 16:40:24,177 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s102ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2014-06-27 16:40:25,114 [main] INFO  (DfSql2EntityTask#begin():100) - +------------------------------------------+
2014-06-27 16:40:25,116 [main] INFO  (DfSql2EntityTask#begin():101) - |                                          |
2014-06-27 16:40:25,117 [main] INFO  (DfSql2EntityTask#begin():102) - |                Sql2Entity                |
2014-06-27 16:40:25,117 [main] INFO  (DfSql2EntityTask#begin():103) - |                                          |
2014-06-27 16:40:25,119 [main] INFO  (DfSql2EntityTask#begin():104) - +------------------------------------------+
2014-06-27 16:40:25,171 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-06-27 16:40:25,172 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-06-27 16:40:25,173 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-06-27 16:40:25,174 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-06-27 16:40:25,193 [main] INFO  (DfSql2EntityTask#setupControlTemplate():170) - 
2014-06-27 16:40:25,194 [main] INFO  (DfSql2EntityTask#setupControlTemplate():171) - ...Using Java control: om/ControlSql2EntityJava.vm
2014-06-27 16:40:25,202 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-06-27 16:40:25,249 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-06-27 16:40:25,393 [main] INFO  (DfSql2EntityTask#initControlContext():301) - 
2014-06-27 16:40:25,393 [main] INFO  (DfSql2EntityTask#initControlContext():302) - ...Preparing generation of customize-entities and parameter-beans
2014-06-27 16:40:25,394 [main] INFO  (DfSql2EntityTask#initControlContext():303) - * * * * * * * * * *
2014-06-27 16:40:25,395 [main] INFO  (DfSql2EntityTask#initControlContext():304) - * CustomizeEntity *
2014-06-27 16:40:25,397 [main] INFO  (DfSql2EntityTask#initControlContext():305) - * * * * * * * * * *
2014-06-27 16:40:25,398 [main] INFO  (DfSql2EntityTask#showParameterBean():879) - * * * * * * * * *
2014-06-27 16:40:25,399 [main] INFO  (DfSql2EntityTask#showParameterBean():880) - * ParameterBean *
2014-06-27 16:40:25,401 [main] INFO  (DfSql2EntityTask#showParameterBean():881) - * * * * * * * * *
2014-06-27 16:40:25,406 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlSql2EntityJava.vm", c);
2014-06-27 16:40:25,515 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1164) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2014-06-27 16:40:25,518 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldCustomizeClass() {
2014-06-27 16:40:25,528 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-06-27 16:40:25,529 [main] INFO  (Database#info():2573) - public void parseCustomizeEntity() {
2014-06-27 16:40:25,531 [main] INFO  (Database#info():2573) - }
2014-06-27 16:40:25,544 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():293) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2014-06-27 16:40:25,553 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-06-27 16:40:25,559 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s443ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
