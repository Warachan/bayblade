2014-07-01 13:32:14,614 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{6, Mihajlovic@gmail.com, FreeKick, 1969/02/20, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:32:14,616 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 13:32:14,631 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 6 rows are loaded to MEMBER
2014-07-01 13:32:14,634 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 1, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:32:14,635 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 2, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:32:14,636 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{3, 3, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:32:14,637 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{4, 4, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:32:14,637 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{5, 5, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:32:14,639 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 13:32:14,653 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 5 rows are loaded to LOGIN
2014-07-01 13:32:14,655 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:32:14,656 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:32:14,657 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{3, ccc, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:32:14,658 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{4, ddd, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:32:14,659 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{5, eee2, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:32:14,660 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{6, fff, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:32:14,662 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 13:32:14,667 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 6 rows are loaded to MEMBER_SECURITY
2014-07-01 13:32:14,670 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:32:14,673 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{2, 2345, 清君頼りになるー！, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:32:14,675 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{3, 3456, GLD, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:32:14,676 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{4, 875, BRZ, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:32:14,677 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{5, 1111, BRZ, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:32:14,679 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{6, 5422, SIL, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:32:14,680 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 13:32:14,696 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 6 rows are loaded to TWEET
2014-07-01 13:32:14,697 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{1, 1, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123}
2014-07-01 13:32:14,700 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{2, 1, null, 2007/11/11 16:00:00.456}
2014-07-01 13:32:14,701 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{3, 2, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789}
2014-07-01 13:32:14,704 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{4, 3, コバチが２人いるため, 2007/11/13 16:00:00.456}
2014-07-01 13:32:14,711 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 4 rows are loaded to MEMBER_WITHDRAW
2014-07-01 13:32:14,712 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - FOLLOW:{0, 1, 1, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:32:14,717 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 1 rows are loaded to FOLLOW
2014-07-01 13:32:14,721 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():379) - ...Checking implicit set of classification
2014-07-01 13:32:14,733 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - 
2014-07-01 13:32:14,734 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * * * * * * * **
2014-07-01 13:32:14,735 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2014-07-01 13:32:14,736 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * Take Finally *
2014-07-01 13:32:14,737 [main] INFO  (DfTakeFinallyProcess#takeFinally():225) - *              *
2014-07-01 13:32:14,738 [main] INFO  (DfTakeFinallyProcess#takeFinally():226) - * * * * * * * **
2014-07-01 13:32:14,753 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: take-finally.sql
2014-07-01 13:32:14,754 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2014-07-01 13:32:14,755 [main] INFO  (DfSqlFileFireMan#fire():90) - {Take Finally}: success=0 failure=0 (in 1 files)
2014-07-01 13:32:14,756 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-07-01 13:32:14,760 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m03s621ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=14 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=1
  (ut)
  o 20-member.xls

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-07-01 13:32:15,660 [main] INFO  (TorqueJDBCTransformTask#begin():100) - +------------------------------------------+
2014-07-01 13:32:15,663 [main] INFO  (TorqueJDBCTransformTask#begin():101) - |                                          |
2014-07-01 13:32:15,663 [main] INFO  (TorqueJDBCTransformTask#begin():102) - |                   JDBC                   |
2014-07-01 13:32:15,664 [main] INFO  (TorqueJDBCTransformTask#begin():103) - |                                          |
2014-07-01 13:32:15,665 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2014-07-01 13:32:15,705 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 13:32:15,705 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 13:32:15,706 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 13:32:15,706 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 13:32:15,748 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2014-07-01 13:32:15,749 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2014-07-01 13:32:15,750 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1469) - ...Loading previous schema (schema diff process)
2014-07-01 13:32:15,758 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-01 13:32:15,824 [main] INFO  (DfSchemaXmlSerializer#generateXML():361) - ...Getting DB connection
2014-07-01 13:32:15,828 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-07-01 13:32:16,006 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-07-01 13:32:16,007 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-07-01 13:32:16,009 [main] INFO  (DfSchemaXmlSerializer#generateXML():364) - ...Getting DB meta data
2014-07-01 13:32:16,011 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-01 13:32:16,012 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-01 13:32:16,013 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-01 13:32:16,024 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2014-07-01 13:32:16,028 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2014-07-01 13:32:16,041 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - 
2014-07-01 13:32:16,042 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2014-07-01 13:32:16,042 [main] INFO  (DfSchemaXmlSerializer#processTable():423) - $ [Table List]
2014-07-01 13:32:16,043 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.follow(TABLE) // フォロー
2014-07-01 13:32:16,081 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.login(TABLE) // ログイン
2014-07-01 13:32:16,097 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member(TABLE) // 会員
2014-07-01 13:32:16,112 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_security(TABLE) // 会員セキュリティ
2014-07-01 13:32:16,126 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_withdraw(TABLE) // 会員退会
2014-07-01 13:32:16,139 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.tweet(TABLE) // TWEET
2014-07-01 13:32:16,154 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 
2014-07-01 13:32:16,154 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ [Table Count]
2014-07-01 13:32:16,155 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ 6
2014-07-01 13:32:16,156 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - $ = = = = = = = = = =/
2014-07-01 13:32:16,172 [main] INFO  (DfSchemaXmlSerializer#processTable():439) - 
2014-07-01 13:32:16,174 [main] INFO  (DfSchemaXmlSerializer#processSequence():799) - ...Getting sequences
2014-07-01 13:32:16,181 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2014-07-01 13:32:16,183 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-twitter.xml
2014-07-01 13:32:16,184 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2014-07-01 13:32:16,210 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1487) - ...Loading next schema (schema diff process)
2014-07-01 13:32:16,213 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-01 13:32:16,272 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1492) -  -> different from previous (schema diff)
2014-07-01 13:32:16,274 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1494) - ...Serializing schema-diff:
2014-07-01 13:32:16,274 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1495) -   filePath = ./schema/project-history-twitter.diffmap
2014-07-01 13:32:16,333 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-07-01 13:32:16,339 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s675ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2014-07-01 13:32:17,309 [main] INFO  (TorqueDocumentationTask#begin():171) - +------------------------------------------+
2014-07-01 13:32:17,313 [main] INFO  (TorqueDocumentationTask#begin():172) - |                                          |
2014-07-01 13:32:17,314 [main] INFO  (TorqueDocumentationTask#begin():173) - |                   Doc                    |
2014-07-01 13:32:17,315 [main] INFO  (TorqueDocumentationTask#begin():181) - |                                          |
2014-07-01 13:32:17,316 [main] INFO  (TorqueDocumentationTask#begin():182) - +------------------------------------------+
2014-07-01 13:32:17,377 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 13:32:17,378 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 13:32:17,379 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 13:32:17,380 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 13:32:17,384 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():242) - 
2014-07-01 13:32:17,385 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():243) - * * * * * * * * * * *
2014-07-01 13:32:17,385 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():244) - *                   *
2014-07-01 13:32:17,386 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():245) - *    Schema HTML    *
2014-07-01 13:32:17,387 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - *                   *
2014-07-01 13:32:17,388 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2014-07-01 13:32:17,551 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-01 13:32:17,609 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("doc/ControlDocument.vm", c);
2014-07-01 13:32:17,672 [main] INFO  (Database#doEnableDocumentOutputDirectory():1180) - ...Setting up documentOutputDirectory: ./output/doc
2014-07-01 13:32:17,682 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-07-01 13:32:17,682 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-07-01 13:32:17,684 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-07-01 13:32:17,686 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-07-01 13:32:17,687 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-07-01 13:32:17,689 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-07-01 13:32:17,692 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-07-01 13:32:17,692 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-07-01 13:32:17,695 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-07-01 13:32:17,703 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():150) - ...Loading schema history
2014-07-01 13:32:17,781 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():154) -  -> found history: count=19
2014-07-01 13:32:17,981 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-01 13:32:17,994 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s681ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Doc}
2014-07-01 13:32:20,901 [main] INFO  (TorqueDataModelTask#begin():105) - +------------------------------------------+
2014-07-01 13:32:20,904 [main] INFO  (TorqueDataModelTask#begin():106) - |                                          |
2014-07-01 13:32:20,905 [main] INFO  (TorqueDataModelTask#begin():107) - |                 Generate                 |
2014-07-01 13:32:20,905 [main] INFO  (TorqueDataModelTask#begin():108) - |                                          |
2014-07-01 13:32:20,906 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2014-07-01 13:32:20,962 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 13:32:20,962 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 13:32:20,963 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 13:32:20,964 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 13:32:20,988 [main] INFO  (TorqueDataModelTask#setupControlTemplate():160) - 
2014-07-01 13:32:20,988 [main] INFO  (TorqueDataModelTask#setupControlTemplate():161) - ...Using Java control: om/ControlGenerateJava.vm
2014-07-01 13:32:21,136 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-01 13:32:21,194 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlGenerateJava.vm", c);
2014-07-01 13:32:21,304 [main] INFO  (Database#doEnableGenerateOutputDirectory():1148) - ...Setting up generateOutputDirectory: ../src/main/java
2014-07-01 13:32:21,313 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-07-01 13:32:21,314 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-07-01 13:32:21,317 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-07-01 13:32:21,320 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-07-01 13:32:21,322 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-07-01 13:32:21,325 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-07-01 13:32:21,328 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-07-01 13:32:21,329 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-07-01 13:32:21,333 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-07-01 13:32:21,349 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - /=============================
2014-07-01 13:32:21,349 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():60) - ...Initializing include query.
2014-07-01 13:32:21,350 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - String
2014-07-01 13:32:21,351 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Number
2014-07-01 13:32:21,352 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Date
2014-07-01 13:32:21,352 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotEqual -> []
2014-07-01 13:32:21,353 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   InScope -> []
2014-07-01 13:32:21,353 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotInScope -> []
2014-07-01 13:32:21,354 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - OrderBy
2014-07-01 13:32:21,355 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():62) - ========/
2014-07-01 13:32:21,371 [main] INFO  (Database#info():2573) - public void parseAllCommon() {
2014-07-01 13:32:21,374 [main] INFO  (Database#info():2573) -     parse('DBCurrent');
2014-07-01 13:32:21,382 [main] INFO  (Database#info():2573) -     parse('DBFluteConfig');
2014-07-01 13:32:21,417 [main] INFO  (Database#info():2573) -     parse('DBFluteInitializer');
2014-07-01 13:32:21,423 [main] INFO  (Database#info():2573) -     parse('DBMetaInstanceHandler');
2014-07-01 13:32:21,445 [main] INFO  (Database#info():2573) -     parse('EntityDefinedCommonColumn');
2014-07-01 13:32:21,451 [main] INFO  (Database#info():2573) -     parse('ImplementedBehaviorSelector');
2014-07-01 13:32:21,455 [main] INFO  (Database#info():2573) -     parse('ImplementedCommonColumnAutoSetupper');
2014-07-01 13:32:21,459 [main] INFO  (Database#info():2573) -     parse('ImplementedInvokerAssistant');
2014-07-01 13:32:21,462 [main] INFO  (Database#info():2573) -     parse('ImplementedSqlClauseCreator');
2014-07-01 13:32:21,464 [main] INFO  (Database#info():2573) - }
2014-07-01 13:32:21,465 [main] INFO  (Database#info():2573) - public void parseContainerConfig() {
2014-07-01 13:32:21,466 [main] INFO  (Database#info():2573) -     parse('../resources/dbflute.dicon')
2014-07-01 13:32:21,473 [main] INFO  (Database#info():2573) - }
2014-07-01 13:32:21,478 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldTableClass() {
2014-07-01 13:32:21,499 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-07-01 13:32:21,500 [main] INFO  (Database#info():2573) - public void parseTableClass() {
2014-07-01 13:32:21,502 [main] INFO  (Database#info():2573) -     parse('follow');
2014-07-01 13:32:21,824 [main] INFO  (Database#info():2573) -     parse('login');
2014-07-01 13:32:21,991 [main] INFO  (Database#info():2573) -     parse('member');
2014-07-01 13:32:22,264 [main] INFO  (Database#info():2573) -     parse('member_security');
2014-07-01 13:32:22,383 [main] INFO  (Database#info():2573) -     parse('member_withdraw');
2014-07-01 13:32:22,537 [main] INFO  (Database#info():2573) -     parse('tweet');
2014-07-01 13:32:22,665 [main] INFO  (Database#info():2573) - }
2014-07-01 13:32:22,665 [main] INFO  (Database#info():2573) -  
2014-07-01 13:32:22,689 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-01 13:32:22,697 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s791ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Generate}
2014-07-01 13:32:23,571 [main] INFO  (DfOutsideSqlTestTask#begin():72) - +------------------------------------------+
2014-07-01 13:32:23,575 [main] INFO  (DfOutsideSqlTestTask#begin():73) - |                                          |
2014-07-01 13:32:23,575 [main] INFO  (DfOutsideSqlTestTask#begin():74) - |              OutsideSqlTest              |
2014-07-01 13:32:23,576 [main] INFO  (DfOutsideSqlTestTask#begin():75) - |                                          |
2014-07-01 13:32:23,576 [main] INFO  (DfOutsideSqlTestTask#begin():76) - +------------------------------------------+
2014-07-01 13:32:23,632 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 13:32:23,632 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 13:32:23,633 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 13:32:23,634 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 13:32:23,667 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-07-01 13:32:23,673 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s097ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2014-07-01 13:32:24,469 [main] INFO  (DfSql2EntityTask#begin():100) - +------------------------------------------+
2014-07-01 13:32:24,472 [main] INFO  (DfSql2EntityTask#begin():101) - |                                          |
2014-07-01 13:32:24,491 [main] INFO  (DfSql2EntityTask#begin():102) - |                Sql2Entity                |
2014-07-01 13:32:24,492 [main] INFO  (DfSql2EntityTask#begin():103) - |                                          |
2014-07-01 13:32:24,492 [main] INFO  (DfSql2EntityTask#begin():104) - +------------------------------------------+
2014-07-01 13:32:24,531 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 13:32:24,532 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 13:32:24,532 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 13:32:24,533 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 13:32:24,549 [main] INFO  (DfSql2EntityTask#setupControlTemplate():170) - 
2014-07-01 13:32:24,550 [main] INFO  (DfSql2EntityTask#setupControlTemplate():171) - ...Using Java control: om/ControlSql2EntityJava.vm
2014-07-01 13:32:24,559 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-01 13:32:24,609 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-07-01 13:32:24,744 [main] INFO  (DfSql2EntityTask#initControlContext():301) - 
2014-07-01 13:32:24,745 [main] INFO  (DfSql2EntityTask#initControlContext():302) - ...Preparing generation of customize-entities and parameter-beans
2014-07-01 13:32:24,745 [main] INFO  (DfSql2EntityTask#initControlContext():303) - * * * * * * * * * *
2014-07-01 13:32:24,746 [main] INFO  (DfSql2EntityTask#initControlContext():304) - * CustomizeEntity *
2014-07-01 13:32:24,746 [main] INFO  (DfSql2EntityTask#initControlContext():305) - * * * * * * * * * *
2014-07-01 13:32:24,747 [main] INFO  (DfSql2EntityTask#showParameterBean():879) - * * * * * * * * *
2014-07-01 13:32:24,748 [main] INFO  (DfSql2EntityTask#showParameterBean():880) - * ParameterBean *
2014-07-01 13:32:24,748 [main] INFO  (DfSql2EntityTask#showParameterBean():881) - * * * * * * * * *
2014-07-01 13:32:24,753 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlSql2EntityJava.vm", c);
2014-07-01 13:32:24,855 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1164) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2014-07-01 13:32:24,858 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldCustomizeClass() {
2014-07-01 13:32:24,869 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-07-01 13:32:24,869 [main] INFO  (Database#info():2573) - public void parseCustomizeEntity() {
2014-07-01 13:32:24,872 [main] INFO  (Database#info():2573) - }
2014-07-01 13:32:24,885 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():293) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2014-07-01 13:32:24,890 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-01 13:32:24,897 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s423ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2014-07-01 13:34:17,138 [main] INFO  (DfReplaceSchemaTask#begin():87) - +------------------------------------------+
2014-07-01 13:34:17,141 [main] INFO  (DfReplaceSchemaTask#begin():88) - |                                          |
2014-07-01 13:34:17,142 [main] INFO  (DfReplaceSchemaTask#begin():89) - |              ReplaceSchema               |
2014-07-01 13:34:17,163 [main] INFO  (DfReplaceSchemaTask#begin():97) - |                                          |
2014-07-01 13:34:17,164 [main] INFO  (DfReplaceSchemaTask#begin():98) - +------------------------------------------+
2014-07-01 13:34:17,166 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():329) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2014-07-01 13:34:18,450 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 13:34:18,452 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 13:34:18,453 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 13:34:18,454 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 13:34:18,476 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-07-01 13:34:18,698 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-07-01 13:34:18,698 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-07-01 13:34:18,717 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():207) - 
2014-07-01 13:34:18,718 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():208) - * * * * * * * * * * *
2014-07-01 13:34:18,718 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():209) - *                   *
2014-07-01 13:34:18,719 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():210) - * Initialize Schema *
2014-07-01 13:34:18,720 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():211) - *                   *
2014-07-01 13:34:18,720 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():212) - * * * * * * * * * * *
2014-07-01 13:34:18,738 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-01 13:34:18,738 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-01 13:34:18,739 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-01 13:34:18,795 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table follow
2014-07-01 13:34:18,833 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table login
2014-07-01 13:34:18,867 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_security
2014-07-01 13:34:18,908 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_withdraw
2014-07-01 13:34:18,960 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table tweet
2014-07-01 13:34:18,994 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_1
2014-07-01 13:34:19,013 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_2
2014-07-01 13:34:19,023 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table login drop foreign key login_ibfk_1
2014-07-01 13:34:19,033 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_security drop foreign key member_security_ibfk_1
2014-07-01 13:34:19,044 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_withdraw drop foreign key member_withdraw_ibfk_1
2014-07-01 13:34:19,060 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table tweet drop foreign key tweet_ibfk_1
2014-07-01 13:34:19,077 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table follow
2014-07-01 13:34:19,099 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table login
2014-07-01 13:34:19,121 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member
2014-07-01 13:34:19,148 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_security
2014-07-01 13:34:19,175 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_withdraw
2014-07-01 13:34:19,195 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table tweet
2014-07-01 13:34:19,277 [main] INFO  (DfCreateSchemaProcess#createSchema():244) - 
2014-07-01 13:34:19,277 [main] INFO  (DfCreateSchemaProcess#createSchema():245) - * * * * * * * * *
2014-07-01 13:34:19,278 [main] INFO  (DfCreateSchemaProcess#createSchema():246) - *               *
2014-07-01 13:34:19,278 [main] INFO  (DfCreateSchemaProcess#createSchema():247) - * Create Schema *
2014-07-01 13:34:19,279 [main] INFO  (DfCreateSchemaProcess#createSchema():248) - *               *
2014-07-01 13:34:19,281 [main] INFO  (DfCreateSchemaProcess#createSchema():249) - * * * * * * * * *
2014-07-01 13:34:19,286 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-00-system.sql
2014-07-01 13:34:19,289 [main] INFO  (DfReplaceSchemaProperties#checkTargetEnvType():277) - ...Checking envType: ut in [ut]
2014-07-01 13:34:19,290 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:checkEnv(ut)#

-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database twitter
2014-07-01 13:34:19,293 [main] INFO  (DfCreateSchemaProcess$1#dispatch():273) - ...Creating a connection to system
2014-07-01 13:34:19,295 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():514) - ...Creating a connection for additional user: root
2014-07-01 13:34:19,311 [main] INFO  (DfCreateSchemaProcess$1#dispatch():299) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2014-07-01 13:34:19,312 [main] INFO  (DfCreateSchemaProcess$1#dispatch():301) -  -> Can't create database 'twitter'; database exists
2014-07-01 13:34:19,314 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():411) - ...Reviving the user 'system' until the end of this SQL file
2014-07-01 13:34:19,315 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on twitter.*
  to twitter@localhost identified by 'twitter'
2014-07-01 13:34:19,319 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2014-07-01 13:34:19,322 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2014-07-01 13:34:19,323 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-10-basic.sql
2014-07-01 13:34:19,324 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():348) - ...Saying good-bye to the user 'system' again
2014-07-01 13:34:19,325 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():352) - ...Clearing revived users
2014-07-01 13:34:19,326 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():359) - ...Coming back to the main user from the user 'system'
2014-07-01 13:34:19,328 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FOLLOW
(
	FOLLOW_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'フォローID',
	YOU_ID INT(100) NOT NULL UNIQUE COMMENT 'フォローする人のID : 会員のID
',
	ME_ID INT(100) NOT NULL COMMENT 'フォローされる人のID : 会員のID
',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (FOLLOW_ID)
) COMMENT = 'フォロー'
2014-07-01 13:34:19,370 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE LOGIN
(
	LOGIN_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ログインID : ログインした瞬間のID
',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	INS_DATETIME DATETIME NOT NULL COMMENT 'Insert日時',
	INS_TRACE VARCHAR(256) COMMENT 'INS_TRACE',
	PRIMARY KEY (LOGIN_ID)
) COMMENT = 'ログイン'
2014-07-01 13:34:19,418 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER
(
	MEMBER_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員のID
',
	EMAIL_ADDRESS VARCHAR(100) NOT NULL UNIQUE COMMENT 'メールアドレス : 会員のメールアドレス',
	USER_NAME VARCHAR(50) NOT NULL UNIQUE COMMENT '会員ユーザ名 : 会員のユーザ名',
	BIRTHDATE DATE COMMENT '生年月日 : 会員の生年月日',
	PROFILE VARCHAR(200) COMMENT 'プロフィール',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員'
2014-07-01 13:34:19,511 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PASSWORD VARCHAR(50) NOT NULL COMMENT 'パスワード',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員セキュリティ'
2014-07-01 13:34:19,571 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_WITHDRAW
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	WITHDRAWAL_REASON_ID INT COMMENT '退会理由ID : 会員の退会理由ID',
	WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト',
	WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT 'withdrawal_datetime : 退会日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員退会'
2014-07-01 13:34:19,637 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-07-01 13:34:19,698 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FOLLOW
	ADD FOREIGN KEY (ME_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 13:34:19,808 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD FOREIGN KEY (YOU_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 13:34:19,911 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 13:34:20,008 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 13:34:20,104 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_WITHDRAW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 13:34:20,212 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 13:34:20,320 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=12 failure=0
2014-07-01 13:34:20,323 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=14 failure=0 (in 2 files)
2014-07-01 13:34:20,325 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-07-01 13:34:20,371 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-07-01 13:34:20,372 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-07-01 13:34:20,372 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-07-01 13:34:20,373 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-07-01 13:34:20,373 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-07-01 13:34:20,374 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-07-01 13:34:20,397 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-07-01 13:34:20,397 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-07-01 13:34:20,398 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-07-01 13:34:20,735 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-01 13:34:20,736 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-01 13:34:20,737 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-01 13:34:20,808 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{1, Stojkovic@gmail.com, Pixy, 1965/03/03, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:34:20,858 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{2, Savicevic@gmail.com, Genius, 1966/09/15, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:34:20,860 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{3, Mijatovic@gmail.com, Mijato, null, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:34:20,861 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{4, Stankovic@gmail.com, Stanko, 1978/09/11, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:34:20,862 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{5, Milosevic@gmail.com, Milose, null, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:34:20,864 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{6, Mihajlovic@gmail.com, FreeKick, 1969/02/20, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:34:20,865 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 13:34:20,876 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 6 rows are loaded to MEMBER
2014-07-01 13:34:20,879 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 1, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:34:20,880 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 2, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:34:20,881 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{3, 3, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:34:20,882 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{4, 4, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:34:20,883 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{5, 5, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:34:20,885 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 13:34:20,896 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 5 rows are loaded to LOGIN
2014-07-01 13:34:20,898 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:34:20,900 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:34:20,901 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{3, ccc, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:34:20,902 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{4, ddd, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:34:20,903 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{5, eee2, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:34:20,904 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{6, fff, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:34:20,905 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 13:34:20,914 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 6 rows are loaded to MEMBER_SECURITY
2014-07-01 13:34:20,916 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:34:20,919 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{2, 2345, 清君頼りになるー！, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:34:20,922 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{3, 3456, GLD, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:34:20,923 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{4, 875, BRZ, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:34:20,924 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{5, 1111, BRZ, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:34:20,925 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{6, 5422, SIL, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:34:20,926 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 13:34:20,932 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 6 rows are loaded to TWEET
2014-07-01 13:34:20,934 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{1, 1, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123}
2014-07-01 13:34:20,937 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{2, 1, null, 2007/11/11 16:00:00.456}
2014-07-01 13:34:20,938 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{3, 2, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789}
2014-07-01 13:34:20,940 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{4, 3, コバチが２人いるため, 2007/11/13 16:00:00.456}
2014-07-01 13:34:20,952 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 4 rows are loaded to MEMBER_WITHDRAW
2014-07-01 13:34:20,953 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - FOLLOW:{0, 1, 1, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:34:20,958 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 1 rows are loaded to FOLLOW
2014-07-01 13:34:20,962 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():379) - ...Checking implicit set of classification
2014-07-01 13:34:20,975 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - 
2014-07-01 13:34:20,976 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * * * * * * * **
2014-07-01 13:34:20,977 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2014-07-01 13:34:20,978 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * Take Finally *
2014-07-01 13:34:20,978 [main] INFO  (DfTakeFinallyProcess#takeFinally():225) - *              *
2014-07-01 13:34:20,979 [main] INFO  (DfTakeFinallyProcess#takeFinally():226) - * * * * * * * **
2014-07-01 13:34:20,989 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: take-finally.sql
2014-07-01 13:34:20,994 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2014-07-01 13:34:20,995 [main] INFO  (DfSqlFileFireMan#fire():90) - {Take Finally}: success=0 failure=0 (in 1 files)
2014-07-01 13:34:20,997 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-07-01 13:34:21,002 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m03s860ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=14 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=1
  (ut)
  o 20-member.xls

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-07-01 13:34:21,904 [main] INFO  (TorqueJDBCTransformTask#begin():100) - +------------------------------------------+
2014-07-01 13:34:21,906 [main] INFO  (TorqueJDBCTransformTask#begin():101) - |                                          |
2014-07-01 13:34:21,907 [main] INFO  (TorqueJDBCTransformTask#begin():102) - |                   JDBC                   |
2014-07-01 13:34:21,907 [main] INFO  (TorqueJDBCTransformTask#begin():103) - |                                          |
2014-07-01 13:34:21,908 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2014-07-01 13:34:21,947 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 13:34:21,947 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 13:34:21,948 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 13:34:21,948 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 13:34:21,992 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2014-07-01 13:34:21,992 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2014-07-01 13:34:21,993 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1469) - ...Loading previous schema (schema diff process)
2014-07-01 13:34:22,001 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-01 13:34:22,065 [main] INFO  (DfSchemaXmlSerializer#generateXML():361) - ...Getting DB connection
2014-07-01 13:34:22,069 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-07-01 13:34:22,257 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-07-01 13:34:22,257 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-07-01 13:34:22,260 [main] INFO  (DfSchemaXmlSerializer#generateXML():364) - ...Getting DB meta data
2014-07-01 13:34:22,263 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-01 13:34:22,263 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-01 13:34:22,264 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-01 13:34:22,274 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2014-07-01 13:34:22,277 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2014-07-01 13:34:22,290 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - 
2014-07-01 13:34:22,291 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2014-07-01 13:34:22,292 [main] INFO  (DfSchemaXmlSerializer#processTable():423) - $ [Table List]
2014-07-01 13:34:22,293 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.follow(TABLE) // フォロー
2014-07-01 13:34:22,331 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.login(TABLE) // ログイン
2014-07-01 13:34:22,347 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member(TABLE) // 会員
2014-07-01 13:34:22,363 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_security(TABLE) // 会員セキュリティ
2014-07-01 13:34:22,379 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_withdraw(TABLE) // 会員退会
2014-07-01 13:34:22,393 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.tweet(TABLE) // TWEET
2014-07-01 13:34:22,408 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 
2014-07-01 13:34:22,409 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ [Table Count]
2014-07-01 13:34:22,410 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ 6
2014-07-01 13:34:22,411 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - $ = = = = = = = = = =/
2014-07-01 13:34:22,432 [main] INFO  (DfSchemaXmlSerializer#processTable():439) - 
2014-07-01 13:34:22,434 [main] INFO  (DfSchemaXmlSerializer#processSequence():799) - ...Getting sequences
2014-07-01 13:34:22,438 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2014-07-01 13:34:22,442 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-twitter.xml
2014-07-01 13:34:22,443 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2014-07-01 13:34:22,473 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1487) - ...Loading next schema (schema diff process)
2014-07-01 13:34:22,476 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-01 13:34:22,528 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1492) -  -> different from previous (schema diff)
2014-07-01 13:34:22,529 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1494) - ...Serializing schema-diff:
2014-07-01 13:34:22,530 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1495) -   filePath = ./schema/project-history-twitter.diffmap
2014-07-01 13:34:22,573 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-07-01 13:34:22,579 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s671ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2014-07-01 13:34:23,541 [main] INFO  (TorqueDocumentationTask#begin():171) - +------------------------------------------+
2014-07-01 13:34:23,544 [main] INFO  (TorqueDocumentationTask#begin():172) - |                                          |
2014-07-01 13:34:23,544 [main] INFO  (TorqueDocumentationTask#begin():173) - |                   Doc                    |
2014-07-01 13:34:23,545 [main] INFO  (TorqueDocumentationTask#begin():181) - |                                          |
2014-07-01 13:34:23,545 [main] INFO  (TorqueDocumentationTask#begin():182) - +------------------------------------------+
2014-07-01 13:34:23,590 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 13:34:23,590 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 13:34:23,591 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 13:34:23,591 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 13:34:23,594 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():242) - 
2014-07-01 13:34:23,595 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():243) - * * * * * * * * * * *
2014-07-01 13:34:23,595 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():244) - *                   *
2014-07-01 13:34:23,596 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():245) - *    Schema HTML    *
2014-07-01 13:34:23,596 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - *                   *
2014-07-01 13:34:23,597 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2014-07-01 13:34:23,772 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-01 13:34:23,837 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("doc/ControlDocument.vm", c);
2014-07-01 13:34:23,895 [main] INFO  (Database#doEnableDocumentOutputDirectory():1180) - ...Setting up documentOutputDirectory: ./output/doc
2014-07-01 13:34:23,906 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-07-01 13:34:23,906 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-07-01 13:34:23,908 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-07-01 13:34:23,910 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-07-01 13:34:23,910 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-07-01 13:34:23,913 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-07-01 13:34:23,915 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-07-01 13:34:23,915 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-07-01 13:34:23,919 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-07-01 13:34:23,929 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():150) - ...Loading schema history
2014-07-01 13:34:24,001 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():154) -  -> found history: count=20
2014-07-01 13:34:24,240 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-01 13:34:24,254 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s709ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Doc}
2014-07-01 13:34:27,308 [main] INFO  (TorqueDataModelTask#begin():105) - +------------------------------------------+
2014-07-01 13:34:27,310 [main] INFO  (TorqueDataModelTask#begin():106) - |                                          |
2014-07-01 13:34:27,311 [main] INFO  (TorqueDataModelTask#begin():107) - |                 Generate                 |
2014-07-01 13:34:27,311 [main] INFO  (TorqueDataModelTask#begin():108) - |                                          |
2014-07-01 13:34:27,312 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2014-07-01 13:34:27,349 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 13:34:27,350 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 13:34:27,351 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 13:34:27,351 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 13:34:27,370 [main] INFO  (TorqueDataModelTask#setupControlTemplate():160) - 
2014-07-01 13:34:27,371 [main] INFO  (TorqueDataModelTask#setupControlTemplate():161) - ...Using Java control: om/ControlGenerateJava.vm
2014-07-01 13:34:27,507 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-01 13:34:27,570 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlGenerateJava.vm", c);
2014-07-01 13:34:27,717 [main] INFO  (Database#doEnableGenerateOutputDirectory():1148) - ...Setting up generateOutputDirectory: ../src/main/java
2014-07-01 13:34:27,725 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-07-01 13:34:27,725 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-07-01 13:34:27,727 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-07-01 13:34:27,729 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-07-01 13:34:27,729 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-07-01 13:34:27,732 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-07-01 13:34:27,734 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-07-01 13:34:27,735 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-07-01 13:34:27,738 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-07-01 13:34:27,753 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - /=============================
2014-07-01 13:34:27,754 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():60) - ...Initializing include query.
2014-07-01 13:34:27,754 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - String
2014-07-01 13:34:27,755 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Number
2014-07-01 13:34:27,756 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Date
2014-07-01 13:34:27,756 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotEqual -> []
2014-07-01 13:34:27,757 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   InScope -> []
2014-07-01 13:34:27,757 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotInScope -> []
2014-07-01 13:34:27,758 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - OrderBy
2014-07-01 13:34:27,758 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():62) - ========/
2014-07-01 13:34:27,773 [main] INFO  (Database#info():2573) - public void parseAllCommon() {
2014-07-01 13:34:27,775 [main] INFO  (Database#info():2573) -     parse('DBCurrent');
2014-07-01 13:34:27,780 [main] INFO  (Database#info():2573) -     parse('DBFluteConfig');
2014-07-01 13:34:27,801 [main] INFO  (Database#info():2573) -     parse('DBFluteInitializer');
2014-07-01 13:34:27,806 [main] INFO  (Database#info():2573) -     parse('DBMetaInstanceHandler');
2014-07-01 13:34:27,823 [main] INFO  (Database#info():2573) -     parse('EntityDefinedCommonColumn');
2014-07-01 13:34:27,827 [main] INFO  (Database#info():2573) -     parse('ImplementedBehaviorSelector');
2014-07-01 13:34:27,831 [main] INFO  (Database#info():2573) -     parse('ImplementedCommonColumnAutoSetupper');
2014-07-01 13:34:27,837 [main] INFO  (Database#info():2573) -     parse('ImplementedInvokerAssistant');
2014-07-01 13:34:27,840 [main] INFO  (Database#info():2573) -     parse('ImplementedSqlClauseCreator');
2014-07-01 13:34:27,843 [main] INFO  (Database#info():2573) - }
2014-07-01 13:34:27,843 [main] INFO  (Database#info():2573) - public void parseContainerConfig() {
2014-07-01 13:34:27,844 [main] INFO  (Database#info():2573) -     parse('../resources/dbflute.dicon')
2014-07-01 13:34:27,852 [main] INFO  (Database#info():2573) - }
2014-07-01 13:34:27,858 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldTableClass() {
2014-07-01 13:34:27,880 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-07-01 13:34:27,881 [main] INFO  (Database#info():2573) - public void parseTableClass() {
2014-07-01 13:34:27,883 [main] INFO  (Database#info():2573) -     parse('follow');
2014-07-01 13:34:28,207 [main] INFO  (Database#info():2573) -     parse('login');
2014-07-01 13:34:28,343 [main] INFO  (Database#info():2573) -     parse('member');
2014-07-01 13:34:28,649 [main] INFO  (Database#info():2573) -     parse('member_security');
2014-07-01 13:34:28,776 [main] INFO  (Database#info():2573) -     parse('member_withdraw');
2014-07-01 13:34:28,889 [main] INFO  (Database#info():2573) -     parse('tweet');
2014-07-01 13:34:28,990 [main] INFO  (Database#info():2573) - }
2014-07-01 13:34:28,990 [main] INFO  (Database#info():2573) -  
2014-07-01 13:34:29,018 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-01 13:34:29,026 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s713ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Generate}
2014-07-01 13:34:29,958 [main] INFO  (DfOutsideSqlTestTask#begin():72) - +------------------------------------------+
2014-07-01 13:34:29,961 [main] INFO  (DfOutsideSqlTestTask#begin():73) - |                                          |
2014-07-01 13:34:29,961 [main] INFO  (DfOutsideSqlTestTask#begin():74) - |              OutsideSqlTest              |
2014-07-01 13:34:29,962 [main] INFO  (DfOutsideSqlTestTask#begin():75) - |                                          |
2014-07-01 13:34:29,963 [main] INFO  (DfOutsideSqlTestTask#begin():76) - +------------------------------------------+
2014-07-01 13:34:30,013 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 13:34:30,013 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 13:34:30,014 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 13:34:30,015 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 13:34:30,061 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-07-01 13:34:30,068 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s104ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2014-07-01 13:34:30,954 [main] INFO  (DfSql2EntityTask#begin():100) - +------------------------------------------+
2014-07-01 13:34:30,957 [main] INFO  (DfSql2EntityTask#begin():101) - |                                          |
2014-07-01 13:34:30,957 [main] INFO  (DfSql2EntityTask#begin():102) - |                Sql2Entity                |
2014-07-01 13:34:30,958 [main] INFO  (DfSql2EntityTask#begin():103) - |                                          |
2014-07-01 13:34:30,958 [main] INFO  (DfSql2EntityTask#begin():104) - +------------------------------------------+
2014-07-01 13:34:30,999 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 13:34:30,999 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 13:34:31,000 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 13:34:31,001 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 13:34:31,018 [main] INFO  (DfSql2EntityTask#setupControlTemplate():170) - 
2014-07-01 13:34:31,018 [main] INFO  (DfSql2EntityTask#setupControlTemplate():171) - ...Using Java control: om/ControlSql2EntityJava.vm
2014-07-01 13:34:31,026 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-01 13:34:31,076 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-07-01 13:34:31,213 [main] INFO  (DfSql2EntityTask#initControlContext():301) - 
2014-07-01 13:34:31,214 [main] INFO  (DfSql2EntityTask#initControlContext():302) - ...Preparing generation of customize-entities and parameter-beans
2014-07-01 13:34:31,215 [main] INFO  (DfSql2EntityTask#initControlContext():303) - * * * * * * * * * *
2014-07-01 13:34:31,215 [main] INFO  (DfSql2EntityTask#initControlContext():304) - * CustomizeEntity *
2014-07-01 13:34:31,216 [main] INFO  (DfSql2EntityTask#initControlContext():305) - * * * * * * * * * *
2014-07-01 13:34:31,217 [main] INFO  (DfSql2EntityTask#showParameterBean():879) - * * * * * * * * *
2014-07-01 13:34:31,218 [main] INFO  (DfSql2EntityTask#showParameterBean():880) - * ParameterBean *
2014-07-01 13:34:31,218 [main] INFO  (DfSql2EntityTask#showParameterBean():881) - * * * * * * * * *
2014-07-01 13:34:31,223 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlSql2EntityJava.vm", c);
2014-07-01 13:34:31,326 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1164) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2014-07-01 13:34:31,329 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldCustomizeClass() {
2014-07-01 13:34:31,339 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-07-01 13:34:31,340 [main] INFO  (Database#info():2573) - public void parseCustomizeEntity() {
2014-07-01 13:34:31,342 [main] INFO  (Database#info():2573) - }
2014-07-01 13:34:31,355 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():293) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2014-07-01 13:34:31,361 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-01 13:34:31,369 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s410ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2014-07-01 13:46:43,448 [main] INFO  (DfReplaceSchemaTask#begin():87) - +------------------------------------------+
2014-07-01 13:46:43,451 [main] INFO  (DfReplaceSchemaTask#begin():88) - |                                          |
2014-07-01 13:46:43,451 [main] INFO  (DfReplaceSchemaTask#begin():89) - |              ReplaceSchema               |
2014-07-01 13:46:43,471 [main] INFO  (DfReplaceSchemaTask#begin():97) - |                                          |
2014-07-01 13:46:43,471 [main] INFO  (DfReplaceSchemaTask#begin():98) - +------------------------------------------+
2014-07-01 13:46:43,474 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():329) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2014-07-01 13:46:44,678 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 13:46:44,679 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 13:46:44,680 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 13:46:44,681 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 13:46:44,696 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-07-01 13:46:44,932 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-07-01 13:46:44,933 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-07-01 13:46:44,953 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():207) - 
2014-07-01 13:46:44,954 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():208) - * * * * * * * * * * *
2014-07-01 13:46:44,955 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():209) - *                   *
2014-07-01 13:46:44,956 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():210) - * Initialize Schema *
2014-07-01 13:46:44,957 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():211) - *                   *
2014-07-01 13:46:44,957 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():212) - * * * * * * * * * * *
2014-07-01 13:46:44,975 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-01 13:46:44,976 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-01 13:46:44,977 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-01 13:46:45,032 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table follow
2014-07-01 13:46:45,077 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table login
2014-07-01 13:46:45,101 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_security
2014-07-01 13:46:45,127 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_withdraw
2014-07-01 13:46:45,149 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table tweet
2014-07-01 13:46:45,162 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_1
2014-07-01 13:46:45,181 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_2
2014-07-01 13:46:45,190 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table login drop foreign key login_ibfk_1
2014-07-01 13:46:45,207 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_security drop foreign key member_security_ibfk_1
2014-07-01 13:46:45,216 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_withdraw drop foreign key member_withdraw_ibfk_1
2014-07-01 13:46:45,231 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table tweet drop foreign key tweet_ibfk_1
2014-07-01 13:46:45,247 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table follow
2014-07-01 13:46:45,263 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table login
2014-07-01 13:46:45,275 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member
2014-07-01 13:46:45,286 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_security
2014-07-01 13:46:45,298 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_withdraw
2014-07-01 13:46:45,308 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table tweet
2014-07-01 13:46:45,346 [main] INFO  (DfCreateSchemaProcess#createSchema():244) - 
2014-07-01 13:46:45,347 [main] INFO  (DfCreateSchemaProcess#createSchema():245) - * * * * * * * * *
2014-07-01 13:46:45,348 [main] INFO  (DfCreateSchemaProcess#createSchema():246) - *               *
2014-07-01 13:46:45,348 [main] INFO  (DfCreateSchemaProcess#createSchema():247) - * Create Schema *
2014-07-01 13:46:45,349 [main] INFO  (DfCreateSchemaProcess#createSchema():248) - *               *
2014-07-01 13:46:45,350 [main] INFO  (DfCreateSchemaProcess#createSchema():249) - * * * * * * * * *
2014-07-01 13:46:45,358 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-00-system.sql
2014-07-01 13:46:45,361 [main] INFO  (DfReplaceSchemaProperties#checkTargetEnvType():277) - ...Checking envType: ut in [ut]
2014-07-01 13:46:45,362 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:checkEnv(ut)#

-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database twitter
2014-07-01 13:46:45,366 [main] INFO  (DfCreateSchemaProcess$1#dispatch():273) - ...Creating a connection to system
2014-07-01 13:46:45,368 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():514) - ...Creating a connection for additional user: root
2014-07-01 13:46:45,383 [main] INFO  (DfCreateSchemaProcess$1#dispatch():299) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2014-07-01 13:46:45,383 [main] INFO  (DfCreateSchemaProcess$1#dispatch():301) -  -> Can't create database 'twitter'; database exists
2014-07-01 13:46:45,387 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():411) - ...Reviving the user 'system' until the end of this SQL file
2014-07-01 13:46:45,388 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on twitter.*
  to twitter@localhost identified by 'twitter'
2014-07-01 13:46:45,394 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2014-07-01 13:46:45,397 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2014-07-01 13:46:45,398 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-10-basic.sql
2014-07-01 13:46:45,399 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():348) - ...Saying good-bye to the user 'system' again
2014-07-01 13:46:45,401 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():352) - ...Clearing revived users
2014-07-01 13:46:45,402 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():359) - ...Coming back to the main user from the user 'system'
2014-07-01 13:46:45,406 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FOLLOW
(
	FOLLOW_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'フォローID',
	YOU_ID INT(100) NOT NULL UNIQUE COMMENT 'フォローする人のID : 会員のID
',
	ME_ID INT(100) NOT NULL COMMENT 'フォローされる人のID : 会員のID
',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (FOLLOW_ID)
) COMMENT = 'フォロー'
2014-07-01 13:46:45,458 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE LOGIN
(
	LOGIN_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ログインID : ログインした瞬間のID
',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	INS_DATETIME DATETIME NOT NULL COMMENT 'Insert日時',
	INS_TRACE VARCHAR(256) COMMENT 'INS_TRACE',
	PRIMARY KEY (LOGIN_ID)
) COMMENT = 'ログイン'
2014-07-01 13:46:45,493 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER
(
	MEMBER_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員のID
',
	EMAIL_ADDRESS VARCHAR(100) NOT NULL UNIQUE COMMENT 'メールアドレス : 会員のメールアドレス',
	USER_NAME VARCHAR(50) NOT NULL UNIQUE COMMENT '会員ユーザ名 : 会員のユーザ名',
	BIRTHDATE DATE COMMENT '生年月日 : 会員の生年月日',
	PROFILE VARCHAR(200) COMMENT 'プロフィール',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員'
2014-07-01 13:46:45,533 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PASSWORD VARCHAR(50) NOT NULL COMMENT 'パスワード',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員セキュリティ'
2014-07-01 13:46:45,565 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_WITHDRAW
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	WITHDRAWAL_REASON_ID INT COMMENT '退会理由ID : 会員の退会理由ID',
	WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト',
	WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT 'withdrawal_datetime : 退会日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員退会'
2014-07-01 13:46:45,608 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-07-01 13:46:45,667 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FOLLOW
	ADD FOREIGN KEY (ME_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 13:46:45,767 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD FOREIGN KEY (YOU_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 13:46:45,852 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 13:46:45,942 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 13:46:46,030 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_WITHDRAW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 13:46:46,128 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 13:46:46,214 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=12 failure=0
2014-07-01 13:46:46,217 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=14 failure=0 (in 2 files)
2014-07-01 13:46:46,218 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-07-01 13:46:46,284 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-07-01 13:46:46,285 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-07-01 13:46:46,285 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-07-01 13:46:46,286 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-07-01 13:46:46,286 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-07-01 13:46:46,287 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-07-01 13:46:46,310 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-07-01 13:46:46,311 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-07-01 13:46:46,311 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-07-01 13:46:46,604 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-01 13:46:46,605 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-01 13:46:46,606 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-01 13:46:46,677 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{1, Stojkovic@gmail.com, Pixy, 1965/03/03, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:46:46,727 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{2, Savicevic@gmail.com, Genius, 1966/09/15, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:46:46,730 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{3, Mijatovic@gmail.com, Mijato, null, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:46:46,731 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{4, Stankovic@gmail.com, Stanko, 1978/09/11, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:46:46,733 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{5, Milosevic@gmail.com, Milose, null, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:46:46,734 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{6, Mihajlovic@gmail.com, FreeKick, 1969/02/20, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:46:46,736 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 13:46:46,746 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 6 rows are loaded to MEMBER
2014-07-01 13:46:46,750 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 1, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:46:46,751 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 2, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:46:46,752 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{3, 3, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:46:46,753 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{4, 4, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:46:46,754 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{5, 5, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:46:46,755 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 13:46:46,764 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 5 rows are loaded to LOGIN
2014-07-01 13:46:46,765 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:46:46,766 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:46:46,767 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{3, ccc, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:46:46,768 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{4, ddd, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:46:46,769 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{5, eee2, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:46:46,770 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{6, fff, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:46:46,771 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 13:46:46,775 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 6 rows are loaded to MEMBER_SECURITY
2014-07-01 13:46:46,776 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 2014-06-24 00:00:00.0}
2014-07-01 13:46:46,779 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{2, 2345, 清君頼りになるー！, 2014-06-24 00:00:00.0}
2014-07-01 13:46:46,781 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{3, 3456, GLD, 2014-06-24 00:00:00.0}
2014-07-01 13:46:46,781 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{4, 875, BRZ, 2014-06-24 00:00:00.0}
2014-07-01 13:46:46,782 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{5, 1111, BRZ, 2014-06-24 00:00:00.0}
2014-07-01 13:46:46,783 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{6, 5422, SIL, 2014-06-24 00:00:00.0}
2014-07-01 13:46:46,783 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 13:46:46,792 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 6 rows are loaded to TWEET
2014-07-01 13:46:46,793 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{1, 1, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123}
2014-07-01 13:46:46,796 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{2, 1, null, 2007/11/11 16:00:00.456}
2014-07-01 13:46:46,797 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{3, 2, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789}
2014-07-01 13:46:46,799 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{4, 3, コバチが２人いるため, 2007/11/13 16:00:00.456}
2014-07-01 13:46:46,805 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 4 rows are loaded to MEMBER_WITHDRAW
2014-07-01 13:46:46,806 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - FOLLOW:{0, 1, 1, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 13:46:46,809 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 1 rows are loaded to FOLLOW
2014-07-01 13:46:46,813 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():379) - ...Checking implicit set of classification
2014-07-01 13:46:46,825 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - 
2014-07-01 13:46:46,827 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * * * * * * * **
2014-07-01 13:46:46,827 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2014-07-01 13:46:46,828 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * Take Finally *
2014-07-01 13:46:46,828 [main] INFO  (DfTakeFinallyProcess#takeFinally():225) - *              *
2014-07-01 13:46:46,829 [main] INFO  (DfTakeFinallyProcess#takeFinally():226) - * * * * * * * **
2014-07-01 13:46:46,838 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: take-finally.sql
2014-07-01 13:46:46,844 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2014-07-01 13:46:46,845 [main] INFO  (DfSqlFileFireMan#fire():90) - {Take Finally}: success=0 failure=0 (in 1 files)
2014-07-01 13:46:46,846 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-07-01 13:46:46,850 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m03s400ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=14 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=1
  (ut)
  o 20-member.xls

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-07-01 13:46:47,795 [main] INFO  (TorqueJDBCTransformTask#begin():100) - +------------------------------------------+
2014-07-01 13:46:47,798 [main] INFO  (TorqueJDBCTransformTask#begin():101) - |                                          |
2014-07-01 13:46:47,798 [main] INFO  (TorqueJDBCTransformTask#begin():102) - |                   JDBC                   |
2014-07-01 13:46:47,799 [main] INFO  (TorqueJDBCTransformTask#begin():103) - |                                          |
2014-07-01 13:46:47,800 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2014-07-01 13:46:47,839 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 13:46:47,840 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 13:46:47,841 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 13:46:47,844 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 13:46:47,888 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2014-07-01 13:46:47,889 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2014-07-01 13:46:47,890 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1469) - ...Loading previous schema (schema diff process)
2014-07-01 13:46:47,900 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-01 13:46:47,970 [main] INFO  (DfSchemaXmlSerializer#generateXML():361) - ...Getting DB connection
2014-07-01 13:46:47,976 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-07-01 13:46:48,169 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-07-01 13:46:48,170 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-07-01 13:46:48,172 [main] INFO  (DfSchemaXmlSerializer#generateXML():364) - ...Getting DB meta data
2014-07-01 13:46:48,177 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-01 13:46:48,178 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-01 13:46:48,179 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-01 13:46:48,190 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2014-07-01 13:46:48,193 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2014-07-01 13:46:48,205 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - 
2014-07-01 13:46:48,205 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2014-07-01 13:46:48,206 [main] INFO  (DfSchemaXmlSerializer#processTable():423) - $ [Table List]
2014-07-01 13:46:48,207 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.follow(TABLE) // フォロー
2014-07-01 13:46:48,252 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.login(TABLE) // ログイン
2014-07-01 13:46:48,266 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member(TABLE) // 会員
2014-07-01 13:46:48,282 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_security(TABLE) // 会員セキュリティ
2014-07-01 13:46:48,296 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_withdraw(TABLE) // 会員退会
2014-07-01 13:46:48,310 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.tweet(TABLE) // TWEET
2014-07-01 13:46:48,324 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 
2014-07-01 13:46:48,325 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ [Table Count]
2014-07-01 13:46:48,325 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ 6
2014-07-01 13:46:48,326 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - $ = = = = = = = = = =/
2014-07-01 13:46:48,326 [main] INFO  (DfSchemaXmlSerializer#processTable():439) - 
2014-07-01 13:46:48,330 [main] INFO  (DfSchemaXmlSerializer#processSequence():799) - ...Getting sequences
2014-07-01 13:46:48,337 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2014-07-01 13:46:48,339 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-twitter.xml
2014-07-01 13:46:48,340 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2014-07-01 13:46:48,365 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1487) - ...Loading next schema (schema diff process)
2014-07-01 13:46:48,369 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-01 13:46:48,425 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1492) -  -> different from previous (schema diff)
2014-07-01 13:46:48,427 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1494) - ...Serializing schema-diff:
2014-07-01 13:46:48,428 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1495) -   filePath = ./schema/project-history-twitter.diffmap
2014-07-01 13:46:48,472 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-07-01 13:46:48,480 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s680ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2014-07-01 13:46:49,475 [main] INFO  (TorqueDocumentationTask#begin():171) - +------------------------------------------+
2014-07-01 13:46:49,478 [main] INFO  (TorqueDocumentationTask#begin():172) - |                                          |
2014-07-01 13:46:49,478 [main] INFO  (TorqueDocumentationTask#begin():173) - |                   Doc                    |
2014-07-01 13:46:49,479 [main] INFO  (TorqueDocumentationTask#begin():181) - |                                          |
2014-07-01 13:46:49,479 [main] INFO  (TorqueDocumentationTask#begin():182) - +------------------------------------------+
2014-07-01 13:46:49,519 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 13:46:49,520 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 13:46:49,521 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 13:46:49,521 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 13:46:49,526 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():242) - 
2014-07-01 13:46:49,528 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():243) - * * * * * * * * * * *
2014-07-01 13:46:49,529 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():244) - *                   *
2014-07-01 13:46:49,530 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():245) - *    Schema HTML    *
2014-07-01 13:46:49,531 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - *                   *
2014-07-01 13:46:49,531 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2014-07-01 13:46:49,705 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-01 13:46:49,774 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("doc/ControlDocument.vm", c);
2014-07-01 13:46:49,834 [main] INFO  (Database#doEnableDocumentOutputDirectory():1180) - ...Setting up documentOutputDirectory: ./output/doc
2014-07-01 13:46:49,845 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-07-01 13:46:49,846 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-07-01 13:46:49,848 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-07-01 13:46:49,850 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-07-01 13:46:49,850 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-07-01 13:46:49,854 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-07-01 13:46:49,856 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-07-01 13:46:49,856 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-07-01 13:46:49,859 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-07-01 13:46:49,868 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():150) - ...Loading schema history
2014-07-01 13:46:49,956 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():154) -  -> found history: count=21
2014-07-01 13:46:50,201 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-01 13:46:50,220 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s742ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Doc}
2014-07-01 13:46:53,187 [main] INFO  (TorqueDataModelTask#begin():105) - +------------------------------------------+
2014-07-01 13:46:53,190 [main] INFO  (TorqueDataModelTask#begin():106) - |                                          |
2014-07-01 13:46:53,190 [main] INFO  (TorqueDataModelTask#begin():107) - |                 Generate                 |
2014-07-01 13:46:53,191 [main] INFO  (TorqueDataModelTask#begin():108) - |                                          |
2014-07-01 13:46:53,191 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2014-07-01 13:46:53,230 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 13:46:53,230 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 13:46:53,231 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 13:46:53,231 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 13:46:53,251 [main] INFO  (TorqueDataModelTask#setupControlTemplate():160) - 
2014-07-01 13:46:53,252 [main] INFO  (TorqueDataModelTask#setupControlTemplate():161) - ...Using Java control: om/ControlGenerateJava.vm
2014-07-01 13:46:53,393 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-01 13:46:53,431 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlGenerateJava.vm", c);
2014-07-01 13:46:53,575 [main] INFO  (Database#doEnableGenerateOutputDirectory():1148) - ...Setting up generateOutputDirectory: ../src/main/java
2014-07-01 13:46:53,584 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-07-01 13:46:53,585 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-07-01 13:46:53,587 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-07-01 13:46:53,589 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-07-01 13:46:53,590 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-07-01 13:46:53,593 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-07-01 13:46:53,597 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-07-01 13:46:53,597 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-07-01 13:46:53,600 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-07-01 13:46:53,618 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - /=============================
2014-07-01 13:46:53,619 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():60) - ...Initializing include query.
2014-07-01 13:46:53,619 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - String
2014-07-01 13:46:53,620 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Number
2014-07-01 13:46:53,621 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Date
2014-07-01 13:46:53,621 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotEqual -> []
2014-07-01 13:46:53,622 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   InScope -> []
2014-07-01 13:46:53,623 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotInScope -> []
2014-07-01 13:46:53,623 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - OrderBy
2014-07-01 13:46:53,624 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():62) - ========/
2014-07-01 13:46:53,638 [main] INFO  (Database#info():2573) - public void parseAllCommon() {
2014-07-01 13:46:53,641 [main] INFO  (Database#info():2573) -     parse('DBCurrent');
2014-07-01 13:46:53,647 [main] INFO  (Database#info():2573) -     parse('DBFluteConfig');
2014-07-01 13:46:53,668 [main] INFO  (Database#info():2573) -     parse('DBFluteInitializer');
2014-07-01 13:46:53,674 [main] INFO  (Database#info():2573) -     parse('DBMetaInstanceHandler');
2014-07-01 13:46:53,690 [main] INFO  (Database#info():2573) -     parse('EntityDefinedCommonColumn');
2014-07-01 13:46:53,695 [main] INFO  (Database#info():2573) -     parse('ImplementedBehaviorSelector');
2014-07-01 13:46:53,699 [main] INFO  (Database#info():2573) -     parse('ImplementedCommonColumnAutoSetupper');
2014-07-01 13:46:53,705 [main] INFO  (Database#info():2573) -     parse('ImplementedInvokerAssistant');
2014-07-01 13:46:53,708 [main] INFO  (Database#info():2573) -     parse('ImplementedSqlClauseCreator');
2014-07-01 13:46:53,710 [main] INFO  (Database#info():2573) - }
2014-07-01 13:46:53,711 [main] INFO  (Database#info():2573) - public void parseContainerConfig() {
2014-07-01 13:46:53,712 [main] INFO  (Database#info():2573) -     parse('../resources/dbflute.dicon')
2014-07-01 13:46:53,721 [main] INFO  (Database#info():2573) - }
2014-07-01 13:46:53,727 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldTableClass() {
2014-07-01 13:46:53,748 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-07-01 13:46:53,749 [main] INFO  (Database#info():2573) - public void parseTableClass() {
2014-07-01 13:46:53,750 [main] INFO  (Database#info():2573) -     parse('follow');
2014-07-01 13:46:54,062 [main] INFO  (Database#info():2573) -     parse('login');
2014-07-01 13:46:54,234 [main] INFO  (Database#info():2573) -     parse('member');
2014-07-01 13:46:54,613 [main] INFO  (Database#info():2573) -     parse('member_security');
2014-07-01 13:46:54,746 [main] INFO  (Database#info():2573) -     parse('member_withdraw');
2014-07-01 13:46:54,862 [main] INFO  (Database#info():2573) -     parse('tweet');
2014-07-01 13:46:54,956 [main] INFO  (Database#info():2573) - }
2014-07-01 13:46:54,957 [main] INFO  (Database#info():2573) -  
2014-07-01 13:46:54,984 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-01 13:46:54,993 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s801ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Generate}
2014-07-01 13:46:56,070 [main] INFO  (DfOutsideSqlTestTask#begin():72) - +------------------------------------------+
2014-07-01 13:46:56,073 [main] INFO  (DfOutsideSqlTestTask#begin():73) - |                                          |
2014-07-01 13:46:56,073 [main] INFO  (DfOutsideSqlTestTask#begin():74) - |              OutsideSqlTest              |
2014-07-01 13:46:56,073 [main] INFO  (DfOutsideSqlTestTask#begin():75) - |                                          |
2014-07-01 13:46:56,074 [main] INFO  (DfOutsideSqlTestTask#begin():76) - +------------------------------------------+
2014-07-01 13:46:56,122 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 13:46:56,122 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 13:46:56,123 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 13:46:56,124 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 13:46:56,165 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-07-01 13:46:56,171 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s096ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2014-07-01 13:46:57,016 [main] INFO  (DfSql2EntityTask#begin():100) - +------------------------------------------+
2014-07-01 13:46:57,019 [main] INFO  (DfSql2EntityTask#begin():101) - |                                          |
2014-07-01 13:46:57,020 [main] INFO  (DfSql2EntityTask#begin():102) - |                Sql2Entity                |
2014-07-01 13:46:57,022 [main] INFO  (DfSql2EntityTask#begin():103) - |                                          |
2014-07-01 13:46:57,023 [main] INFO  (DfSql2EntityTask#begin():104) - +------------------------------------------+
2014-07-01 13:46:57,063 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 13:46:57,064 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 13:46:57,064 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 13:46:57,065 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 13:46:57,081 [main] INFO  (DfSql2EntityTask#setupControlTemplate():170) - 
2014-07-01 13:46:57,082 [main] INFO  (DfSql2EntityTask#setupControlTemplate():171) - ...Using Java control: om/ControlSql2EntityJava.vm
2014-07-01 13:46:57,089 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-01 13:46:57,139 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-07-01 13:46:57,278 [main] INFO  (DfSql2EntityTask#initControlContext():301) - 
2014-07-01 13:46:57,278 [main] INFO  (DfSql2EntityTask#initControlContext():302) - ...Preparing generation of customize-entities and parameter-beans
2014-07-01 13:46:57,279 [main] INFO  (DfSql2EntityTask#initControlContext():303) - * * * * * * * * * *
2014-07-01 13:46:57,280 [main] INFO  (DfSql2EntityTask#initControlContext():304) - * CustomizeEntity *
2014-07-01 13:46:57,280 [main] INFO  (DfSql2EntityTask#initControlContext():305) - * * * * * * * * * *
2014-07-01 13:46:57,281 [main] INFO  (DfSql2EntityTask#showParameterBean():879) - * * * * * * * * *
2014-07-01 13:46:57,281 [main] INFO  (DfSql2EntityTask#showParameterBean():880) - * ParameterBean *
2014-07-01 13:46:57,282 [main] INFO  (DfSql2EntityTask#showParameterBean():881) - * * * * * * * * *
2014-07-01 13:46:57,286 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlSql2EntityJava.vm", c);
2014-07-01 13:46:57,396 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1164) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2014-07-01 13:46:57,400 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldCustomizeClass() {
2014-07-01 13:46:57,412 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-07-01 13:46:57,413 [main] INFO  (Database#info():2573) - public void parseCustomizeEntity() {
2014-07-01 13:46:57,416 [main] INFO  (Database#info():2573) - }
2014-07-01 13:46:57,429 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():293) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2014-07-01 13:46:57,433 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-01 13:46:57,441 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s420ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2014-07-01 14:18:28,250 [main] INFO  (DfReplaceSchemaTask#begin():87) - +------------------------------------------+
2014-07-01 14:18:28,253 [main] INFO  (DfReplaceSchemaTask#begin():88) - |                                          |
2014-07-01 14:18:28,253 [main] INFO  (DfReplaceSchemaTask#begin():89) - |              ReplaceSchema               |
2014-07-01 14:18:28,273 [main] INFO  (DfReplaceSchemaTask#begin():97) - |                                          |
2014-07-01 14:18:28,274 [main] INFO  (DfReplaceSchemaTask#begin():98) - +------------------------------------------+
2014-07-01 14:18:28,277 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():329) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2014-07-01 14:18:29,951 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 14:18:29,952 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 14:18:29,953 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 14:18:29,954 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 14:18:29,963 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-07-01 14:18:30,184 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-07-01 14:18:30,185 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-07-01 14:18:30,206 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():207) - 
2014-07-01 14:18:30,206 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():208) - * * * * * * * * * * *
2014-07-01 14:18:30,207 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():209) - *                   *
2014-07-01 14:18:30,208 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():210) - * Initialize Schema *
2014-07-01 14:18:30,208 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():211) - *                   *
2014-07-01 14:18:30,209 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():212) - * * * * * * * * * * *
2014-07-01 14:18:30,226 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-01 14:18:30,227 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-01 14:18:30,228 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-01 14:18:30,288 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table follow
2014-07-01 14:18:30,334 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table login
2014-07-01 14:18:30,357 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_security
2014-07-01 14:18:30,383 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_withdraw
2014-07-01 14:18:30,421 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table tweet
2014-07-01 14:18:30,455 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_1
2014-07-01 14:18:30,474 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_2
2014-07-01 14:18:30,484 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table login drop foreign key login_ibfk_1
2014-07-01 14:18:30,494 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_security drop foreign key member_security_ibfk_1
2014-07-01 14:18:30,504 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_withdraw drop foreign key member_withdraw_ibfk_1
2014-07-01 14:18:30,514 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table tweet drop foreign key tweet_ibfk_1
2014-07-01 14:18:30,524 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table follow
2014-07-01 14:18:30,536 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table login
2014-07-01 14:18:30,546 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member
2014-07-01 14:18:30,556 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_security
2014-07-01 14:18:30,566 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_withdraw
2014-07-01 14:18:30,579 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table tweet
2014-07-01 14:18:30,630 [main] INFO  (DfCreateSchemaProcess#createSchema():244) - 
2014-07-01 14:18:30,630 [main] INFO  (DfCreateSchemaProcess#createSchema():245) - * * * * * * * * *
2014-07-01 14:18:30,631 [main] INFO  (DfCreateSchemaProcess#createSchema():246) - *               *
2014-07-01 14:18:30,631 [main] INFO  (DfCreateSchemaProcess#createSchema():247) - * Create Schema *
2014-07-01 14:18:30,632 [main] INFO  (DfCreateSchemaProcess#createSchema():248) - *               *
2014-07-01 14:18:30,633 [main] INFO  (DfCreateSchemaProcess#createSchema():249) - * * * * * * * * *
2014-07-01 14:18:30,640 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-00-system.sql
2014-07-01 14:18:30,643 [main] INFO  (DfReplaceSchemaProperties#checkTargetEnvType():277) - ...Checking envType: ut in [ut]
2014-07-01 14:18:30,645 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:checkEnv(ut)#

-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database twitter
2014-07-01 14:18:30,648 [main] INFO  (DfCreateSchemaProcess$1#dispatch():273) - ...Creating a connection to system
2014-07-01 14:18:30,649 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():514) - ...Creating a connection for additional user: root
2014-07-01 14:18:30,664 [main] INFO  (DfCreateSchemaProcess$1#dispatch():299) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2014-07-01 14:18:30,665 [main] INFO  (DfCreateSchemaProcess$1#dispatch():301) -  -> Can't create database 'twitter'; database exists
2014-07-01 14:18:30,667 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():411) - ...Reviving the user 'system' until the end of this SQL file
2014-07-01 14:18:30,667 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on twitter.*
  to twitter@localhost identified by 'twitter'
2014-07-01 14:18:30,671 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2014-07-01 14:18:30,673 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2014-07-01 14:18:30,674 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-10-basic.sql
2014-07-01 14:18:30,675 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():348) - ...Saying good-bye to the user 'system' again
2014-07-01 14:18:30,675 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():352) - ...Clearing revived users
2014-07-01 14:18:30,677 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():359) - ...Coming back to the main user from the user 'system'
2014-07-01 14:18:30,680 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FOLLOW
(
	FOLLOW_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'フォローID',
	YOU_ID INT(100) NOT NULL UNIQUE COMMENT 'フォローする人のID : 会員のID
',
	ME_ID INT(100) NOT NULL COMMENT 'フォローされる人のID : 会員のID
',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (FOLLOW_ID)
) COMMENT = 'フォロー'
2014-07-01 14:18:30,729 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE LOGIN
(
	LOGIN_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ログインID : ログインした瞬間のID
',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (LOGIN_ID)
) COMMENT = 'ログイン'
2014-07-01 14:18:30,790 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER
(
	MEMBER_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員のID
',
	EMAIL_ADDRESS VARCHAR(100) NOT NULL UNIQUE COMMENT 'メールアドレス : 会員のメールアドレス',
	USER_NAME VARCHAR(50) NOT NULL UNIQUE COMMENT '会員ユーザ名 : 会員のユーザ名',
	BIRTHDATE DATE COMMENT '生年月日 : 会員の生年月日',
	PROFILE VARCHAR(200) COMMENT 'プロフィール',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員'
2014-07-01 14:18:30,868 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PASSWORD VARCHAR(50) NOT NULL COMMENT 'パスワード',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員セキュリティ'
2014-07-01 14:18:30,935 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_WITHDRAW
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	WITHDRAWAL_REASON_ID INT COMMENT '退会理由ID : 会員の退会理由ID',
	WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト',
	WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT 'withdrawal_datetime : 退会日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員退会'
2014-07-01 14:18:30,992 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-07-01 14:18:31,047 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FOLLOW
	ADD FOREIGN KEY (ME_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 14:18:31,124 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD FOREIGN KEY (YOU_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 14:18:31,235 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 14:18:31,331 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 14:18:31,451 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_WITHDRAW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 14:18:31,535 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 14:18:31,601 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=12 failure=0
2014-07-01 14:18:31,604 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=14 failure=0 (in 2 files)
2014-07-01 14:18:31,605 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-07-01 14:18:31,674 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-07-01 14:18:31,674 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-07-01 14:18:31,675 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-07-01 14:18:31,675 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-07-01 14:18:31,676 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-07-01 14:18:31,677 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-07-01 14:18:31,700 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-07-01 14:18:31,701 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-07-01 14:18:31,701 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-07-01 14:18:31,987 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-01 14:18:31,988 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-01 14:18:31,988 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-01 14:18:32,056 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{1, Stojkovic@gmail.com, Pixy, 1965/03/03, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:18:32,105 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{2, Savicevic@gmail.com, Genius, 1966/09/15, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:18:32,107 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{3, Mijatovic@gmail.com, Mijato, null, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:18:32,108 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{4, Stankovic@gmail.com, Stanko, 1978/09/11, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:18:32,109 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{5, Milosevic@gmail.com, Milose, null, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:18:32,110 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{6, Mihajlovic@gmail.com, FreeKick, 1969/02/20, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:18:32,112 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 14:18:32,127 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 6 rows are loaded to MEMBER
2014-07-01 14:18:32,130 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 1, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:18:32,131 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 2, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:18:32,132 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{3, 3, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:18:32,133 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{4, 4, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:18:32,134 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{5, 5, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:18:32,135 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 14:18:32,140 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 5 rows are loaded to LOGIN
2014-07-01 14:18:32,142 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:18:32,143 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:18:32,144 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{3, ccc, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:18:32,145 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{4, ddd, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:18:32,146 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{5, eee2, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:18:32,147 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{6, fff, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:18:32,148 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 14:18:32,157 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 6 rows are loaded to MEMBER_SECURITY
2014-07-01 14:18:32,159 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 2014-06-24 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-26 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:18:32,162 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{2, 2345, 清君頼りになるー！, 2014-06-24 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0}
2014-07-01 14:18:32,165 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{3, 3456, GLD, 2014-06-24 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0}
2014-07-01 14:18:32,167 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{4, 875, BRZ, 2014-06-24 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0}
2014-07-01 14:18:32,168 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{5, 1111, BRZ, 2014-06-24 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0}
2014-07-01 14:18:32,169 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{6, 5422, SIL, 2014-06-24 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0}
2014-07-01 14:18:32,171 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 14:18:32,177 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 6 rows are loaded to TWEET
2014-07-01 14:18:32,179 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{1, 1, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123}
2014-07-01 14:18:32,181 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{2, 1, null, 2007/11/11 16:00:00.456}
2014-07-01 14:18:32,182 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{3, 2, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789}
2014-07-01 14:18:32,186 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{4, 3, コバチが２人いるため, 2007/11/13 16:00:00.456}
2014-07-01 14:18:32,200 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 4 rows are loaded to MEMBER_WITHDRAW
2014-07-01 14:18:32,202 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - FOLLOW:{0, 1, 1, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:18:32,208 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 1 rows are loaded to FOLLOW
2014-07-01 14:18:32,211 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():379) - ...Checking implicit set of classification
2014-07-01 14:18:32,224 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - 
2014-07-01 14:18:32,225 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * * * * * * * **
2014-07-01 14:18:32,226 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2014-07-01 14:18:32,226 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * Take Finally *
2014-07-01 14:18:32,227 [main] INFO  (DfTakeFinallyProcess#takeFinally():225) - *              *
2014-07-01 14:18:32,227 [main] INFO  (DfTakeFinallyProcess#takeFinally():226) - * * * * * * * **
2014-07-01 14:18:32,238 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: take-finally.sql
2014-07-01 14:18:32,240 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2014-07-01 14:18:32,241 [main] INFO  (DfSqlFileFireMan#fire():90) - {Take Finally}: success=0 failure=0 (in 1 files)
2014-07-01 14:18:32,242 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-07-01 14:18:32,246 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m03s993ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=14 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=1
  (ut)
  o 20-member.xls

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-07-01 14:18:33,201 [main] INFO  (TorqueJDBCTransformTask#begin():100) - +------------------------------------------+
2014-07-01 14:18:33,203 [main] INFO  (TorqueJDBCTransformTask#begin():101) - |                                          |
2014-07-01 14:18:33,204 [main] INFO  (TorqueJDBCTransformTask#begin():102) - |                   JDBC                   |
2014-07-01 14:18:33,205 [main] INFO  (TorqueJDBCTransformTask#begin():103) - |                                          |
2014-07-01 14:18:33,205 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2014-07-01 14:18:33,249 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 14:18:33,250 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 14:18:33,251 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 14:18:33,252 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 14:18:33,296 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2014-07-01 14:18:33,297 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2014-07-01 14:18:33,299 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1469) - ...Loading previous schema (schema diff process)
2014-07-01 14:18:33,308 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-01 14:18:33,372 [main] INFO  (DfSchemaXmlSerializer#generateXML():361) - ...Getting DB connection
2014-07-01 14:18:33,378 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-07-01 14:18:33,562 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-07-01 14:18:33,563 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-07-01 14:18:33,565 [main] INFO  (DfSchemaXmlSerializer#generateXML():364) - ...Getting DB meta data
2014-07-01 14:18:33,567 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-01 14:18:33,567 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-01 14:18:33,568 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-01 14:18:33,578 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2014-07-01 14:18:33,582 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2014-07-01 14:18:33,596 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - 
2014-07-01 14:18:33,597 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2014-07-01 14:18:33,598 [main] INFO  (DfSchemaXmlSerializer#processTable():423) - $ [Table List]
2014-07-01 14:18:33,599 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.follow(TABLE) // フォロー
2014-07-01 14:18:33,644 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.login(TABLE) // ログイン
2014-07-01 14:18:33,659 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member(TABLE) // 会員
2014-07-01 14:18:33,676 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_security(TABLE) // 会員セキュリティ
2014-07-01 14:18:33,692 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_withdraw(TABLE) // 会員退会
2014-07-01 14:18:33,707 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.tweet(TABLE) // TWEET
2014-07-01 14:18:33,723 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 
2014-07-01 14:18:33,723 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ [Table Count]
2014-07-01 14:18:33,724 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ 6
2014-07-01 14:18:33,724 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - $ = = = = = = = = = =/
2014-07-01 14:18:33,725 [main] INFO  (DfSchemaXmlSerializer#processTable():439) - 
2014-07-01 14:18:33,728 [main] INFO  (DfSchemaXmlSerializer#processSequence():799) - ...Getting sequences
2014-07-01 14:18:33,755 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2014-07-01 14:18:33,756 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-twitter.xml
2014-07-01 14:18:33,757 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2014-07-01 14:18:33,780 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1487) - ...Loading next schema (schema diff process)
2014-07-01 14:18:33,783 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-01 14:18:33,839 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1492) -  -> different from previous (schema diff)
2014-07-01 14:18:33,841 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1494) - ...Serializing schema-diff:
2014-07-01 14:18:33,841 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1495) -   filePath = ./schema/project-history-twitter.diffmap
2014-07-01 14:18:33,919 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-07-01 14:18:33,926 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s722ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2014-07-01 14:18:34,912 [main] INFO  (TorqueDocumentationTask#begin():171) - +------------------------------------------+
2014-07-01 14:18:34,914 [main] INFO  (TorqueDocumentationTask#begin():172) - |                                          |
2014-07-01 14:18:34,915 [main] INFO  (TorqueDocumentationTask#begin():173) - |                   Doc                    |
2014-07-01 14:18:34,915 [main] INFO  (TorqueDocumentationTask#begin():181) - |                                          |
2014-07-01 14:18:34,916 [main] INFO  (TorqueDocumentationTask#begin():182) - +------------------------------------------+
2014-07-01 14:18:34,969 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 14:18:34,970 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 14:18:34,970 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 14:18:34,971 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 14:18:34,974 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():242) - 
2014-07-01 14:18:34,975 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():243) - * * * * * * * * * * *
2014-07-01 14:18:34,975 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():244) - *                   *
2014-07-01 14:18:34,976 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():245) - *    Schema HTML    *
2014-07-01 14:18:34,977 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - *                   *
2014-07-01 14:18:34,977 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2014-07-01 14:18:35,149 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-01 14:18:35,210 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("doc/ControlDocument.vm", c);
2014-07-01 14:18:35,288 [main] INFO  (Database#doEnableDocumentOutputDirectory():1180) - ...Setting up documentOutputDirectory: ./output/doc
2014-07-01 14:18:35,300 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-07-01 14:18:35,300 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-07-01 14:18:35,303 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-07-01 14:18:35,305 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-07-01 14:18:35,306 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-07-01 14:18:35,308 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-07-01 14:18:35,311 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-07-01 14:18:35,311 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-07-01 14:18:35,315 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-07-01 14:18:35,324 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():150) - ...Loading schema history
2014-07-01 14:18:35,417 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():154) -  -> found history: count=22
2014-07-01 14:18:35,671 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-01 14:18:35,685 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s770ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Doc}
2014-07-01 14:22:37,370 [main] INFO  (DfReplaceSchemaTask#begin():87) - +------------------------------------------+
2014-07-01 14:22:37,373 [main] INFO  (DfReplaceSchemaTask#begin():88) - |                                          |
2014-07-01 14:22:37,374 [main] INFO  (DfReplaceSchemaTask#begin():89) - |              ReplaceSchema               |
2014-07-01 14:22:37,395 [main] INFO  (DfReplaceSchemaTask#begin():97) - |                                          |
2014-07-01 14:22:37,396 [main] INFO  (DfReplaceSchemaTask#begin():98) - +------------------------------------------+
2014-07-01 14:22:37,398 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():329) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2014-07-01 14:22:39,725 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 14:22:39,726 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 14:22:39,727 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 14:22:39,728 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 14:22:39,741 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-07-01 14:22:39,967 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-07-01 14:22:39,968 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-07-01 14:22:39,987 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():207) - 
2014-07-01 14:22:39,988 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():208) - * * * * * * * * * * *
2014-07-01 14:22:39,989 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():209) - *                   *
2014-07-01 14:22:39,990 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():210) - * Initialize Schema *
2014-07-01 14:22:39,990 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():211) - *                   *
2014-07-01 14:22:39,991 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():212) - * * * * * * * * * * *
2014-07-01 14:22:40,008 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-01 14:22:40,009 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-01 14:22:40,010 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-01 14:22:40,051 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table follow
2014-07-01 14:22:40,094 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table login
2014-07-01 14:22:40,141 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_security
2014-07-01 14:22:40,175 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_withdraw
2014-07-01 14:22:40,204 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table tweet
2014-07-01 14:22:40,235 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_1
2014-07-01 14:22:40,255 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_2
2014-07-01 14:22:40,265 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table login drop foreign key login_ibfk_1
2014-07-01 14:22:40,276 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_security drop foreign key member_security_ibfk_1
2014-07-01 14:22:40,291 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_withdraw drop foreign key member_withdraw_ibfk_1
2014-07-01 14:22:40,301 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table tweet drop foreign key tweet_ibfk_1
2014-07-01 14:22:40,317 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table follow
2014-07-01 14:22:40,332 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table login
2014-07-01 14:22:40,357 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member
2014-07-01 14:22:40,376 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_security
2014-07-01 14:22:40,390 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_withdraw
2014-07-01 14:22:40,406 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table tweet
2014-07-01 14:22:40,483 [main] INFO  (DfCreateSchemaProcess#createSchema():244) - 
2014-07-01 14:22:40,484 [main] INFO  (DfCreateSchemaProcess#createSchema():245) - * * * * * * * * *
2014-07-01 14:22:40,484 [main] INFO  (DfCreateSchemaProcess#createSchema():246) - *               *
2014-07-01 14:22:40,485 [main] INFO  (DfCreateSchemaProcess#createSchema():247) - * Create Schema *
2014-07-01 14:22:40,485 [main] INFO  (DfCreateSchemaProcess#createSchema():248) - *               *
2014-07-01 14:22:40,486 [main] INFO  (DfCreateSchemaProcess#createSchema():249) - * * * * * * * * *
2014-07-01 14:22:40,492 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-00-system.sql
2014-07-01 14:22:40,495 [main] INFO  (DfReplaceSchemaProperties#checkTargetEnvType():277) - ...Checking envType: ut in [ut]
2014-07-01 14:22:40,496 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:checkEnv(ut)#

-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database twitter
2014-07-01 14:22:40,499 [main] INFO  (DfCreateSchemaProcess$1#dispatch():273) - ...Creating a connection to system
2014-07-01 14:22:40,501 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():514) - ...Creating a connection for additional user: root
2014-07-01 14:22:40,513 [main] INFO  (DfCreateSchemaProcess$1#dispatch():299) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2014-07-01 14:22:40,515 [main] INFO  (DfCreateSchemaProcess$1#dispatch():301) -  -> Can't create database 'twitter'; database exists
2014-07-01 14:22:40,517 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():411) - ...Reviving the user 'system' until the end of this SQL file
2014-07-01 14:22:40,518 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on twitter.*
  to twitter@localhost identified by 'twitter'
2014-07-01 14:22:40,523 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2014-07-01 14:22:40,525 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2014-07-01 14:22:40,526 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-10-basic.sql
2014-07-01 14:22:40,527 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():348) - ...Saying good-bye to the user 'system' again
2014-07-01 14:22:40,528 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():352) - ...Clearing revived users
2014-07-01 14:22:40,529 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():359) - ...Coming back to the main user from the user 'system'
2014-07-01 14:22:40,531 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FOLLOW
(
	FOLLOW_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'フォローID',
	YOU_ID INT(100) NOT NULL UNIQUE COMMENT 'フォローする人のID : 会員のID
',
	ME_ID INT(100) NOT NULL COMMENT 'フォローされる人のID : 会員のID
',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	DEL_FLG CHAR(1) DEFAULT 'N' NOT NULL COMMENT 'DEL_FLG : 削除フラグ Y=削除　N=削除していない',
	PRIMARY KEY (FOLLOW_ID)
) COMMENT = 'フォロー'
2014-07-01 14:22:40,580 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE LOGIN
(
	LOGIN_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ログインID : ログインした瞬間のID
',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (LOGIN_ID)
) COMMENT = 'ログイン'
2014-07-01 14:22:40,654 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER
(
	MEMBER_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員のID
',
	EMAIL_ADDRESS VARCHAR(100) NOT NULL UNIQUE COMMENT 'メールアドレス : 会員のメールアドレス',
	USER_NAME VARCHAR(50) NOT NULL UNIQUE COMMENT '会員ユーザ名 : 会員のユーザ名',
	BIRTHDATE DATE COMMENT '生年月日 : 会員の生年月日',
	PROFILE VARCHAR(200) COMMENT 'プロフィール',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員'
2014-07-01 14:22:40,737 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PASSWORD VARCHAR(50) NOT NULL COMMENT 'パスワード',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員セキュリティ'
2014-07-01 14:22:40,800 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_WITHDRAW
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	WITHDRAWAL_REASON_ID INT COMMENT '退会理由ID : 会員の退会理由ID',
	WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト',
	WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT 'withdrawal_datetime : 退会日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員退会'
2014-07-01 14:22:40,830 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-07-01 14:22:40,862 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FOLLOW
	ADD FOREIGN KEY (ME_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 14:22:40,927 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD FOREIGN KEY (YOU_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 14:22:41,002 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 14:22:41,074 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 14:22:41,155 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_WITHDRAW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 14:22:41,214 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 14:22:41,327 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=12 failure=0
2014-07-01 14:22:41,330 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=14 failure=0 (in 2 files)
2014-07-01 14:22:41,332 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-07-01 14:22:41,395 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-07-01 14:22:41,395 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-07-01 14:22:41,396 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-07-01 14:22:41,397 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-07-01 14:22:41,397 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-07-01 14:22:41,398 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-07-01 14:22:41,420 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-07-01 14:22:41,421 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-07-01 14:22:41,422 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-07-01 14:22:41,723 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-01 14:22:41,724 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-01 14:22:41,725 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-01 14:22:41,793 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{1, Stojkovic@gmail.com, Pixy, 1965/03/03, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:22:41,841 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{2, Savicevic@gmail.com, Genius, 1966/09/15, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:22:41,843 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{3, Mijatovic@gmail.com, Mijato, null, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:22:41,845 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{4, Stankovic@gmail.com, Stanko, 1978/09/11, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:22:41,846 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{5, Milosevic@gmail.com, Milose, null, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:22:41,847 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{6, Mihajlovic@gmail.com, FreeKick, 1969/02/20, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:22:41,849 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 14:22:41,860 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 6 rows are loaded to MEMBER
2014-07-01 14:22:41,863 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 1, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:22:41,865 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 2, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:22:41,867 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{3, 3, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:22:41,868 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{4, 4, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:22:41,869 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{5, 5, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:22:41,870 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 14:22:41,875 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 5 rows are loaded to LOGIN
2014-07-01 14:22:41,877 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:22:41,879 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:22:41,880 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{3, ccc, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:22:41,882 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{4, ddd, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:22:41,883 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{5, eee2, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:22:41,884 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{6, fff, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:22:41,885 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 14:22:41,895 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 6 rows are loaded to MEMBER_SECURITY
2014-07-01 14:22:41,896 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 2014-06-24 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-26 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:22:41,899 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{2, 2345, 清君頼りになるー！, 2014-06-24 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0}
2014-07-01 14:22:41,902 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{3, 3456, GLD, 2014-06-24 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0}
2014-07-01 14:22:41,904 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{4, 875, BRZ, 2014-06-24 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0}
2014-07-01 14:22:41,905 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{5, 1111, BRZ, 2014-06-24 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0}
2014-07-01 14:22:41,906 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{6, 5422, SIL, 2014-06-24 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0}
2014-07-01 14:22:41,907 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 14:22:41,913 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 6 rows are loaded to TWEET
2014-07-01 14:22:41,914 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{1, 1, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123}
2014-07-01 14:22:41,916 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{2, 1, null, 2007/11/11 16:00:00.456}
2014-07-01 14:22:41,918 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{3, 2, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789}
2014-07-01 14:22:41,920 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{4, 3, コバチが２人いるため, 2007/11/13 16:00:00.456}
2014-07-01 14:22:41,932 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 4 rows are loaded to MEMBER_WITHDRAW
2014-07-01 14:22:41,936 [main] ERROR (DfDBFluteTaskUtil#logException():161) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'ReplaceSchema'.

[Advice]
Check the exception messages and the stack traces.

[Database Product]
MySQL 5.6.17

[JDBC Driver]
MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
* * * * * * * * * */
org.seasar.dbflute.exception.DfLoadDataRegistrationFailureException: Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Found the no-exist column in your data file.

[Data Directory]
playsql/data/ut/xls

[Data File]
playsql\data\ut\xls\20-member.xls

[Table Name]
FOLLOW

[Found Column]
DEL_FLAG
* * * * * * * * * */
	at org.seasar.dbflute.logic.replaceschema.loaddata.impl.dataprop.DfLoadingControlProp.throwLoadingControlNoExistenceColumnFoundException(DfLoadingControlProp.java:152)
	at org.seasar.dbflute.logic.replaceschema.loaddata.impl.dataprop.DfLoadingControlProp.checkColumnDefExistence(DfLoadingControlProp.java:133)
	at org.seasar.dbflute.logic.replaceschema.loaddata.impl.DfAbsractDataWriter.checkColumnDefExistence(DfAbsractDataWriter.java:1108)
	at org.seasar.dbflute.logic.replaceschema.loaddata.impl.DfXlsDataHandlerImpl.checkHeaderColumnIfNeeds(DfXlsDataHandlerImpl.java:310)
	at org.seasar.dbflute.logic.replaceschema.loaddata.impl.DfXlsDataHandlerImpl.doWriteDataTable(DfXlsDataHandlerImpl.java:173)
	at org.seasar.dbflute.logic.replaceschema.loaddata.impl.DfXlsDataHandlerImpl.doWriteDataSet(DfXlsDataHandlerImpl.java:152)
	at org.seasar.dbflute.logic.replaceschema.loaddata.impl.DfXlsDataHandlerImpl.writeSeveralData(DfXlsDataHandlerImpl.java:133)
	at org.seasar.dbflute.logic.replaceschema.process.DfLoadDataProcess.writeDbFromXls(DfLoadDataProcess.java:319)
	at org.seasar.dbflute.logic.replaceschema.process.DfLoadDataProcess.writeDbFromXls(DfLoadDataProcess.java:307)
	at org.seasar.dbflute.logic.replaceschema.process.DfLoadDataProcess.writeDbFromXlsAsLoadingTypeData(DfLoadDataProcess.java:291)
	at org.seasar.dbflute.logic.replaceschema.process.DfLoadDataProcess.execute(DfLoadDataProcess.java:159)
	at org.seasar.dbflute.task.DfReplaceSchemaTask.loadData(DfReplaceSchemaTask.java:274)
	at org.seasar.dbflute.task.DfReplaceSchemaTask.doExecuteCoreProcess(DfReplaceSchemaTask.java:238)
	at org.seasar.dbflute.task.DfReplaceSchemaTask.executeCoreProcess(DfReplaceSchemaTask.java:232)
	at org.seasar.dbflute.task.DfReplaceSchemaTask.processMain(DfReplaceSchemaTask.java:225)
	at org.seasar.dbflute.task.DfReplaceSchemaTask.doExecute(DfReplaceSchemaTask.java:153)
	at org.seasar.dbflute.task.bs.DfAbstractTexenTask$1.callActualExecute(DfAbstractTexenTask.java:130)
	at org.seasar.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:184)
	at org.seasar.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:77)
	at org.seasar.dbflute.task.bs.DfAbstractTexenTask.execute(DfAbstractTexenTask.java:152)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:105)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
2014-07-01 14:22:41,983 [main] INFO  (DfDataSourceHandler#commit():94) - ...commit()
2014-07-01 14:22:41,984 [main] INFO  (DfDataSourceHandler#destroy():117) - ...rollback()
2014-07-01 14:22:41,984 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-07-01 14:22:41,988 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m04s615ms *Abort

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=14 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=0
  x (failed: Look at the exception message)
    * * * * * *
    * Failure *
    * * * * * *
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-07-01 14:23:31,215 [main] INFO  (DfReplaceSchemaTask#begin():87) - +------------------------------------------+
2014-07-01 14:23:31,218 [main] INFO  (DfReplaceSchemaTask#begin():88) - |                                          |
2014-07-01 14:23:31,218 [main] INFO  (DfReplaceSchemaTask#begin():89) - |              ReplaceSchema               |
2014-07-01 14:23:31,237 [main] INFO  (DfReplaceSchemaTask#begin():97) - |                                          |
2014-07-01 14:23:31,238 [main] INFO  (DfReplaceSchemaTask#begin():98) - +------------------------------------------+
2014-07-01 14:23:31,240 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():329) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2014-07-01 14:23:34,400 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 14:23:34,401 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 14:23:34,403 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 14:23:34,404 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 14:23:34,417 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-07-01 14:23:34,654 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-07-01 14:23:34,655 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-07-01 14:23:34,673 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():207) - 
2014-07-01 14:23:34,674 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():208) - * * * * * * * * * * *
2014-07-01 14:23:34,675 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():209) - *                   *
2014-07-01 14:23:34,676 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():210) - * Initialize Schema *
2014-07-01 14:23:34,676 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():211) - *                   *
2014-07-01 14:23:34,677 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():212) - * * * * * * * * * * *
2014-07-01 14:23:34,694 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-01 14:23:34,695 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-01 14:23:34,696 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-01 14:23:34,736 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table follow
2014-07-01 14:23:34,774 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table login
2014-07-01 14:23:34,803 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_security
2014-07-01 14:23:34,840 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_withdraw
2014-07-01 14:23:34,870 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table tweet
2014-07-01 14:23:34,896 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_1
2014-07-01 14:23:34,905 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_2
2014-07-01 14:23:34,916 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table login drop foreign key login_ibfk_1
2014-07-01 14:23:34,927 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_security drop foreign key member_security_ibfk_1
2014-07-01 14:23:34,937 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_withdraw drop foreign key member_withdraw_ibfk_1
2014-07-01 14:23:34,957 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table tweet drop foreign key tweet_ibfk_1
2014-07-01 14:23:34,983 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table follow
2014-07-01 14:23:35,010 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table login
2014-07-01 14:23:35,030 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member
2014-07-01 14:23:35,049 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_security
2014-07-01 14:23:35,067 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_withdraw
2014-07-01 14:23:35,087 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table tweet
2014-07-01 14:23:35,154 [main] INFO  (DfCreateSchemaProcess#createSchema():244) - 
2014-07-01 14:23:35,155 [main] INFO  (DfCreateSchemaProcess#createSchema():245) - * * * * * * * * *
2014-07-01 14:23:35,155 [main] INFO  (DfCreateSchemaProcess#createSchema():246) - *               *
2014-07-01 14:23:35,156 [main] INFO  (DfCreateSchemaProcess#createSchema():247) - * Create Schema *
2014-07-01 14:23:35,157 [main] INFO  (DfCreateSchemaProcess#createSchema():248) - *               *
2014-07-01 14:23:35,158 [main] INFO  (DfCreateSchemaProcess#createSchema():249) - * * * * * * * * *
2014-07-01 14:23:35,164 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-00-system.sql
2014-07-01 14:23:35,167 [main] INFO  (DfReplaceSchemaProperties#checkTargetEnvType():277) - ...Checking envType: ut in [ut]
2014-07-01 14:23:35,168 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:checkEnv(ut)#

-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database twitter
2014-07-01 14:23:35,173 [main] INFO  (DfCreateSchemaProcess$1#dispatch():273) - ...Creating a connection to system
2014-07-01 14:23:35,174 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():514) - ...Creating a connection for additional user: root
2014-07-01 14:23:35,189 [main] INFO  (DfCreateSchemaProcess$1#dispatch():299) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2014-07-01 14:23:35,190 [main] INFO  (DfCreateSchemaProcess$1#dispatch():301) -  -> Can't create database 'twitter'; database exists
2014-07-01 14:23:35,192 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():411) - ...Reviving the user 'system' until the end of this SQL file
2014-07-01 14:23:35,193 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on twitter.*
  to twitter@localhost identified by 'twitter'
2014-07-01 14:23:35,197 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2014-07-01 14:23:35,200 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2014-07-01 14:23:35,201 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-10-basic.sql
2014-07-01 14:23:35,206 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():348) - ...Saying good-bye to the user 'system' again
2014-07-01 14:23:35,207 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():352) - ...Clearing revived users
2014-07-01 14:23:35,208 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():359) - ...Coming back to the main user from the user 'system'
2014-07-01 14:23:35,210 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FOLLOW
(
	FOLLOW_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'フォローID',
	YOU_ID INT(100) NOT NULL UNIQUE COMMENT 'フォローする人のID : 会員のID
',
	ME_ID INT(100) NOT NULL COMMENT 'フォローされる人のID : 会員のID
',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	DEL_FLG CHAR(1) DEFAULT 'N' NOT NULL COMMENT 'DEL_FLG : 削除フラグ Y=削除　N=削除していない',
	PRIMARY KEY (FOLLOW_ID)
) COMMENT = 'フォロー'
2014-07-01 14:23:35,263 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE LOGIN
(
	LOGIN_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ログインID : ログインした瞬間のID
',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (LOGIN_ID)
) COMMENT = 'ログイン'
2014-07-01 14:23:35,336 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER
(
	MEMBER_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員のID
',
	EMAIL_ADDRESS VARCHAR(100) NOT NULL UNIQUE COMMENT 'メールアドレス : 会員のメールアドレス',
	USER_NAME VARCHAR(50) NOT NULL UNIQUE COMMENT '会員ユーザ名 : 会員のユーザ名',
	BIRTHDATE DATE COMMENT '生年月日 : 会員の生年月日',
	PROFILE VARCHAR(200) COMMENT 'プロフィール',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員'
2014-07-01 14:23:35,418 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PASSWORD VARCHAR(50) NOT NULL COMMENT 'パスワード',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員セキュリティ'
2014-07-01 14:23:35,476 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_WITHDRAW
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	WITHDRAWAL_REASON_ID INT COMMENT '退会理由ID : 会員の退会理由ID',
	WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト',
	WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT 'withdrawal_datetime : 退会日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員退会'
2014-07-01 14:23:35,548 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-07-01 14:23:35,599 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FOLLOW
	ADD FOREIGN KEY (ME_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 14:23:35,680 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD FOREIGN KEY (YOU_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 14:23:35,758 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 14:23:35,818 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 14:23:35,902 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_WITHDRAW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 14:23:35,989 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 14:23:36,089 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=12 failure=0
2014-07-01 14:23:36,091 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=14 failure=0 (in 2 files)
2014-07-01 14:23:36,093 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-07-01 14:23:36,134 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-07-01 14:23:36,135 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-07-01 14:23:36,135 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-07-01 14:23:36,136 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-07-01 14:23:36,136 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-07-01 14:23:36,137 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-07-01 14:23:36,160 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-07-01 14:23:36,161 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-07-01 14:23:36,162 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-07-01 14:23:36,446 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-01 14:23:36,447 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-01 14:23:36,448 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-01 14:23:36,515 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{1, Stojkovic@gmail.com, Pixy, 1965/03/03, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:23:36,564 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{2, Savicevic@gmail.com, Genius, 1966/09/15, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:23:36,567 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{3, Mijatovic@gmail.com, Mijato, null, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:23:36,568 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{4, Stankovic@gmail.com, Stanko, 1978/09/11, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:23:36,570 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{5, Milosevic@gmail.com, Milose, null, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:23:36,571 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{6, Mihajlovic@gmail.com, FreeKick, 1969/02/20, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:23:36,573 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 14:23:36,584 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 6 rows are loaded to MEMBER
2014-07-01 14:23:36,586 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 1, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:23:36,588 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 2, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:23:36,589 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{3, 3, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:23:36,590 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{4, 4, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:23:36,591 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{5, 5, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:23:36,592 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 14:23:36,602 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 5 rows are loaded to LOGIN
2014-07-01 14:23:36,603 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:23:36,605 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:23:36,606 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{3, ccc, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:23:36,607 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{4, ddd, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:23:36,607 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{5, eee2, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:23:36,608 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{6, fff, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:23:36,609 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 14:23:36,615 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 6 rows are loaded to MEMBER_SECURITY
2014-07-01 14:23:36,616 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 2014-06-24 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-26 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 14:23:36,619 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{2, 2345, 清君頼りになるー！, 2014-06-24 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0}
2014-07-01 14:23:36,622 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{3, 3456, GLD, 2014-06-24 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0}
2014-07-01 14:23:36,623 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{4, 875, BRZ, 2014-06-24 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0}
2014-07-01 14:23:36,624 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{5, 1111, BRZ, 2014-06-24 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0}
2014-07-01 14:23:36,625 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{6, 5422, SIL, 2014-06-24 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0}
2014-07-01 14:23:36,626 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 14:23:36,636 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 6 rows are loaded to TWEET
2014-07-01 14:23:36,637 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{1, 1, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123}
2014-07-01 14:23:36,639 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{2, 1, null, 2007/11/11 16:00:00.456}
2014-07-01 14:23:36,640 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{3, 2, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789}
2014-07-01 14:23:36,642 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{4, 3, コバチが２人いるため, 2007/11/13 16:00:00.456}
2014-07-01 14:23:36,649 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 4 rows are loaded to MEMBER_WITHDRAW
2014-07-01 14:23:36,650 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - FOLLOW:{0, 1, 1, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, n}
2014-07-01 14:23:36,659 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 1 rows are loaded to FOLLOW
2014-07-01 14:23:36,662 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():379) - ...Checking implicit set of classification
2014-07-01 14:23:36,675 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - 
2014-07-01 14:23:36,675 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * * * * * * * **
2014-07-01 14:23:36,676 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2014-07-01 14:23:36,676 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * Take Finally *
2014-07-01 14:23:36,677 [main] INFO  (DfTakeFinallyProcess#takeFinally():225) - *              *
2014-07-01 14:23:36,678 [main] INFO  (DfTakeFinallyProcess#takeFinally():226) - * * * * * * * **
2014-07-01 14:23:36,693 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: take-finally.sql
2014-07-01 14:23:36,694 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2014-07-01 14:23:36,695 [main] INFO  (DfSqlFileFireMan#fire():90) - {Take Finally}: success=0 failure=0 (in 1 files)
2014-07-01 14:23:36,697 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-07-01 14:23:36,700 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m05s482ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=14 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=1
  (ut)
  o 20-member.xls

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-07-01 14:23:37,585 [main] INFO  (TorqueJDBCTransformTask#begin():100) - +------------------------------------------+
2014-07-01 14:23:37,588 [main] INFO  (TorqueJDBCTransformTask#begin():101) - |                                          |
2014-07-01 14:23:37,588 [main] INFO  (TorqueJDBCTransformTask#begin():102) - |                   JDBC                   |
2014-07-01 14:23:37,589 [main] INFO  (TorqueJDBCTransformTask#begin():103) - |                                          |
2014-07-01 14:23:37,590 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2014-07-01 14:23:37,629 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 14:23:37,630 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 14:23:37,630 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 14:23:37,631 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 14:23:37,672 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2014-07-01 14:23:37,673 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2014-07-01 14:23:37,673 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1469) - ...Loading previous schema (schema diff process)
2014-07-01 14:23:37,681 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-01 14:23:37,742 [main] INFO  (DfSchemaXmlSerializer#generateXML():361) - ...Getting DB connection
2014-07-01 14:23:37,746 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-07-01 14:23:37,925 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-07-01 14:23:37,925 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-07-01 14:23:37,927 [main] INFO  (DfSchemaXmlSerializer#generateXML():364) - ...Getting DB meta data
2014-07-01 14:23:37,929 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-01 14:23:37,930 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-01 14:23:37,930 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-01 14:23:37,941 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2014-07-01 14:23:37,944 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2014-07-01 14:23:37,957 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - 
2014-07-01 14:23:37,958 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2014-07-01 14:23:37,958 [main] INFO  (DfSchemaXmlSerializer#processTable():423) - $ [Table List]
2014-07-01 14:23:37,959 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.follow(TABLE) // フォロー
2014-07-01 14:23:37,995 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.login(TABLE) // ログイン
2014-07-01 14:23:38,009 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member(TABLE) // 会員
2014-07-01 14:23:38,025 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_security(TABLE) // 会員セキュリティ
2014-07-01 14:23:38,039 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_withdraw(TABLE) // 会員退会
2014-07-01 14:23:38,052 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.tweet(TABLE) // TWEET
2014-07-01 14:23:38,065 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 
2014-07-01 14:23:38,066 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ [Table Count]
2014-07-01 14:23:38,066 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ 6
2014-07-01 14:23:38,067 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - $ = = = = = = = = = =/
2014-07-01 14:23:38,068 [main] INFO  (DfSchemaXmlSerializer#processTable():439) - 
2014-07-01 14:23:38,089 [main] INFO  (DfSchemaXmlSerializer#processSequence():799) - ...Getting sequences
2014-07-01 14:23:38,093 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2014-07-01 14:23:38,094 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-twitter.xml
2014-07-01 14:23:38,102 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2014-07-01 14:23:38,124 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1487) - ...Loading next schema (schema diff process)
2014-07-01 14:23:38,126 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-01 14:23:38,181 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1492) -  -> different from previous (schema diff)
2014-07-01 14:23:38,183 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1494) - ...Serializing schema-diff:
2014-07-01 14:23:38,184 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1495) -   filePath = ./schema/project-history-twitter.diffmap
2014-07-01 14:23:38,235 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-07-01 14:23:38,241 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s652ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2014-07-01 14:23:39,142 [main] INFO  (TorqueDocumentationTask#begin():171) - +------------------------------------------+
2014-07-01 14:23:39,145 [main] INFO  (TorqueDocumentationTask#begin():172) - |                                          |
2014-07-01 14:23:39,145 [main] INFO  (TorqueDocumentationTask#begin():173) - |                   Doc                    |
2014-07-01 14:23:39,146 [main] INFO  (TorqueDocumentationTask#begin():181) - |                                          |
2014-07-01 14:23:39,146 [main] INFO  (TorqueDocumentationTask#begin():182) - +------------------------------------------+
2014-07-01 14:23:39,190 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 14:23:39,191 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 14:23:39,191 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 14:23:39,192 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 14:23:39,195 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():242) - 
2014-07-01 14:23:39,195 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():243) - * * * * * * * * * * *
2014-07-01 14:23:39,196 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():244) - *                   *
2014-07-01 14:23:39,196 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():245) - *    Schema HTML    *
2014-07-01 14:23:39,197 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - *                   *
2014-07-01 14:23:39,197 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2014-07-01 14:23:39,353 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-01 14:23:39,414 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("doc/ControlDocument.vm", c);
2014-07-01 14:23:39,472 [main] INFO  (Database#doEnableDocumentOutputDirectory():1180) - ...Setting up documentOutputDirectory: ./output/doc
2014-07-01 14:23:39,483 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-07-01 14:23:39,483 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-07-01 14:23:39,486 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-07-01 14:23:39,487 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-07-01 14:23:39,488 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-07-01 14:23:39,490 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-07-01 14:23:39,492 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-07-01 14:23:39,493 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-07-01 14:23:39,496 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-07-01 14:23:39,505 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():150) - ...Loading schema history
2014-07-01 14:23:39,586 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():154) -  -> found history: count=23
2014-07-01 14:23:39,819 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-01 14:23:39,832 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s686ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Doc}
2014-07-01 14:23:42,799 [main] INFO  (TorqueDataModelTask#begin():105) - +------------------------------------------+
2014-07-01 14:23:42,802 [main] INFO  (TorqueDataModelTask#begin():106) - |                                          |
2014-07-01 14:23:42,802 [main] INFO  (TorqueDataModelTask#begin():107) - |                 Generate                 |
2014-07-01 14:23:42,803 [main] INFO  (TorqueDataModelTask#begin():108) - |                                          |
2014-07-01 14:23:42,803 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2014-07-01 14:23:42,842 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 14:23:42,842 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 14:23:42,843 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 14:23:42,844 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 14:23:42,863 [main] INFO  (TorqueDataModelTask#setupControlTemplate():160) - 
2014-07-01 14:23:42,864 [main] INFO  (TorqueDataModelTask#setupControlTemplate():161) - ...Using Java control: om/ControlGenerateJava.vm
2014-07-01 14:23:43,002 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-01 14:23:43,045 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlGenerateJava.vm", c);
2014-07-01 14:23:43,195 [main] INFO  (Database#doEnableGenerateOutputDirectory():1148) - ...Setting up generateOutputDirectory: ../src/main/java
2014-07-01 14:23:43,200 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-07-01 14:23:43,201 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-07-01 14:23:43,203 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-07-01 14:23:43,204 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-07-01 14:23:43,205 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-07-01 14:23:43,207 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-07-01 14:23:43,208 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-07-01 14:23:43,209 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-07-01 14:23:43,212 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-07-01 14:23:43,226 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - /=============================
2014-07-01 14:23:43,226 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():60) - ...Initializing include query.
2014-07-01 14:23:43,227 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - String
2014-07-01 14:23:43,228 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Number
2014-07-01 14:23:43,228 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Date
2014-07-01 14:23:43,229 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotEqual -> []
2014-07-01 14:23:43,230 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   InScope -> []
2014-07-01 14:23:43,230 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotInScope -> []
2014-07-01 14:23:43,231 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - OrderBy
2014-07-01 14:23:43,231 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():62) - ========/
2014-07-01 14:23:43,246 [main] INFO  (Database#info():2573) - public void parseAllCommon() {
2014-07-01 14:23:43,248 [main] INFO  (Database#info():2573) -     parse('DBCurrent');
2014-07-01 14:23:43,253 [main] INFO  (Database#info():2573) -     parse('DBFluteConfig');
2014-07-01 14:23:43,294 [main] INFO  (Database#info():2573) -     parse('DBFluteInitializer');
2014-07-01 14:23:43,299 [main] INFO  (Database#info():2573) -     parse('DBMetaInstanceHandler');
2014-07-01 14:23:43,314 [main] INFO  (Database#info():2573) -     parse('EntityDefinedCommonColumn');
2014-07-01 14:23:43,319 [main] INFO  (Database#info():2573) -     parse('ImplementedBehaviorSelector');
2014-07-01 14:23:43,323 [main] INFO  (Database#info():2573) -     parse('ImplementedCommonColumnAutoSetupper');
2014-07-01 14:23:43,328 [main] INFO  (Database#info():2573) -     parse('ImplementedInvokerAssistant');
2014-07-01 14:23:43,331 [main] INFO  (Database#info():2573) -     parse('ImplementedSqlClauseCreator');
2014-07-01 14:23:43,333 [main] INFO  (Database#info():2573) - }
2014-07-01 14:23:43,334 [main] INFO  (Database#info():2573) - public void parseContainerConfig() {
2014-07-01 14:23:43,335 [main] INFO  (Database#info():2573) -     parse('../resources/dbflute.dicon')
2014-07-01 14:23:43,342 [main] INFO  (Database#info():2573) - }
2014-07-01 14:23:43,348 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldTableClass() {
2014-07-01 14:23:43,369 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-07-01 14:23:43,370 [main] INFO  (Database#info():2573) - public void parseTableClass() {
2014-07-01 14:23:43,372 [main] INFO  (Database#info():2573) -     parse('follow');
2014-07-01 14:23:43,663 [main] INFO  (Database#info():2573) -     parse('login');
2014-07-01 14:23:43,859 [main] INFO  (Database#info():2573) -     parse('member');
2014-07-01 14:23:44,232 [main] INFO  (Database#info():2573) -     parse('member_security');
2014-07-01 14:23:44,349 [main] INFO  (Database#info():2573) -     parse('member_withdraw');
2014-07-01 14:23:44,456 [main] INFO  (Database#info():2573) -     parse('tweet');
2014-07-01 14:23:44,566 [main] INFO  (Database#info():2573) - }
2014-07-01 14:23:44,567 [main] INFO  (Database#info():2573) -  
2014-07-01 14:23:44,600 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-01 14:23:44,607 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s803ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Generate}
2014-07-01 14:23:45,518 [main] INFO  (DfOutsideSqlTestTask#begin():72) - +------------------------------------------+
2014-07-01 14:23:45,521 [main] INFO  (DfOutsideSqlTestTask#begin():73) - |                                          |
2014-07-01 14:23:45,521 [main] INFO  (DfOutsideSqlTestTask#begin():74) - |              OutsideSqlTest              |
2014-07-01 14:23:45,522 [main] INFO  (DfOutsideSqlTestTask#begin():75) - |                                          |
2014-07-01 14:23:45,523 [main] INFO  (DfOutsideSqlTestTask#begin():76) - +------------------------------------------+
2014-07-01 14:23:45,579 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 14:23:45,580 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 14:23:45,580 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 14:23:45,581 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 14:23:45,617 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-07-01 14:23:45,623 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s099ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2014-07-01 14:23:46,523 [main] INFO  (DfSql2EntityTask#begin():100) - +------------------------------------------+
2014-07-01 14:23:46,526 [main] INFO  (DfSql2EntityTask#begin():101) - |                                          |
2014-07-01 14:23:46,526 [main] INFO  (DfSql2EntityTask#begin():102) - |                Sql2Entity                |
2014-07-01 14:23:46,527 [main] INFO  (DfSql2EntityTask#begin():103) - |                                          |
2014-07-01 14:23:46,528 [main] INFO  (DfSql2EntityTask#begin():104) - +------------------------------------------+
2014-07-01 14:23:46,566 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 14:23:46,567 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 14:23:46,567 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 14:23:46,568 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 14:23:46,584 [main] INFO  (DfSql2EntityTask#setupControlTemplate():170) - 
2014-07-01 14:23:46,585 [main] INFO  (DfSql2EntityTask#setupControlTemplate():171) - ...Using Java control: om/ControlSql2EntityJava.vm
2014-07-01 14:23:46,593 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-01 14:23:46,640 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-07-01 14:23:46,787 [main] INFO  (DfSql2EntityTask#initControlContext():301) - 
2014-07-01 14:23:46,788 [main] INFO  (DfSql2EntityTask#initControlContext():302) - ...Preparing generation of customize-entities and parameter-beans
2014-07-01 14:23:46,788 [main] INFO  (DfSql2EntityTask#initControlContext():303) - * * * * * * * * * *
2014-07-01 14:23:46,789 [main] INFO  (DfSql2EntityTask#initControlContext():304) - * CustomizeEntity *
2014-07-01 14:23:46,790 [main] INFO  (DfSql2EntityTask#initControlContext():305) - * * * * * * * * * *
2014-07-01 14:23:46,790 [main] INFO  (DfSql2EntityTask#showParameterBean():879) - * * * * * * * * *
2014-07-01 14:23:46,791 [main] INFO  (DfSql2EntityTask#showParameterBean():880) - * ParameterBean *
2014-07-01 14:23:46,791 [main] INFO  (DfSql2EntityTask#showParameterBean():881) - * * * * * * * * *
2014-07-01 14:23:46,796 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlSql2EntityJava.vm", c);
2014-07-01 14:23:46,902 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1164) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2014-07-01 14:23:46,905 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldCustomizeClass() {
2014-07-01 14:23:46,916 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-07-01 14:23:46,916 [main] INFO  (Database#info():2573) - public void parseCustomizeEntity() {
2014-07-01 14:23:46,919 [main] INFO  (Database#info():2573) - }
2014-07-01 14:23:46,932 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():293) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2014-07-01 14:23:46,937 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-01 14:23:46,945 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s416ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2014-07-01 19:03:09,381 [main] INFO  (DfReplaceSchemaTask#begin():87) - +------------------------------------------+
2014-07-01 19:03:09,385 [main] INFO  (DfReplaceSchemaTask#begin():88) - |                                          |
2014-07-01 19:03:09,385 [main] INFO  (DfReplaceSchemaTask#begin():89) - |              ReplaceSchema               |
2014-07-01 19:03:09,407 [main] INFO  (DfReplaceSchemaTask#begin():97) - |                                          |
2014-07-01 19:03:09,407 [main] INFO  (DfReplaceSchemaTask#begin():98) - +------------------------------------------+
2014-07-01 19:03:09,409 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():329) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2014-07-01 19:03:10,759 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 19:03:10,761 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 19:03:10,762 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 19:03:10,763 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 19:03:10,777 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-07-01 19:03:11,024 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-07-01 19:03:11,025 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-07-01 19:03:11,045 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():207) - 
2014-07-01 19:03:11,046 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():208) - * * * * * * * * * * *
2014-07-01 19:03:11,046 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():209) - *                   *
2014-07-01 19:03:11,047 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():210) - * Initialize Schema *
2014-07-01 19:03:11,048 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():211) - *                   *
2014-07-01 19:03:11,048 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():212) - * * * * * * * * * * *
2014-07-01 19:03:11,068 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-01 19:03:11,069 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-01 19:03:11,069 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-01 19:03:11,121 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table follow
2014-07-01 19:03:11,159 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table login
2014-07-01 19:03:11,214 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_security
2014-07-01 19:03:11,241 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_withdraw
2014-07-01 19:03:11,270 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table tweet
2014-07-01 19:03:11,311 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_1
2014-07-01 19:03:11,333 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_2
2014-07-01 19:03:11,343 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table login drop foreign key login_ibfk_1
2014-07-01 19:03:11,353 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_security drop foreign key member_security_ibfk_1
2014-07-01 19:03:11,363 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_withdraw drop foreign key member_withdraw_ibfk_1
2014-07-01 19:03:11,373 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table tweet drop foreign key tweet_ibfk_1
2014-07-01 19:03:11,389 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table follow
2014-07-01 19:03:11,400 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table login
2014-07-01 19:03:11,417 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member
2014-07-01 19:03:11,433 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_security
2014-07-01 19:03:11,443 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_withdraw
2014-07-01 19:03:11,454 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table tweet
2014-07-01 19:03:11,498 [main] INFO  (DfCreateSchemaProcess#createSchema():244) - 
2014-07-01 19:03:11,499 [main] INFO  (DfCreateSchemaProcess#createSchema():245) - * * * * * * * * *
2014-07-01 19:03:11,500 [main] INFO  (DfCreateSchemaProcess#createSchema():246) - *               *
2014-07-01 19:03:11,500 [main] INFO  (DfCreateSchemaProcess#createSchema():247) - * Create Schema *
2014-07-01 19:03:11,501 [main] INFO  (DfCreateSchemaProcess#createSchema():248) - *               *
2014-07-01 19:03:11,502 [main] INFO  (DfCreateSchemaProcess#createSchema():249) - * * * * * * * * *
2014-07-01 19:03:11,509 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-00-system.sql
2014-07-01 19:03:11,513 [main] INFO  (DfReplaceSchemaProperties#checkTargetEnvType():277) - ...Checking envType: ut in [ut]
2014-07-01 19:03:11,514 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:checkEnv(ut)#

-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database twitter
2014-07-01 19:03:11,517 [main] INFO  (DfCreateSchemaProcess$1#dispatch():273) - ...Creating a connection to system
2014-07-01 19:03:11,519 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():514) - ...Creating a connection for additional user: root
2014-07-01 19:03:11,531 [main] INFO  (DfCreateSchemaProcess$1#dispatch():299) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2014-07-01 19:03:11,533 [main] INFO  (DfCreateSchemaProcess$1#dispatch():301) -  -> Can't create database 'twitter'; database exists
2014-07-01 19:03:11,535 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():411) - ...Reviving the user 'system' until the end of this SQL file
2014-07-01 19:03:11,535 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on twitter.*
  to twitter@localhost identified by 'twitter'
2014-07-01 19:03:11,539 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2014-07-01 19:03:11,542 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2014-07-01 19:03:11,543 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-10-basic.sql
2014-07-01 19:03:11,544 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():348) - ...Saying good-bye to the user 'system' again
2014-07-01 19:03:11,544 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():352) - ...Clearing revived users
2014-07-01 19:03:11,546 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():359) - ...Coming back to the main user from the user 'system'
2014-07-01 19:03:11,549 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FOLLOW
(
	FOLLOW_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'フォローID',
	YOU_ID INT(100) NOT NULL UNIQUE COMMENT 'フォローする人のID : 会員のID
',
	ME_ID INT(100) NOT NULL COMMENT 'フォローされる人のID : 会員のID
',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	DEL_FLG CHAR(1) DEFAULT 'N' NOT NULL COMMENT 'DEL_FLG : 削除フラグ Y=削除　N=削除していない',
	PRIMARY KEY (FOLLOW_ID)
) COMMENT = 'フォロー'
2014-07-01 19:03:11,593 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE LOGIN
(
	LOGIN_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ログインID : ログインした瞬間のID
',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (LOGIN_ID)
) COMMENT = 'ログイン'
2014-07-01 19:03:11,664 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER
(
	MEMBER_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員のID
',
	EMAIL_ADDRESS VARCHAR(100) NOT NULL UNIQUE COMMENT 'メールアドレス : 会員のメールアドレス',
	USER_NAME VARCHAR(50) NOT NULL UNIQUE COMMENT '会員ユーザ名 : 会員のユーザ名',
	BIRTHDATE DATE COMMENT '生年月日 : 会員の生年月日',
	PROFILE VARCHAR(200) COMMENT 'プロフィール',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員'
2014-07-01 19:03:11,756 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PASSWORD VARCHAR(50) NOT NULL COMMENT 'パスワード',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員セキュリティ'
2014-07-01 19:03:11,837 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_WITHDRAW
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	WITHDRAWAL_REASON_ID INT COMMENT '退会理由ID : 会員の退会理由ID',
	WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト',
	WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT 'withdrawal_datetime : 退会日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員退会'
2014-07-01 19:03:11,915 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-07-01 19:03:11,989 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FOLLOW
	ADD FOREIGN KEY (ME_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 19:03:12,083 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD FOREIGN KEY (YOU_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 19:03:12,182 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 19:03:12,277 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 19:03:12,371 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_WITHDRAW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 19:03:12,469 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 19:03:12,581 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=12 failure=0
2014-07-01 19:03:12,583 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=14 failure=0 (in 2 files)
2014-07-01 19:03:12,585 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-07-01 19:03:12,634 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-07-01 19:03:12,635 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-07-01 19:03:12,635 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-07-01 19:03:12,636 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-07-01 19:03:12,636 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-07-01 19:03:12,637 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-07-01 19:03:12,660 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-07-01 19:03:12,661 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-07-01 19:03:12,661 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-07-01 19:03:12,959 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-01 19:03:12,959 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-01 19:03:12,960 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-01 19:03:13,029 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{1, Stojkovic@gmail.com, Pixy, 1965/03/03, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:03:13,081 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{2, Savicevic@gmail.com, Genius, 1966/09/15, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:03:13,084 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{3, Mijatovic@gmail.com, Mijato, null, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:03:13,085 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{4, Stankovic@gmail.com, Stanko, 1978/09/11, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:03:13,088 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{5, Milosevic@gmail.com, Milose, null, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:03:13,090 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{6, Mihajlovic@gmail.com, FreeKick, 1969/02/20, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:03:13,092 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 19:03:13,103 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 6 rows are loaded to MEMBER
2014-07-01 19:03:13,106 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 1, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:03:13,108 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 2, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:03:13,109 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{3, 3, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:03:13,110 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{4, 4, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:03:13,111 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{5, 5, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:03:13,112 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 19:03:13,121 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 5 rows are loaded to LOGIN
2014-07-01 19:03:13,124 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:03:13,125 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:03:13,126 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{3, ccc, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:03:13,127 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{4, ddd, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:03:13,128 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{5, eee2, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:03:13,129 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{6, fff, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:03:13,130 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 19:03:13,135 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 6 rows are loaded to MEMBER_SECURITY
2014-07-01 19:03:13,137 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 2014-06-24 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-26 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:03:13,140 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{2, 2345, 清君頼りになるー！, 2014-06-24 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0}
2014-07-01 19:03:13,143 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{3, 3456, GLD, 2014-06-24 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0}
2014-07-01 19:03:13,143 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{4, 875, BRZ, 2014-06-24 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0}
2014-07-01 19:03:13,144 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{5, 1111, BRZ, 2014-06-24 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0}
2014-07-01 19:03:13,145 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{6, 5422, SIL, 2014-06-24 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0}
2014-07-01 19:03:13,146 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 19:03:13,156 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 6 rows are loaded to TWEET
2014-07-01 19:03:13,157 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{1, 1, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123}
2014-07-01 19:03:13,160 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{2, 1, null, 2007/11/11 16:00:00.456}
2014-07-01 19:03:13,161 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{3, 2, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789}
2014-07-01 19:03:13,163 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{4, 3, コバチが２人いるため, 2007/11/13 16:00:00.456}
2014-07-01 19:03:13,168 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 4 rows are loaded to MEMBER_WITHDRAW
2014-07-01 19:03:13,170 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - FOLLOW:{0, 0, 0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, n}
2014-07-01 19:03:13,171 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 19:03:13,177 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():225) - ...Retrying by suppressing batch update: FOLLOW
2014-07-01 19:03:13,183 [main] ERROR (DfDBFluteTaskUtil#logException():161) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'ReplaceSchema'.

[Advice]
Check the exception messages and the stack traces.

[Database Product]
MySQL 5.6.17

[JDBC Driver]
MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
* * * * * * * * * */
org.seasar.dbflute.exception.DfXlsDataRegistrationFailureException: Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to register the table data.

[Advice]
Please confirm the SQLException message.

[Data Directory]
playsql/data/ut/xls

[Xls File]
playsql\data\ut\xls\20-member.xls

[Table]
FOLLOW

[SQLException]
java.sql.BatchUpdateException
Cannot add or update a child row: a foreign key constraint fails (`twitter`.`follow`, CONSTRAINT `follow_ibfk_2` FOREIGN KEY (`YOU_ID`) REFERENCES `member` (`MEMBER_ID`))

[Non-Batch Retry]
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException
Cannot add or update a child row: a foreign key constraint fails (`twitter`.`follow`, CONSTRAINT `follow_ibfk_2` FOREIGN KEY (`YOU_ID`) REFERENCES `member` (`MEMBER_ID`))
[FOLLOW_ID, ME_ID, YOU_ID, UPD_DATETIME, INS_DATETIME, INS_TRACE, UPD_TRACE, DEL_FLG]
{0, 0, 0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, n}
Row Number: 1

[Bind Type]
FOLLOW_ID = java.lang.Integer
ME_ID = java.lang.Integer
YOU_ID = java.lang.Integer
UPD_DATETIME = java.sql.Timestamp
INS_DATETIME = java.sql.Timestamp
INS_TRACE = java.lang.String
UPD_TRACE = java.lang.String
DEL_FLG = java.lang.String (RealStringProcessor)
* * * * * * * * * */
	at org.seasar.dbflute.logic.replaceschema.loaddata.impl.DfXlsDataHandlerImpl.handleWriteTableException(DfXlsDataHandlerImpl.java:373)
	at org.seasar.dbflute.logic.replaceschema.loaddata.impl.DfXlsDataHandlerImpl.doWriteDataTable(DfXlsDataHandlerImpl.java:258)
	at org.seasar.dbflute.logic.replaceschema.loaddata.impl.DfXlsDataHandlerImpl.doWriteDataSet(DfXlsDataHandlerImpl.java:152)
	at org.seasar.dbflute.logic.replaceschema.loaddata.impl.DfXlsDataHandlerImpl.writeSeveralData(DfXlsDataHandlerImpl.java:133)
	at org.seasar.dbflute.logic.replaceschema.process.DfLoadDataProcess.writeDbFromXls(DfLoadDataProcess.java:319)
	at org.seasar.dbflute.logic.replaceschema.process.DfLoadDataProcess.writeDbFromXls(DfLoadDataProcess.java:307)
	at org.seasar.dbflute.logic.replaceschema.process.DfLoadDataProcess.writeDbFromXlsAsLoadingTypeData(DfLoadDataProcess.java:291)
	at org.seasar.dbflute.logic.replaceschema.process.DfLoadDataProcess.execute(DfLoadDataProcess.java:159)
	at org.seasar.dbflute.task.DfReplaceSchemaTask.loadData(DfReplaceSchemaTask.java:274)
	at org.seasar.dbflute.task.DfReplaceSchemaTask.doExecuteCoreProcess(DfReplaceSchemaTask.java:238)
	at org.seasar.dbflute.task.DfReplaceSchemaTask.executeCoreProcess(DfReplaceSchemaTask.java:232)
	at org.seasar.dbflute.task.DfReplaceSchemaTask.processMain(DfReplaceSchemaTask.java:225)
	at org.seasar.dbflute.task.DfReplaceSchemaTask.doExecute(DfReplaceSchemaTask.java:153)
	at org.seasar.dbflute.task.bs.DfAbstractTexenTask$1.callActualExecute(DfAbstractTexenTask.java:130)
	at org.seasar.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:184)
	at org.seasar.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:77)
	at org.seasar.dbflute.task.bs.DfAbstractTexenTask.execute(DfAbstractTexenTask.java:152)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:105)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
Caused by: java.sql.BatchUpdateException: Cannot add or update a child row: a foreign key constraint fails (`twitter`.`follow`, CONSTRAINT `follow_ibfk_2` FOREIGN KEY (`YOU_ID`) REFERENCES `member` (`MEMBER_ID`))
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:2056)
	at com.mysql.jdbc.PreparedStatement.executeBatch(PreparedStatement.java:1467)
	at org.seasar.dbflute.logic.replaceschema.loaddata.impl.DfXlsDataHandlerImpl.doWriteDataTable(DfXlsDataHandlerImpl.java:216)
	... 44 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`twitter`.`follow`, CONSTRAINT `follow_ibfk_2` FOREIGN KEY (`YOU_ID`) REFERENCES `member` (`MEMBER_ID`))
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1041)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4190)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4122)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2570)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2731)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2818)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2157)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2460)
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:2008)
	... 46 more
2014-07-01 19:03:13,256 [main] INFO  (DfDataSourceHandler#commit():94) - ...commit()
2014-07-01 19:03:13,262 [main] INFO  (DfDataSourceHandler#destroy():117) - ...rollback()
2014-07-01 19:03:13,263 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-07-01 19:03:13,268 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m03s884ms *Abort

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=14 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=0
  x (failed: Look at the exception message)
    * * * * * *
    * Failure *
    * * * * * *
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-07-01 19:07:21,592 [main] INFO  (DfReplaceSchemaTask#begin():87) - +------------------------------------------+
2014-07-01 19:07:21,595 [main] INFO  (DfReplaceSchemaTask#begin():88) - |                                          |
2014-07-01 19:07:21,596 [main] INFO  (DfReplaceSchemaTask#begin():89) - |              ReplaceSchema               |
2014-07-01 19:07:21,618 [main] INFO  (DfReplaceSchemaTask#begin():97) - |                                          |
2014-07-01 19:07:21,619 [main] INFO  (DfReplaceSchemaTask#begin():98) - +------------------------------------------+
2014-07-01 19:07:21,621 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():329) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2014-07-01 19:07:23,254 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 19:07:23,255 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 19:07:23,256 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 19:07:23,256 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 19:07:23,267 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-07-01 19:07:23,510 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-07-01 19:07:23,512 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-07-01 19:07:23,530 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():207) - 
2014-07-01 19:07:23,531 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():208) - * * * * * * * * * * *
2014-07-01 19:07:23,531 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():209) - *                   *
2014-07-01 19:07:23,532 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():210) - * Initialize Schema *
2014-07-01 19:07:23,533 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():211) - *                   *
2014-07-01 19:07:23,533 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():212) - * * * * * * * * * * *
2014-07-01 19:07:23,552 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-01 19:07:23,553 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-01 19:07:23,554 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-01 19:07:23,597 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table follow
2014-07-01 19:07:23,641 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table login
2014-07-01 19:07:23,689 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_security
2014-07-01 19:07:23,732 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_withdraw
2014-07-01 19:07:23,777 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table tweet
2014-07-01 19:07:23,800 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_1
2014-07-01 19:07:23,810 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_2
2014-07-01 19:07:23,829 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table login drop foreign key login_ibfk_1
2014-07-01 19:07:23,844 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_security drop foreign key member_security_ibfk_1
2014-07-01 19:07:23,864 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_withdraw drop foreign key member_withdraw_ibfk_1
2014-07-01 19:07:23,883 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table tweet drop foreign key tweet_ibfk_1
2014-07-01 19:07:23,894 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table follow
2014-07-01 19:07:23,906 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table login
2014-07-01 19:07:23,922 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member
2014-07-01 19:07:23,942 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_security
2014-07-01 19:07:23,971 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_withdraw
2014-07-01 19:07:23,997 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table tweet
2014-07-01 19:07:24,076 [main] INFO  (DfCreateSchemaProcess#createSchema():244) - 
2014-07-01 19:07:24,076 [main] INFO  (DfCreateSchemaProcess#createSchema():245) - * * * * * * * * *
2014-07-01 19:07:24,077 [main] INFO  (DfCreateSchemaProcess#createSchema():246) - *               *
2014-07-01 19:07:24,078 [main] INFO  (DfCreateSchemaProcess#createSchema():247) - * Create Schema *
2014-07-01 19:07:24,078 [main] INFO  (DfCreateSchemaProcess#createSchema():248) - *               *
2014-07-01 19:07:24,080 [main] INFO  (DfCreateSchemaProcess#createSchema():249) - * * * * * * * * *
2014-07-01 19:07:24,085 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-00-system.sql
2014-07-01 19:07:24,087 [main] INFO  (DfReplaceSchemaProperties#checkTargetEnvType():277) - ...Checking envType: ut in [ut]
2014-07-01 19:07:24,089 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:checkEnv(ut)#

-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database twitter
2014-07-01 19:07:24,093 [main] INFO  (DfCreateSchemaProcess$1#dispatch():273) - ...Creating a connection to system
2014-07-01 19:07:24,095 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():514) - ...Creating a connection for additional user: root
2014-07-01 19:07:24,111 [main] INFO  (DfCreateSchemaProcess$1#dispatch():299) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2014-07-01 19:07:24,112 [main] INFO  (DfCreateSchemaProcess$1#dispatch():301) -  -> Can't create database 'twitter'; database exists
2014-07-01 19:07:24,114 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():411) - ...Reviving the user 'system' until the end of this SQL file
2014-07-01 19:07:24,115 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on twitter.*
  to twitter@localhost identified by 'twitter'
2014-07-01 19:07:24,119 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2014-07-01 19:07:24,121 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2014-07-01 19:07:24,122 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-10-basic.sql
2014-07-01 19:07:24,123 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():348) - ...Saying good-bye to the user 'system' again
2014-07-01 19:07:24,125 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():352) - ...Clearing revived users
2014-07-01 19:07:24,126 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():359) - ...Coming back to the main user from the user 'system'
2014-07-01 19:07:24,128 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FOLLOW
(
	FOLLOW_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'フォローID',
	YOU_ID INT(100) NOT NULL UNIQUE COMMENT 'フォローする人のID : 会員のID
',
	MEMBER_ID INT(100) NOT NULL COMMENT 'フォローされる人のID : フォローしている自分のID
',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	DEL_FLG CHAR(1) DEFAULT 'N' NOT NULL COMMENT 'DEL_FLG : 削除フラグ Y=削除　N=削除していない',
	PRIMARY KEY (FOLLOW_ID)
) COMMENT = 'フォロー'
2014-07-01 19:07:24,178 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE LOGIN
(
	LOGIN_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ログインID : ログインした瞬間のID
',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (LOGIN_ID)
) COMMENT = 'ログイン'
2014-07-01 19:07:24,233 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER
(
	MEMBER_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員のID
',
	EMAIL_ADDRESS VARCHAR(100) NOT NULL UNIQUE COMMENT 'メールアドレス : 会員のメールアドレス',
	USER_NAME VARCHAR(50) NOT NULL UNIQUE COMMENT '会員ユーザ名 : 会員のユーザ名',
	BIRTHDATE DATE COMMENT '生年月日 : 会員の生年月日',
	PROFILE VARCHAR(200) COMMENT 'プロフィール',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員'
2014-07-01 19:07:24,284 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PASSWORD VARCHAR(50) NOT NULL COMMENT 'パスワード',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員セキュリティ'
2014-07-01 19:07:24,315 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_WITHDRAW
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	WITHDRAWAL_REASON_ID INT COMMENT '退会理由ID : 会員の退会理由ID',
	WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト',
	WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT 'withdrawal_datetime : 退会日時',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員退会'
2014-07-01 19:07:24,355 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-07-01 19:07:24,423 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FOLLOW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 19:07:24,534 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD FOREIGN KEY (YOU_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 19:07:24,617 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 19:07:24,706 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 19:07:24,801 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_WITHDRAW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 19:07:24,883 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-01 19:07:24,966 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=12 failure=0
2014-07-01 19:07:24,968 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=14 failure=0 (in 2 files)
2014-07-01 19:07:24,970 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-07-01 19:07:25,023 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-07-01 19:07:25,023 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-07-01 19:07:25,024 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-07-01 19:07:25,024 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-07-01 19:07:25,025 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-07-01 19:07:25,026 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-07-01 19:07:25,048 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-07-01 19:07:25,049 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-07-01 19:07:25,050 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-07-01 19:07:25,358 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-01 19:07:25,359 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-01 19:07:25,360 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-01 19:07:25,435 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{1, Stojkovic@gmail.com, Pixy, 1965/03/03, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:07:25,487 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{2, Savicevic@gmail.com, Genius, 1966/09/15, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:07:25,490 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{3, Mijatovic@gmail.com, Mijato, null, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:07:25,492 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{4, Stankovic@gmail.com, Stanko, 1978/09/11, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:07:25,494 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{5, Milosevic@gmail.com, Milose, null, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:07:25,495 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{6, Mihajlovic@gmail.com, FreeKick, 1969/02/20, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:07:25,497 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 19:07:25,517 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 6 rows are loaded to MEMBER
2014-07-01 19:07:25,521 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 1, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:07:25,522 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 2, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:07:25,523 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{3, 3, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:07:25,524 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{4, 4, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:07:25,525 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{5, 5, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:07:25,527 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 19:07:25,540 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 5 rows are loaded to LOGIN
2014-07-01 19:07:25,541 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:07:25,543 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:07:25,544 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{3, ccc, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:07:25,545 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{4, ddd, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:07:25,546 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{5, eee2, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:07:25,546 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{6, fff, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:07:25,547 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 19:07:25,552 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 6 rows are loaded to MEMBER_SECURITY
2014-07-01 19:07:25,554 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 2014-06-24 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-26 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-01 19:07:25,557 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{2, 2345, 清君頼りになるー！, 2014-06-24 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0}
2014-07-01 19:07:25,559 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{3, 3456, GLD, 2014-06-24 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0}
2014-07-01 19:07:25,560 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{4, 875, BRZ, 2014-06-24 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0}
2014-07-01 19:07:25,561 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{5, 1111, BRZ, 2014-06-24 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0}
2014-07-01 19:07:25,562 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{6, 5422, SIL, 2014-06-24 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0, 2014-06-25 00:00:00.0}
2014-07-01 19:07:25,563 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 19:07:25,572 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 6 rows are loaded to TWEET
2014-07-01 19:07:25,573 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{1, 1, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123}
2014-07-01 19:07:25,576 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{2, 1, null, 2007/11/11 16:00:00.456}
2014-07-01 19:07:25,577 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{3, 2, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789}
2014-07-01 19:07:25,579 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_WITHDRAW:{4, 3, コバチが２人いるため, 2007/11/13 16:00:00.456}
2014-07-01 19:07:25,586 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 4 rows are loaded to MEMBER_WITHDRAW
2014-07-01 19:07:25,587 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - FOLLOW:{1, 1, 2, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, n}
2014-07-01 19:07:25,588 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-01 19:07:25,592 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 1 rows are loaded to FOLLOW
2014-07-01 19:07:25,595 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():379) - ...Checking implicit set of classification
2014-07-01 19:07:25,609 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - 
2014-07-01 19:07:25,610 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * * * * * * * **
2014-07-01 19:07:25,611 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2014-07-01 19:07:25,611 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * Take Finally *
2014-07-01 19:07:25,612 [main] INFO  (DfTakeFinallyProcess#takeFinally():225) - *              *
2014-07-01 19:07:25,613 [main] INFO  (DfTakeFinallyProcess#takeFinally():226) - * * * * * * * **
2014-07-01 19:07:25,622 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: take-finally.sql
2014-07-01 19:07:25,625 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2014-07-01 19:07:25,626 [main] INFO  (DfSqlFileFireMan#fire():90) - {Take Finally}: success=0 failure=0 (in 1 files)
2014-07-01 19:07:25,628 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-07-01 19:07:25,632 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m04s037ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=14 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=1
  (ut)
  o 20-member.xls

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-07-01 19:07:26,576 [main] INFO  (TorqueJDBCTransformTask#begin():100) - +------------------------------------------+
2014-07-01 19:07:26,579 [main] INFO  (TorqueJDBCTransformTask#begin():101) - |                                          |
2014-07-01 19:07:26,580 [main] INFO  (TorqueJDBCTransformTask#begin():102) - |                   JDBC                   |
2014-07-01 19:07:26,581 [main] INFO  (TorqueJDBCTransformTask#begin():103) - |                                          |
2014-07-01 19:07:26,582 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2014-07-01 19:07:26,623 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 19:07:26,624 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 19:07:26,625 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 19:07:26,626 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 19:07:26,674 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2014-07-01 19:07:26,675 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2014-07-01 19:07:26,676 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1469) - ...Loading previous schema (schema diff process)
2014-07-01 19:07:26,688 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-01 19:07:26,756 [main] INFO  (DfSchemaXmlSerializer#generateXML():361) - ...Getting DB connection
2014-07-01 19:07:26,764 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-07-01 19:07:26,976 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-07-01 19:07:26,977 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-07-01 19:07:26,979 [main] INFO  (DfSchemaXmlSerializer#generateXML():364) - ...Getting DB meta data
2014-07-01 19:07:26,982 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-01 19:07:26,982 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-01 19:07:26,983 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-01 19:07:26,994 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2014-07-01 19:07:26,998 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2014-07-01 19:07:27,012 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - 
2014-07-01 19:07:27,013 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2014-07-01 19:07:27,014 [main] INFO  (DfSchemaXmlSerializer#processTable():423) - $ [Table List]
2014-07-01 19:07:27,015 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.follow(TABLE) // フォロー
2014-07-01 19:07:27,060 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.login(TABLE) // ログイン
2014-07-01 19:07:27,073 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member(TABLE) // 会員
2014-07-01 19:07:27,089 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_security(TABLE) // 会員セキュリティ
2014-07-01 19:07:27,103 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_withdraw(TABLE) // 会員退会
2014-07-01 19:07:27,118 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.tweet(TABLE) // TWEET
2014-07-01 19:07:27,133 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 
2014-07-01 19:07:27,134 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ [Table Count]
2014-07-01 19:07:27,135 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ 6
2014-07-01 19:07:27,135 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - $ = = = = = = = = = =/
2014-07-01 19:07:27,156 [main] INFO  (DfSchemaXmlSerializer#processTable():439) - 
2014-07-01 19:07:27,159 [main] INFO  (DfSchemaXmlSerializer#processSequence():799) - ...Getting sequences
2014-07-01 19:07:27,166 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2014-07-01 19:07:27,176 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-twitter.xml
2014-07-01 19:07:27,184 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2014-07-01 19:07:27,202 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1487) - ...Loading next schema (schema diff process)
2014-07-01 19:07:27,205 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-01 19:07:27,263 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1492) -  -> different from previous (schema diff)
2014-07-01 19:07:27,265 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1494) - ...Serializing schema-diff:
2014-07-01 19:07:27,266 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1495) -   filePath = ./schema/project-history-twitter.diffmap
2014-07-01 19:07:27,317 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-07-01 19:07:27,324 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s743ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2014-07-01 19:07:28,368 [main] INFO  (TorqueDocumentationTask#begin():171) - +------------------------------------------+
2014-07-01 19:07:28,372 [main] INFO  (TorqueDocumentationTask#begin():172) - |                                          |
2014-07-01 19:07:28,373 [main] INFO  (TorqueDocumentationTask#begin():173) - |                   Doc                    |
2014-07-01 19:07:28,373 [main] INFO  (TorqueDocumentationTask#begin():181) - |                                          |
2014-07-01 19:07:28,374 [main] INFO  (TorqueDocumentationTask#begin():182) - +------------------------------------------+
2014-07-01 19:07:28,431 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 19:07:28,432 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 19:07:28,433 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 19:07:28,434 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 19:07:28,439 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():242) - 
2014-07-01 19:07:28,440 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():243) - * * * * * * * * * * *
2014-07-01 19:07:28,441 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():244) - *                   *
2014-07-01 19:07:28,441 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():245) - *    Schema HTML    *
2014-07-01 19:07:28,442 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - *                   *
2014-07-01 19:07:28,442 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2014-07-01 19:07:28,628 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-01 19:07:28,693 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("doc/ControlDocument.vm", c);
2014-07-01 19:07:28,756 [main] INFO  (Database#doEnableDocumentOutputDirectory():1180) - ...Setting up documentOutputDirectory: ./output/doc
2014-07-01 19:07:28,768 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-07-01 19:07:28,769 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-07-01 19:07:28,772 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-07-01 19:07:28,774 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-07-01 19:07:28,775 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-07-01 19:07:28,778 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-07-01 19:07:28,781 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-07-01 19:07:28,781 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-07-01 19:07:28,785 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-07-01 19:07:28,798 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():150) - ...Loading schema history
2014-07-01 19:07:28,900 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():154) -  -> found history: count=24
2014-07-01 19:07:29,150 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-01 19:07:29,160 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s790ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Doc}
2014-07-01 19:07:32,211 [main] INFO  (TorqueDataModelTask#begin():105) - +------------------------------------------+
2014-07-01 19:07:32,213 [main] INFO  (TorqueDataModelTask#begin():106) - |                                          |
2014-07-01 19:07:32,214 [main] INFO  (TorqueDataModelTask#begin():107) - |                 Generate                 |
2014-07-01 19:07:32,214 [main] INFO  (TorqueDataModelTask#begin():108) - |                                          |
2014-07-01 19:07:32,215 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2014-07-01 19:07:32,256 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 19:07:32,257 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 19:07:32,257 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 19:07:32,258 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 19:07:32,277 [main] INFO  (TorqueDataModelTask#setupControlTemplate():160) - 
2014-07-01 19:07:32,278 [main] INFO  (TorqueDataModelTask#setupControlTemplate():161) - ...Using Java control: om/ControlGenerateJava.vm
2014-07-01 19:07:32,454 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-01 19:07:32,497 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlGenerateJava.vm", c);
2014-07-01 19:07:32,640 [main] INFO  (Database#doEnableGenerateOutputDirectory():1148) - ...Setting up generateOutputDirectory: ../src/main/java
2014-07-01 19:07:32,648 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-07-01 19:07:32,648 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-07-01 19:07:32,651 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-07-01 19:07:32,652 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-07-01 19:07:32,652 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-07-01 19:07:32,655 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-07-01 19:07:32,657 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-07-01 19:07:32,658 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-07-01 19:07:32,660 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-07-01 19:07:32,678 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - /=============================
2014-07-01 19:07:32,678 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():60) - ...Initializing include query.
2014-07-01 19:07:32,679 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - String
2014-07-01 19:07:32,680 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Number
2014-07-01 19:07:32,680 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Date
2014-07-01 19:07:32,681 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotEqual -> []
2014-07-01 19:07:32,682 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   InScope -> []
2014-07-01 19:07:32,682 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotInScope -> []
2014-07-01 19:07:32,683 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - OrderBy
2014-07-01 19:07:32,684 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():62) - ========/
2014-07-01 19:07:32,699 [main] INFO  (Database#info():2573) - public void parseAllCommon() {
2014-07-01 19:07:32,702 [main] INFO  (Database#info():2573) -     parse('DBCurrent');
2014-07-01 19:07:32,709 [main] INFO  (Database#info():2573) -     parse('DBFluteConfig');
2014-07-01 19:07:32,736 [main] INFO  (Database#info():2573) -     parse('DBFluteInitializer');
2014-07-01 19:07:32,741 [main] INFO  (Database#info():2573) -     parse('DBMetaInstanceHandler');
2014-07-01 19:07:32,758 [main] INFO  (Database#info():2573) -     parse('EntityDefinedCommonColumn');
2014-07-01 19:07:32,764 [main] INFO  (Database#info():2573) -     parse('ImplementedBehaviorSelector');
2014-07-01 19:07:32,770 [main] INFO  (Database#info():2573) -     parse('ImplementedCommonColumnAutoSetupper');
2014-07-01 19:07:32,775 [main] INFO  (Database#info():2573) -     parse('ImplementedInvokerAssistant');
2014-07-01 19:07:32,781 [main] INFO  (Database#info():2573) -     parse('ImplementedSqlClauseCreator');
2014-07-01 19:07:32,784 [main] INFO  (Database#info():2573) - }
2014-07-01 19:07:32,785 [main] INFO  (Database#info():2573) - public void parseContainerConfig() {
2014-07-01 19:07:32,786 [main] INFO  (Database#info():2573) -     parse('../resources/dbflute.dicon')
2014-07-01 19:07:32,793 [main] INFO  (Database#info():2573) - }
2014-07-01 19:07:32,799 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldTableClass() {
2014-07-01 19:07:32,822 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-07-01 19:07:32,822 [main] INFO  (Database#info():2573) - public void parseTableClass() {
2014-07-01 19:07:32,823 [main] INFO  (Database#info():2573) -     parse('follow');
2014-07-01 19:07:33,113 [main] INFO  (Database#info():2573) -     parse('login');
2014-07-01 19:07:33,329 [main] INFO  (Database#info():2573) -     parse('member');
2014-07-01 19:07:33,705 [main] INFO  (Database#info():2573) -     parse('member_security');
2014-07-01 19:07:33,849 [main] INFO  (Database#info():2573) -     parse('member_withdraw');
2014-07-01 19:07:33,964 [main] INFO  (Database#info():2573) -     parse('tweet');
2014-07-01 19:07:34,068 [main] INFO  (Database#info():2573) - }
2014-07-01 19:07:34,069 [main] INFO  (Database#info():2573) -  
2014-07-01 19:07:34,099 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-01 19:07:34,107 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s891ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Generate}
2014-07-01 19:07:35,260 [main] INFO  (DfOutsideSqlTestTask#begin():72) - +------------------------------------------+
2014-07-01 19:07:35,263 [main] INFO  (DfOutsideSqlTestTask#begin():73) - |                                          |
2014-07-01 19:07:35,263 [main] INFO  (DfOutsideSqlTestTask#begin():74) - |              OutsideSqlTest              |
2014-07-01 19:07:35,264 [main] INFO  (DfOutsideSqlTestTask#begin():75) - |                                          |
2014-07-01 19:07:35,265 [main] INFO  (DfOutsideSqlTestTask#begin():76) - +------------------------------------------+
2014-07-01 19:07:35,337 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 19:07:35,337 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 19:07:35,338 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 19:07:35,338 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 19:07:35,382 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-07-01 19:07:35,389 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s123ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2014-07-01 19:07:36,358 [main] INFO  (DfSql2EntityTask#begin():100) - +------------------------------------------+
2014-07-01 19:07:36,361 [main] INFO  (DfSql2EntityTask#begin():101) - |                                          |
2014-07-01 19:07:36,361 [main] INFO  (DfSql2EntityTask#begin():102) - |                Sql2Entity                |
2014-07-01 19:07:36,362 [main] INFO  (DfSql2EntityTask#begin():103) - |                                          |
2014-07-01 19:07:36,363 [main] INFO  (DfSql2EntityTask#begin():104) - +------------------------------------------+
2014-07-01 19:07:36,402 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-01 19:07:36,403 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-01 19:07:36,403 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-01 19:07:36,404 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-01 19:07:36,420 [main] INFO  (DfSql2EntityTask#setupControlTemplate():170) - 
2014-07-01 19:07:36,421 [main] INFO  (DfSql2EntityTask#setupControlTemplate():171) - ...Using Java control: om/ControlSql2EntityJava.vm
2014-07-01 19:07:36,431 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-01 19:07:36,479 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-07-01 19:07:36,624 [main] INFO  (DfSql2EntityTask#initControlContext():301) - 
2014-07-01 19:07:36,625 [main] INFO  (DfSql2EntityTask#initControlContext():302) - ...Preparing generation of customize-entities and parameter-beans
2014-07-01 19:07:36,625 [main] INFO  (DfSql2EntityTask#initControlContext():303) - * * * * * * * * * *
2014-07-01 19:07:36,626 [main] INFO  (DfSql2EntityTask#initControlContext():304) - * CustomizeEntity *
2014-07-01 19:07:36,627 [main] INFO  (DfSql2EntityTask#initControlContext():305) - * * * * * * * * * *
2014-07-01 19:07:36,627 [main] INFO  (DfSql2EntityTask#showParameterBean():879) - * * * * * * * * *
2014-07-01 19:07:36,628 [main] INFO  (DfSql2EntityTask#showParameterBean():880) - * ParameterBean *
2014-07-01 19:07:36,628 [main] INFO  (DfSql2EntityTask#showParameterBean():881) - * * * * * * * * *
2014-07-01 19:07:36,633 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlSql2EntityJava.vm", c);
2014-07-01 19:07:36,739 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1164) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2014-07-01 19:07:36,743 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldCustomizeClass() {
2014-07-01 19:07:36,754 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-07-01 19:07:36,755 [main] INFO  (Database#info():2573) - public void parseCustomizeEntity() {
2014-07-01 19:07:36,758 [main] INFO  (Database#info():2573) - }
2014-07-01 19:07:36,771 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():293) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2014-07-01 19:07:36,777 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-01 19:07:36,785 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s422ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
