2014-07-07 19:17:18,136 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : tweetした人のID',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	TWEET_DATETIME VARCHAR(50) NOT NULL COMMENT 'TWEET日時 : ツィートした日時（共通カラムではなく、画面に表示するためのもの）',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-07-07 19:17:18,204 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FOLLOW
	ADD FOREIGN KEY (YOU_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-07 19:17:18,316 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-07 19:17:18,419 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-07 19:17:18,517 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-07 19:17:18,574 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-07 19:17:18,641 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER
	ADD FOREIGN KEY (MEMBER_STATUS_CODE)
	REFERENCES MEMBER_STATUS (MEMBER_STATUS_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-07 19:17:18,757 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=12 failure=0
2014-07-07 19:17:18,759 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=14 failure=0 (in 2 files)
2014-07-07 19:17:18,761 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-07-07 19:17:18,848 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-07-07 19:17:18,849 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-07-07 19:17:18,849 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-07-07 19:17:18,850 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-07-07 19:17:18,850 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-07-07 19:17:18,851 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-07-07 19:17:18,874 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-07-07 19:17:18,874 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\common\xls\10-member-status.xls)
2014-07-07 19:17:18,875 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-07-07 19:17:19,140 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-07 19:17:19,141 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-07 19:17:19,142 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-07 19:17:19,165 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_STATUS:{1, Student}
2014-07-07 19:17:19,207 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_STATUS:{2, Company}
2014-07-07 19:17:19,216 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 2 rows are loaded to MEMBER_STATUS
2014-07-07 19:17:19,221 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-07-07 19:17:19,222 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-07-07 19:17:19,222 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-07-07 19:17:19,295 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{1, 1, 早稲田大学, Stojkovic@gmail.com, Pixy, Stoiko, 1965/03/03, null, 2, 2014, null, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-07 19:17:19,304 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{2, 2, 株式会社ビズリーチ, adf@dsa.fdsg, dsg, sgf, null, 6, null, null, null, 2014-06-25 00:00:00.0, 2014-06-26 00:00:00.0, 2014-06-27 00:00:00.0, 2014-06-28 00:00:00.0}
2014-07-07 19:17:19,307 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-07 19:17:19,318 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 2 rows are loaded to MEMBER
2014-07-07 19:17:19,319 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 1, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-07 19:17:19,320 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 2, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-07 19:17:19,321 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-07 19:17:19,328 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 2 rows are loaded to LOGIN
2014-07-07 19:17:19,330 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-07 19:17:19,331 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-07 19:17:19,332 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-07 19:17:19,338 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 2 rows are loaded to MEMBER_SECURITY
2014-07-07 19:17:19,339 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 7月4日　07:04, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-07 19:17:19,342 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-07 19:17:19,347 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 1 rows are loaded to TWEET
2014-07-07 19:17:19,349 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - FOLLOW:{1, 1, 2, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, n}
2014-07-07 19:17:19,350 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-07 19:17:19,354 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 1 rows are loaded to FOLLOW
2014-07-07 19:17:19,356 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():379) - ...Checking implicit set of classification
2014-07-07 19:17:19,371 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - 
2014-07-07 19:17:19,371 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * * * * * * * **
2014-07-07 19:17:19,372 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2014-07-07 19:17:19,373 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * Take Finally *
2014-07-07 19:17:19,373 [main] INFO  (DfTakeFinallyProcess#takeFinally():225) - *              *
2014-07-07 19:17:19,374 [main] INFO  (DfTakeFinallyProcess#takeFinally():226) - * * * * * * * **
2014-07-07 19:17:19,385 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: take-finally.sql
2014-07-07 19:17:19,388 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2014-07-07 19:17:19,388 [main] INFO  (DfSqlFileFireMan#fire():90) - {Take Finally}: success=0 failure=0 (in 1 files)
2014-07-07 19:17:19,390 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-07-07 19:17:19,395 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s401ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=14 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=2
  (common)
  o 10-member-status.xls
  (ut)
  o 20-member.xls

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-07-07 19:17:20,256 [main] INFO  (TorqueJDBCTransformTask#begin():100) - +------------------------------------------+
2014-07-07 19:17:20,258 [main] INFO  (TorqueJDBCTransformTask#begin():101) - |                                          |
2014-07-07 19:17:20,259 [main] INFO  (TorqueJDBCTransformTask#begin():102) - |                   JDBC                   |
2014-07-07 19:17:20,259 [main] INFO  (TorqueJDBCTransformTask#begin():103) - |                                          |
2014-07-07 19:17:20,260 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2014-07-07 19:17:20,298 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-07 19:17:20,299 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-07 19:17:20,300 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-07 19:17:20,300 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-07 19:17:20,345 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2014-07-07 19:17:20,346 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2014-07-07 19:17:20,346 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1469) - ...Loading previous schema (schema diff process)
2014-07-07 19:17:20,356 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-07 19:17:20,424 [main] INFO  (DfSchemaXmlSerializer#generateXML():361) - ...Getting DB connection
2014-07-07 19:17:20,429 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-07-07 19:17:20,612 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-07-07 19:17:20,613 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-07-07 19:17:20,614 [main] INFO  (DfSchemaXmlSerializer#generateXML():364) - ...Getting DB meta data
2014-07-07 19:17:20,616 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-07 19:17:20,617 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-07 19:17:20,618 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-07 19:17:20,628 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2014-07-07 19:17:20,631 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2014-07-07 19:17:20,644 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - 
2014-07-07 19:17:20,644 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2014-07-07 19:17:20,645 [main] INFO  (DfSchemaXmlSerializer#processTable():423) - $ [Table List]
2014-07-07 19:17:20,645 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.follow(TABLE) // フォロー
2014-07-07 19:17:20,683 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.login(TABLE) // ログイン
2014-07-07 19:17:20,697 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member(TABLE) // 会員
2014-07-07 19:17:20,715 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_security(TABLE) // 会員セキュリティ
2014-07-07 19:17:20,728 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_status(TABLE) // メンバーステータス
2014-07-07 19:17:20,740 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.tweet(TABLE) // TWEET
2014-07-07 19:17:20,753 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 
2014-07-07 19:17:20,754 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ [Table Count]
2014-07-07 19:17:20,754 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ 6
2014-07-07 19:17:20,755 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - $ = = = = = = = = = =/
2014-07-07 19:17:20,756 [main] INFO  (DfSchemaXmlSerializer#processTable():439) - 
2014-07-07 19:17:20,758 [main] INFO  (DfSchemaXmlSerializer#processSequence():799) - ...Getting sequences
2014-07-07 19:17:20,763 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2014-07-07 19:17:20,763 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-twitter.xml
2014-07-07 19:17:20,764 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2014-07-07 19:17:20,779 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1487) - ...Loading next schema (schema diff process)
2014-07-07 19:17:20,781 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-07 19:17:20,825 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1492) -  -> different from previous (schema diff)
2014-07-07 19:17:20,828 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1494) - ...Serializing schema-diff:
2014-07-07 19:17:20,828 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1495) -   filePath = ./schema/project-history-twitter.diffmap
2014-07-07 19:17:20,884 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-07-07 19:17:20,891 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s631ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2014-07-07 19:17:21,813 [main] INFO  (TorqueDocumentationTask#begin():171) - +------------------------------------------+
2014-07-07 19:17:21,816 [main] INFO  (TorqueDocumentationTask#begin():172) - |                                          |
2014-07-07 19:17:21,817 [main] INFO  (TorqueDocumentationTask#begin():173) - |                   Doc                    |
2014-07-07 19:17:21,818 [main] INFO  (TorqueDocumentationTask#begin():181) - |                                          |
2014-07-07 19:17:21,819 [main] INFO  (TorqueDocumentationTask#begin():182) - +------------------------------------------+
2014-07-07 19:17:21,868 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-07 19:17:21,869 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-07 19:17:21,870 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-07 19:17:21,870 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-07 19:17:21,874 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():242) - 
2014-07-07 19:17:21,874 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():243) - * * * * * * * * * * *
2014-07-07 19:17:21,875 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():244) - *                   *
2014-07-07 19:17:21,876 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():245) - *    Schema HTML    *
2014-07-07 19:17:21,876 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - *                   *
2014-07-07 19:17:21,877 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2014-07-07 19:17:22,058 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-07 19:17:22,137 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("doc/ControlDocument.vm", c);
2014-07-07 19:17:22,192 [main] INFO  (Database#doEnableDocumentOutputDirectory():1180) - ...Setting up documentOutputDirectory: ./output/doc
2014-07-07 19:17:22,204 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-07-07 19:17:22,204 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-07-07 19:17:22,207 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-07-07 19:17:22,208 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-07-07 19:17:22,209 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-07-07 19:17:22,211 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-07-07 19:17:22,213 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-07-07 19:17:22,214 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-07-07 19:17:22,217 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-07-07 19:17:22,226 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():150) - ...Loading schema history
2014-07-07 19:17:22,305 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():154) -  -> found history: count=30
2014-07-07 19:17:22,561 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-07 19:17:22,572 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s757ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Doc}
2014-07-07 19:17:25,489 [main] INFO  (TorqueDataModelTask#begin():105) - +------------------------------------------+
2014-07-07 19:17:25,491 [main] INFO  (TorqueDataModelTask#begin():106) - |                                          |
2014-07-07 19:17:25,492 [main] INFO  (TorqueDataModelTask#begin():107) - |                 Generate                 |
2014-07-07 19:17:25,493 [main] INFO  (TorqueDataModelTask#begin():108) - |                                          |
2014-07-07 19:17:25,493 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2014-07-07 19:17:25,533 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-07 19:17:25,533 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-07 19:17:25,534 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-07 19:17:25,534 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-07 19:17:25,553 [main] INFO  (TorqueDataModelTask#setupControlTemplate():160) - 
2014-07-07 19:17:25,553 [main] INFO  (TorqueDataModelTask#setupControlTemplate():161) - ...Using Java control: om/ControlGenerateJava.vm
2014-07-07 19:17:25,705 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-07 19:17:25,749 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlGenerateJava.vm", c);
2014-07-07 19:17:25,874 [main] INFO  (Database#doEnableGenerateOutputDirectory():1148) - ...Setting up generateOutputDirectory: ../src/main/java
2014-07-07 19:17:25,881 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-07-07 19:17:25,882 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-07-07 19:17:25,884 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-07-07 19:17:25,886 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-07-07 19:17:25,886 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-07-07 19:17:25,888 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-07-07 19:17:25,891 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-07-07 19:17:25,891 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-07-07 19:17:25,893 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-07-07 19:17:25,909 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - /=============================
2014-07-07 19:17:25,909 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():60) - ...Initializing include query.
2014-07-07 19:17:25,910 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - String
2014-07-07 19:17:25,910 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Number
2014-07-07 19:17:25,911 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Date
2014-07-07 19:17:25,912 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotEqual -> []
2014-07-07 19:17:25,912 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   InScope -> []
2014-07-07 19:17:25,913 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotInScope -> []
2014-07-07 19:17:25,913 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - OrderBy
2014-07-07 19:17:25,914 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():62) - ========/
2014-07-07 19:17:25,930 [main] INFO  (Database#info():2573) - public void parseAllCommon() {
2014-07-07 19:17:25,932 [main] INFO  (Database#info():2573) -     parse('DBCurrent');
2014-07-07 19:17:25,940 [main] INFO  (Database#info():2573) -     parse('DBFluteConfig');
2014-07-07 19:17:25,971 [main] INFO  (Database#info():2573) -     parse('DBFluteInitializer');
2014-07-07 19:17:25,978 [main] INFO  (Database#info():2573) -     parse('DBMetaInstanceHandler');
2014-07-07 19:17:25,999 [main] INFO  (Database#info():2573) -     parse('EntityDefinedCommonColumn');
2014-07-07 19:17:26,004 [main] INFO  (Database#info():2573) -     parse('ImplementedBehaviorSelector');
2014-07-07 19:17:26,009 [main] INFO  (Database#info():2573) -     parse('ImplementedCommonColumnAutoSetupper');
2014-07-07 19:17:26,015 [main] INFO  (Database#info():2573) -     parse('ImplementedInvokerAssistant');
2014-07-07 19:17:26,020 [main] INFO  (Database#info():2573) -     parse('ImplementedSqlClauseCreator');
2014-07-07 19:17:26,024 [main] INFO  (Database#info():2573) - }
2014-07-07 19:17:26,024 [main] INFO  (Database#info():2573) - public void parseContainerConfig() {
2014-07-07 19:17:26,026 [main] INFO  (Database#info():2573) -     parse('../resources/dbflute.dicon')
2014-07-07 19:17:26,034 [main] INFO  (Database#info():2573) - }
2014-07-07 19:17:26,039 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldTableClass() {
2014-07-07 19:17:26,060 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-07-07 19:17:26,061 [main] INFO  (Database#info():2573) - public void parseTableClass() {
2014-07-07 19:17:26,062 [main] INFO  (Database#info():2573) -     parse('follow');
2014-07-07 19:17:26,364 [main] INFO  (Database#info():2573) -     parse('login');
2014-07-07 19:17:26,581 [main] INFO  (Database#info():2573) -     parse('member');
2014-07-07 19:17:26,890 [main] INFO  (Database#info():2573) -     parse('member_security');
2014-07-07 19:17:27,014 [main] INFO  (Database#info():2573) -     parse('member_status');
2014-07-07 19:17:27,120 [main] INFO  (Database#info():2573) -     parse('tweet');
2014-07-07 19:17:27,237 [main] INFO  (Database#info():2573) - }
2014-07-07 19:17:27,239 [main] INFO  (Database#info():2573) -  
2014-07-07 19:17:27,275 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-07 19:17:27,285 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s791ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Generate}
2014-07-07 19:17:28,870 [main] INFO  (DfOutsideSqlTestTask#begin():72) - +------------------------------------------+
2014-07-07 19:17:28,875 [main] INFO  (DfOutsideSqlTestTask#begin():73) - |                                          |
2014-07-07 19:17:28,880 [main] INFO  (DfOutsideSqlTestTask#begin():74) - |              OutsideSqlTest              |
2014-07-07 19:17:28,882 [main] INFO  (DfOutsideSqlTestTask#begin():75) - |                                          |
2014-07-07 19:17:28,883 [main] INFO  (DfOutsideSqlTestTask#begin():76) - +------------------------------------------+
2014-07-07 19:17:28,968 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-07 19:17:28,971 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-07 19:17:28,972 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-07 19:17:28,978 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-07 19:17:29,039 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-07-07 19:17:29,054 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s172ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2014-07-07 19:17:30,131 [main] INFO  (DfSql2EntityTask#begin():100) - +------------------------------------------+
2014-07-07 19:17:30,133 [main] INFO  (DfSql2EntityTask#begin():101) - |                                          |
2014-07-07 19:17:30,133 [main] INFO  (DfSql2EntityTask#begin():102) - |                Sql2Entity                |
2014-07-07 19:17:30,134 [main] INFO  (DfSql2EntityTask#begin():103) - |                                          |
2014-07-07 19:17:30,135 [main] INFO  (DfSql2EntityTask#begin():104) - +------------------------------------------+
2014-07-07 19:17:30,172 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-07 19:17:30,173 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-07 19:17:30,173 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-07 19:17:30,174 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-07 19:17:30,196 [main] INFO  (DfSql2EntityTask#setupControlTemplate():170) - 
2014-07-07 19:17:30,196 [main] INFO  (DfSql2EntityTask#setupControlTemplate():171) - ...Using Java control: om/ControlSql2EntityJava.vm
2014-07-07 19:17:30,206 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-07 19:17:30,277 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-07-07 19:17:30,422 [main] INFO  (DfSql2EntityTask#initControlContext():301) - 
2014-07-07 19:17:30,422 [main] INFO  (DfSql2EntityTask#initControlContext():302) - ...Preparing generation of customize-entities and parameter-beans
2014-07-07 19:17:30,423 [main] INFO  (DfSql2EntityTask#initControlContext():303) - * * * * * * * * * *
2014-07-07 19:17:30,423 [main] INFO  (DfSql2EntityTask#initControlContext():304) - * CustomizeEntity *
2014-07-07 19:17:30,424 [main] INFO  (DfSql2EntityTask#initControlContext():305) - * * * * * * * * * *
2014-07-07 19:17:30,425 [main] INFO  (DfSql2EntityTask#showParameterBean():879) - * * * * * * * * *
2014-07-07 19:17:30,425 [main] INFO  (DfSql2EntityTask#showParameterBean():880) - * ParameterBean *
2014-07-07 19:17:30,426 [main] INFO  (DfSql2EntityTask#showParameterBean():881) - * * * * * * * * *
2014-07-07 19:17:30,430 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlSql2EntityJava.vm", c);
2014-07-07 19:17:30,531 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1164) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2014-07-07 19:17:30,534 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldCustomizeClass() {
2014-07-07 19:17:30,545 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-07-07 19:17:30,546 [main] INFO  (Database#info():2573) - public void parseCustomizeEntity() {
2014-07-07 19:17:30,549 [main] INFO  (Database#info():2573) - }
2014-07-07 19:17:30,561 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():293) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2014-07-07 19:17:30,567 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-07 19:17:30,575 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s440ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
