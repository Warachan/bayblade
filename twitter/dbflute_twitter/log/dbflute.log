2014-07-07 19:17:18,136 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : tweetした人のID',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	TWEET_DATETIME VARCHAR(50) NOT NULL COMMENT 'TWEET日時 : ツィートした日時（共通カラムではなく、画面に表示するためのもの）',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-07-07 19:17:18,204 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FOLLOW
	ADD FOREIGN KEY (YOU_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-07 19:17:18,316 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-07 19:17:18,419 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-07 19:17:18,517 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-07 19:17:18,574 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-07 19:17:18,641 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER
	ADD FOREIGN KEY (MEMBER_STATUS_CODE)
	REFERENCES MEMBER_STATUS (MEMBER_STATUS_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-07 19:17:18,757 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=12 failure=0
2014-07-07 19:17:18,759 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=14 failure=0 (in 2 files)
2014-07-07 19:17:18,761 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-07-07 19:17:18,848 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-07-07 19:17:18,849 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-07-07 19:17:18,849 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-07-07 19:17:18,850 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-07-07 19:17:18,850 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-07-07 19:17:18,851 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-07-07 19:17:18,874 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-07-07 19:17:18,874 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\common\xls\10-member-status.xls)
2014-07-07 19:17:18,875 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-07-07 19:17:19,140 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-07 19:17:19,141 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-07 19:17:19,142 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-07 19:17:19,165 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_STATUS:{1, Student}
2014-07-07 19:17:19,207 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_STATUS:{2, Company}
2014-07-07 19:17:19,216 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 2 rows are loaded to MEMBER_STATUS
2014-07-07 19:17:19,221 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-07-07 19:17:19,222 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-07-07 19:17:19,222 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-07-07 19:17:19,295 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{1, 1, 早稲田大学, Stojkovic@gmail.com, Pixy, Stoiko, 1965/03/03, null, 2, 2014, null, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-07 19:17:19,304 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{2, 2, 株式会社ビズリーチ, adf@dsa.fdsg, dsg, sgf, null, 6, null, null, null, 2014-06-25 00:00:00.0, 2014-06-26 00:00:00.0, 2014-06-27 00:00:00.0, 2014-06-28 00:00:00.0}
2014-07-07 19:17:19,307 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-07 19:17:19,318 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 2 rows are loaded to MEMBER
2014-07-07 19:17:19,319 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 1, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-07 19:17:19,320 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 2, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-07 19:17:19,321 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-07 19:17:19,328 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 2 rows are loaded to LOGIN
2014-07-07 19:17:19,330 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-07 19:17:19,331 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-07 19:17:19,332 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-07 19:17:19,338 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 2 rows are loaded to MEMBER_SECURITY
2014-07-07 19:17:19,339 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 7月4日　07:04, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-07 19:17:19,342 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-07 19:17:19,347 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 1 rows are loaded to TWEET
2014-07-07 19:17:19,349 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - FOLLOW:{1, 1, 2, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, n}
2014-07-07 19:17:19,350 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-07 19:17:19,354 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 1 rows are loaded to FOLLOW
2014-07-07 19:17:19,356 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():379) - ...Checking implicit set of classification
2014-07-07 19:17:19,371 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - 
2014-07-07 19:17:19,371 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * * * * * * * **
2014-07-07 19:17:19,372 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2014-07-07 19:17:19,373 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * Take Finally *
2014-07-07 19:17:19,373 [main] INFO  (DfTakeFinallyProcess#takeFinally():225) - *              *
2014-07-07 19:17:19,374 [main] INFO  (DfTakeFinallyProcess#takeFinally():226) - * * * * * * * **
2014-07-07 19:17:19,385 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: take-finally.sql
2014-07-07 19:17:19,388 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2014-07-07 19:17:19,388 [main] INFO  (DfSqlFileFireMan#fire():90) - {Take Finally}: success=0 failure=0 (in 1 files)
2014-07-07 19:17:19,390 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-07-07 19:17:19,395 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s401ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=14 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=2
  (common)
  o 10-member-status.xls
  (ut)
  o 20-member.xls

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-07-07 19:17:20,256 [main] INFO  (TorqueJDBCTransformTask#begin():100) - +------------------------------------------+
2014-07-07 19:17:20,258 [main] INFO  (TorqueJDBCTransformTask#begin():101) - |                                          |
2014-07-07 19:17:20,259 [main] INFO  (TorqueJDBCTransformTask#begin():102) - |                   JDBC                   |
2014-07-07 19:17:20,259 [main] INFO  (TorqueJDBCTransformTask#begin():103) - |                                          |
2014-07-07 19:17:20,260 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2014-07-07 19:17:20,298 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-07 19:17:20,299 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-07 19:17:20,300 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-07 19:17:20,300 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-07 19:17:20,345 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2014-07-07 19:17:20,346 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2014-07-07 19:17:20,346 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1469) - ...Loading previous schema (schema diff process)
2014-07-07 19:17:20,356 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-07 19:17:20,424 [main] INFO  (DfSchemaXmlSerializer#generateXML():361) - ...Getting DB connection
2014-07-07 19:17:20,429 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-07-07 19:17:20,612 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-07-07 19:17:20,613 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-07-07 19:17:20,614 [main] INFO  (DfSchemaXmlSerializer#generateXML():364) - ...Getting DB meta data
2014-07-07 19:17:20,616 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-07 19:17:20,617 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-07 19:17:20,618 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-07 19:17:20,628 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2014-07-07 19:17:20,631 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2014-07-07 19:17:20,644 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - 
2014-07-07 19:17:20,644 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2014-07-07 19:17:20,645 [main] INFO  (DfSchemaXmlSerializer#processTable():423) - $ [Table List]
2014-07-07 19:17:20,645 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.follow(TABLE) // フォロー
2014-07-07 19:17:20,683 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.login(TABLE) // ログイン
2014-07-07 19:17:20,697 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member(TABLE) // 会員
2014-07-07 19:17:20,715 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_security(TABLE) // 会員セキュリティ
2014-07-07 19:17:20,728 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_status(TABLE) // メンバーステータス
2014-07-07 19:17:20,740 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.tweet(TABLE) // TWEET
2014-07-07 19:17:20,753 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 
2014-07-07 19:17:20,754 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ [Table Count]
2014-07-07 19:17:20,754 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ 6
2014-07-07 19:17:20,755 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - $ = = = = = = = = = =/
2014-07-07 19:17:20,756 [main] INFO  (DfSchemaXmlSerializer#processTable():439) - 
2014-07-07 19:17:20,758 [main] INFO  (DfSchemaXmlSerializer#processSequence():799) - ...Getting sequences
2014-07-07 19:17:20,763 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2014-07-07 19:17:20,763 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-twitter.xml
2014-07-07 19:17:20,764 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2014-07-07 19:17:20,779 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1487) - ...Loading next schema (schema diff process)
2014-07-07 19:17:20,781 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-07 19:17:20,825 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1492) -  -> different from previous (schema diff)
2014-07-07 19:17:20,828 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1494) - ...Serializing schema-diff:
2014-07-07 19:17:20,828 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1495) -   filePath = ./schema/project-history-twitter.diffmap
2014-07-07 19:17:20,884 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-07-07 19:17:20,891 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s631ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2014-07-07 19:17:21,813 [main] INFO  (TorqueDocumentationTask#begin():171) - +------------------------------------------+
2014-07-07 19:17:21,816 [main] INFO  (TorqueDocumentationTask#begin():172) - |                                          |
2014-07-07 19:17:21,817 [main] INFO  (TorqueDocumentationTask#begin():173) - |                   Doc                    |
2014-07-07 19:17:21,818 [main] INFO  (TorqueDocumentationTask#begin():181) - |                                          |
2014-07-07 19:17:21,819 [main] INFO  (TorqueDocumentationTask#begin():182) - +------------------------------------------+
2014-07-07 19:17:21,868 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-07 19:17:21,869 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-07 19:17:21,870 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-07 19:17:21,870 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-07 19:17:21,874 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():242) - 
2014-07-07 19:17:21,874 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():243) - * * * * * * * * * * *
2014-07-07 19:17:21,875 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():244) - *                   *
2014-07-07 19:17:21,876 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():245) - *    Schema HTML    *
2014-07-07 19:17:21,876 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - *                   *
2014-07-07 19:17:21,877 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2014-07-07 19:17:22,058 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-07 19:17:22,137 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("doc/ControlDocument.vm", c);
2014-07-07 19:17:22,192 [main] INFO  (Database#doEnableDocumentOutputDirectory():1180) - ...Setting up documentOutputDirectory: ./output/doc
2014-07-07 19:17:22,204 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-07-07 19:17:22,204 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-07-07 19:17:22,207 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-07-07 19:17:22,208 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-07-07 19:17:22,209 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-07-07 19:17:22,211 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-07-07 19:17:22,213 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-07-07 19:17:22,214 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-07-07 19:17:22,217 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-07-07 19:17:22,226 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():150) - ...Loading schema history
2014-07-07 19:17:22,305 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():154) -  -> found history: count=30
2014-07-07 19:17:22,561 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-07 19:17:22,572 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s757ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Doc}
2014-07-07 19:17:25,489 [main] INFO  (TorqueDataModelTask#begin():105) - +------------------------------------------+
2014-07-07 19:17:25,491 [main] INFO  (TorqueDataModelTask#begin():106) - |                                          |
2014-07-07 19:17:25,492 [main] INFO  (TorqueDataModelTask#begin():107) - |                 Generate                 |
2014-07-07 19:17:25,493 [main] INFO  (TorqueDataModelTask#begin():108) - |                                          |
2014-07-07 19:17:25,493 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2014-07-07 19:17:25,533 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-07 19:17:25,533 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-07 19:17:25,534 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-07 19:17:25,534 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-07 19:17:25,553 [main] INFO  (TorqueDataModelTask#setupControlTemplate():160) - 
2014-07-07 19:17:25,553 [main] INFO  (TorqueDataModelTask#setupControlTemplate():161) - ...Using Java control: om/ControlGenerateJava.vm
2014-07-07 19:17:25,705 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-07 19:17:25,749 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlGenerateJava.vm", c);
2014-07-07 19:17:25,874 [main] INFO  (Database#doEnableGenerateOutputDirectory():1148) - ...Setting up generateOutputDirectory: ../src/main/java
2014-07-07 19:17:25,881 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-07-07 19:17:25,882 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-07-07 19:17:25,884 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-07-07 19:17:25,886 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-07-07 19:17:25,886 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-07-07 19:17:25,888 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-07-07 19:17:25,891 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-07-07 19:17:25,891 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-07-07 19:17:25,893 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-07-07 19:17:25,909 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - /=============================
2014-07-07 19:17:25,909 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():60) - ...Initializing include query.
2014-07-07 19:17:25,910 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - String
2014-07-07 19:17:25,910 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Number
2014-07-07 19:17:25,911 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Date
2014-07-07 19:17:25,912 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotEqual -> []
2014-07-07 19:17:25,912 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   InScope -> []
2014-07-07 19:17:25,913 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotInScope -> []
2014-07-07 19:17:25,913 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - OrderBy
2014-07-07 19:17:25,914 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():62) - ========/
2014-07-07 19:17:25,930 [main] INFO  (Database#info():2573) - public void parseAllCommon() {
2014-07-07 19:17:25,932 [main] INFO  (Database#info():2573) -     parse('DBCurrent');
2014-07-07 19:17:25,940 [main] INFO  (Database#info():2573) -     parse('DBFluteConfig');
2014-07-07 19:17:25,971 [main] INFO  (Database#info():2573) -     parse('DBFluteInitializer');
2014-07-07 19:17:25,978 [main] INFO  (Database#info():2573) -     parse('DBMetaInstanceHandler');
2014-07-07 19:17:25,999 [main] INFO  (Database#info():2573) -     parse('EntityDefinedCommonColumn');
2014-07-07 19:17:26,004 [main] INFO  (Database#info():2573) -     parse('ImplementedBehaviorSelector');
2014-07-07 19:17:26,009 [main] INFO  (Database#info():2573) -     parse('ImplementedCommonColumnAutoSetupper');
2014-07-07 19:17:26,015 [main] INFO  (Database#info():2573) -     parse('ImplementedInvokerAssistant');
2014-07-07 19:17:26,020 [main] INFO  (Database#info():2573) -     parse('ImplementedSqlClauseCreator');
2014-07-07 19:17:26,024 [main] INFO  (Database#info():2573) - }
2014-07-07 19:17:26,024 [main] INFO  (Database#info():2573) - public void parseContainerConfig() {
2014-07-07 19:17:26,026 [main] INFO  (Database#info():2573) -     parse('../resources/dbflute.dicon')
2014-07-07 19:17:26,034 [main] INFO  (Database#info():2573) - }
2014-07-07 19:17:26,039 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldTableClass() {
2014-07-07 19:17:26,060 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-07-07 19:17:26,061 [main] INFO  (Database#info():2573) - public void parseTableClass() {
2014-07-07 19:17:26,062 [main] INFO  (Database#info():2573) -     parse('follow');
2014-07-07 19:17:26,364 [main] INFO  (Database#info():2573) -     parse('login');
2014-07-07 19:17:26,581 [main] INFO  (Database#info():2573) -     parse('member');
2014-07-07 19:17:26,890 [main] INFO  (Database#info():2573) -     parse('member_security');
2014-07-07 19:17:27,014 [main] INFO  (Database#info():2573) -     parse('member_status');
2014-07-07 19:17:27,120 [main] INFO  (Database#info():2573) -     parse('tweet');
2014-07-07 19:17:27,237 [main] INFO  (Database#info():2573) - }
2014-07-07 19:17:27,239 [main] INFO  (Database#info():2573) -  
2014-07-07 19:17:27,275 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-07 19:17:27,285 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s791ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Generate}
2014-07-07 19:17:28,870 [main] INFO  (DfOutsideSqlTestTask#begin():72) - +------------------------------------------+
2014-07-07 19:17:28,875 [main] INFO  (DfOutsideSqlTestTask#begin():73) - |                                          |
2014-07-07 19:17:28,880 [main] INFO  (DfOutsideSqlTestTask#begin():74) - |              OutsideSqlTest              |
2014-07-07 19:17:28,882 [main] INFO  (DfOutsideSqlTestTask#begin():75) - |                                          |
2014-07-07 19:17:28,883 [main] INFO  (DfOutsideSqlTestTask#begin():76) - +------------------------------------------+
2014-07-07 19:17:28,968 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-07 19:17:28,971 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-07 19:17:28,972 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-07 19:17:28,978 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-07 19:17:29,039 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-07-07 19:17:29,054 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s172ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2014-07-07 19:17:30,131 [main] INFO  (DfSql2EntityTask#begin():100) - +------------------------------------------+
2014-07-07 19:17:30,133 [main] INFO  (DfSql2EntityTask#begin():101) - |                                          |
2014-07-07 19:17:30,133 [main] INFO  (DfSql2EntityTask#begin():102) - |                Sql2Entity                |
2014-07-07 19:17:30,134 [main] INFO  (DfSql2EntityTask#begin():103) - |                                          |
2014-07-07 19:17:30,135 [main] INFO  (DfSql2EntityTask#begin():104) - +------------------------------------------+
2014-07-07 19:17:30,172 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-07 19:17:30,173 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-07 19:17:30,173 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-07 19:17:30,174 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-07 19:17:30,196 [main] INFO  (DfSql2EntityTask#setupControlTemplate():170) - 
2014-07-07 19:17:30,196 [main] INFO  (DfSql2EntityTask#setupControlTemplate():171) - ...Using Java control: om/ControlSql2EntityJava.vm
2014-07-07 19:17:30,206 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-07 19:17:30,277 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-07-07 19:17:30,422 [main] INFO  (DfSql2EntityTask#initControlContext():301) - 
2014-07-07 19:17:30,422 [main] INFO  (DfSql2EntityTask#initControlContext():302) - ...Preparing generation of customize-entities and parameter-beans
2014-07-07 19:17:30,423 [main] INFO  (DfSql2EntityTask#initControlContext():303) - * * * * * * * * * *
2014-07-07 19:17:30,423 [main] INFO  (DfSql2EntityTask#initControlContext():304) - * CustomizeEntity *
2014-07-07 19:17:30,424 [main] INFO  (DfSql2EntityTask#initControlContext():305) - * * * * * * * * * *
2014-07-07 19:17:30,425 [main] INFO  (DfSql2EntityTask#showParameterBean():879) - * * * * * * * * *
2014-07-07 19:17:30,425 [main] INFO  (DfSql2EntityTask#showParameterBean():880) - * ParameterBean *
2014-07-07 19:17:30,426 [main] INFO  (DfSql2EntityTask#showParameterBean():881) - * * * * * * * * *
2014-07-07 19:17:30,430 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlSql2EntityJava.vm", c);
2014-07-07 19:17:30,531 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1164) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2014-07-07 19:17:30,534 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldCustomizeClass() {
2014-07-07 19:17:30,545 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-07-07 19:17:30,546 [main] INFO  (Database#info():2573) - public void parseCustomizeEntity() {
2014-07-07 19:17:30,549 [main] INFO  (Database#info():2573) - }
2014-07-07 19:17:30,561 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():293) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2014-07-07 19:17:30,567 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-07 19:17:30,575 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s440ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2014-07-09 11:25:02,407 [main] INFO  (DfOutsideSqlTestTask#begin():72) - +------------------------------------------+
2014-07-09 11:25:02,411 [main] INFO  (DfOutsideSqlTestTask#begin():73) - |                                          |
2014-07-09 11:25:02,411 [main] INFO  (DfOutsideSqlTestTask#begin():74) - |              OutsideSqlTest              |
2014-07-09 11:25:02,412 [main] INFO  (DfOutsideSqlTestTask#begin():75) - |                                          |
2014-07-09 11:25:02,412 [main] INFO  (DfOutsideSqlTestTask#begin():76) - +------------------------------------------+
2014-07-09 11:25:02,476 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-09 11:25:02,476 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-09 11:25:02,477 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-09 11:25:02,477 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-09 11:25:02,534 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-07-09 11:25:02,546 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s129ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2014-07-09 13:13:40,365 [main] INFO  (DfReplaceSchemaTask#begin():87) - +------------------------------------------+
2014-07-09 13:13:40,369 [main] INFO  (DfReplaceSchemaTask#begin():88) - |                                          |
2014-07-09 13:13:40,370 [main] INFO  (DfReplaceSchemaTask#begin():89) - |              ReplaceSchema               |
2014-07-09 13:13:40,390 [main] INFO  (DfReplaceSchemaTask#begin():97) - |                                          |
2014-07-09 13:13:40,390 [main] INFO  (DfReplaceSchemaTask#begin():98) - +------------------------------------------+
2014-07-09 13:13:40,392 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():329) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2014-07-09 13:13:42,015 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-09 13:13:42,016 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-09 13:13:42,016 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-09 13:13:42,017 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-09 13:13:42,035 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-07-09 13:13:42,298 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-07-09 13:13:42,298 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-07-09 13:13:42,319 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():207) - 
2014-07-09 13:13:42,320 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():208) - * * * * * * * * * * *
2014-07-09 13:13:42,321 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():209) - *                   *
2014-07-09 13:13:42,322 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():210) - * Initialize Schema *
2014-07-09 13:13:42,323 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():211) - *                   *
2014-07-09 13:13:42,324 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():212) - * * * * * * * * * * *
2014-07-09 13:13:42,347 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-09 13:13:42,348 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-09 13:13:42,349 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-09 13:13:42,417 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table follow
2014-07-09 13:13:42,460 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table login
2014-07-09 13:13:42,500 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_security
2014-07-09 13:13:42,532 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table tweet
2014-07-09 13:13:42,545 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_2
2014-07-09 13:13:42,569 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_1
2014-07-09 13:13:42,578 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table login drop foreign key login_ibfk_1
2014-07-09 13:13:42,588 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member drop foreign key member_ibfk_1
2014-07-09 13:13:42,603 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_security drop foreign key member_security_ibfk_1
2014-07-09 13:13:42,623 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table tweet drop foreign key tweet_ibfk_1
2014-07-09 13:13:42,644 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table follow
2014-07-09 13:13:42,666 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table login
2014-07-09 13:13:42,692 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member
2014-07-09 13:13:42,715 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_security
2014-07-09 13:13:42,735 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_status
2014-07-09 13:13:42,755 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table tweet
2014-07-09 13:13:42,841 [main] INFO  (DfCreateSchemaProcess#createSchema():244) - 
2014-07-09 13:13:42,842 [main] INFO  (DfCreateSchemaProcess#createSchema():245) - * * * * * * * * *
2014-07-09 13:13:42,843 [main] INFO  (DfCreateSchemaProcess#createSchema():246) - *               *
2014-07-09 13:13:42,844 [main] INFO  (DfCreateSchemaProcess#createSchema():247) - * Create Schema *
2014-07-09 13:13:42,845 [main] INFO  (DfCreateSchemaProcess#createSchema():248) - *               *
2014-07-09 13:13:42,845 [main] INFO  (DfCreateSchemaProcess#createSchema():249) - * * * * * * * * *
2014-07-09 13:13:42,851 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-00-system.sql
2014-07-09 13:13:42,855 [main] INFO  (DfReplaceSchemaProperties#checkTargetEnvType():277) - ...Checking envType: ut in [ut]
2014-07-09 13:13:42,857 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:checkEnv(ut)#

-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database twitter
2014-07-09 13:13:42,860 [main] INFO  (DfCreateSchemaProcess$1#dispatch():273) - ...Creating a connection to system
2014-07-09 13:13:42,862 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():514) - ...Creating a connection for additional user: root
2014-07-09 13:13:42,882 [main] INFO  (DfCreateSchemaProcess$1#dispatch():299) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2014-07-09 13:13:42,883 [main] INFO  (DfCreateSchemaProcess$1#dispatch():301) -  -> Can't create database 'twitter'; database exists
2014-07-09 13:13:42,886 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():411) - ...Reviving the user 'system' until the end of this SQL file
2014-07-09 13:13:42,887 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on twitter.*
  to twitter@localhost identified by 'twitter'
2014-07-09 13:13:42,891 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2014-07-09 13:13:42,893 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2014-07-09 13:13:42,894 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-10-basic.sql
2014-07-09 13:13:42,895 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():348) - ...Saying good-bye to the user 'system' again
2014-07-09 13:13:42,895 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():352) - ...Clearing revived users
2014-07-09 13:13:42,896 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():359) - ...Coming back to the main user from the user 'system'
2014-07-09 13:13:42,900 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FOLLOW
(
	FOLLOW_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'フォローID',
	YOU_ID INT(100) NOT NULL COMMENT 'フォローする人のID : 会員のID
',
	MEMBER_ID INT(100) NOT NULL COMMENT 'フォローされる人のID : フォローしている自分のID
',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	DEL_FLG CHAR(1) DEFAULT 'N' NOT NULL COMMENT 'DEL_FLG : 削除フラグ Y=削除　N=削除していない',
	PRIMARY KEY (FOLLOW_ID),
	UNIQUE (YOU_ID, MEMBER_ID)
) COMMENT = 'フォロー'
2014-07-09 13:13:42,947 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE LOGIN
(
	LOGIN_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ログインID : ログインした瞬間のID
',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (LOGIN_ID)
) COMMENT = 'ログイン'
2014-07-09 13:13:42,980 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER
(
	MEMBER_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員のID
',
	EMAIL_ADDRESS VARCHAR(100) NOT NULL UNIQUE COMMENT 'メールアドレス : 会員のメールアドレス',
	MEMBER_STATUS_CODE INT NOT NULL COMMENT 'メンバーステータスコード : 企業か学生か',
	USER_NAME VARCHAR(100) NOT NULL UNIQUE COMMENT '会員ユーザ名 : 会員のユーザ名',
	ACCOUNT_NAME VARCHAR(100) NOT NULL COMMENT 'アカウント名',
	GROUP_NAME VARCHAR(100) NOT NULL COMMENT '所属団体名 : 学校、もしくは企業名を登録',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	RECRUITING_NUMBER INT(255) COMMENT '採用数 : 企業の採用予定数',
	INTERESTED_INDUSTRY VARCHAR(100) COMMENT '希望業界 : 学生が希望している業界。',
	GRADUATION_YEAR INT(4) COMMENT '卒業年 : 卒業年もしくは卒業予定年',
	BIRTHDATE DATE COMMENT '生年月日 : 会員の生年月日',
	PROFILE VARCHAR(200) COMMENT 'プロフィール',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員'
2014-07-09 13:13:43,095 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PASSWORD VARCHAR(50) NOT NULL COMMENT 'パスワード',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員セキュリティ'
2014-07-09 13:13:43,162 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_STATUS
(
	MEMBER_STATUS_CODE INT NOT NULL COMMENT 'メンバーステータスコード : 企業か学生か',
	MEMBER_STATUS_NAME VARCHAR(20) NOT NULL COMMENT '会員ステータス名',
	PRIMARY KEY (MEMBER_STATUS_CODE)
) COMMENT = 'メンバーステータス'
2014-07-09 13:13:43,212 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : tweetした人のID',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	TWEET_DATETIME VARCHAR(50) NOT NULL COMMENT 'TWEET日時 : ツィートした日時（共通カラムではなく、画面に表示するためのもの）',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-07-09 13:13:43,255 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FOLLOW
	ADD FOREIGN KEY (YOU_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-09 13:13:43,334 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-09 13:13:43,443 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-09 13:13:43,546 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-09 13:13:43,652 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-09 13:13:43,751 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER
	ADD FOREIGN KEY (MEMBER_STATUS_CODE)
	REFERENCES MEMBER_STATUS (MEMBER_STATUS_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-09 13:13:43,862 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=12 failure=0
2014-07-09 13:13:43,864 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=14 failure=0 (in 2 files)
2014-07-09 13:13:43,866 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-07-09 13:13:43,934 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-07-09 13:13:43,935 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-07-09 13:13:43,936 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-07-09 13:13:43,937 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-07-09 13:13:43,937 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-07-09 13:13:43,938 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-07-09 13:13:43,966 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-07-09 13:13:43,967 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\common\xls\10-member-status.xls)
2014-07-09 13:13:43,968 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-07-09 13:13:44,276 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-09 13:13:44,277 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-09 13:13:44,278 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-09 13:13:44,305 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_STATUS:{1, Student}
2014-07-09 13:13:44,361 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_STATUS:{2, Company}
2014-07-09 13:13:44,369 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 2 rows are loaded to MEMBER_STATUS
2014-07-09 13:13:44,373 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-07-09 13:13:44,374 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-07-09 13:13:44,375 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-07-09 13:13:44,453 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{1, 1, 早稲田大学, Stojkovic@gmail.com, Pixy, Stoiko, 1965/03/03, null, 2, 2014, null, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-09 13:13:44,463 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{2, 2, 株式会社ビズリーチ, adf@dsa.fdsg, dsg, sgf, null, 6, null, null, null, 2014-06-25 00:00:00.0, 2014-06-26 00:00:00.0, 2014-06-27 00:00:00.0, 2014-06-28 00:00:00.0}
2014-07-09 13:13:44,466 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-09 13:13:44,478 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 2 rows are loaded to MEMBER
2014-07-09 13:13:44,479 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 1, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-09 13:13:44,481 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 2, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-09 13:13:44,483 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-09 13:13:44,488 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 2 rows are loaded to LOGIN
2014-07-09 13:13:44,489 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-09 13:13:44,491 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-09 13:13:44,492 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-09 13:13:44,500 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 2 rows are loaded to MEMBER_SECURITY
2014-07-09 13:13:44,501 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 7月4日　07:04, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-09 13:13:44,505 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-09 13:13:44,509 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 1 rows are loaded to TWEET
2014-07-09 13:13:44,511 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - FOLLOW:{1, 1, 2, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, n}
2014-07-09 13:13:44,512 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-09 13:13:44,516 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 1 rows are loaded to FOLLOW
2014-07-09 13:13:44,519 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():379) - ...Checking implicit set of classification
2014-07-09 13:13:44,537 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - 
2014-07-09 13:13:44,538 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * * * * * * * **
2014-07-09 13:13:44,539 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2014-07-09 13:13:44,540 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * Take Finally *
2014-07-09 13:13:44,541 [main] INFO  (DfTakeFinallyProcess#takeFinally():225) - *              *
2014-07-09 13:13:44,541 [main] INFO  (DfTakeFinallyProcess#takeFinally():226) - * * * * * * * **
2014-07-09 13:13:44,552 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: take-finally.sql
2014-07-09 13:13:44,556 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2014-07-09 13:13:44,557 [main] INFO  (DfSqlFileFireMan#fire():90) - {Take Finally}: success=0 failure=0 (in 1 files)
2014-07-09 13:13:44,559 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-07-09 13:13:44,564 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m04s194ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=14 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=2
  (common)
  o 10-member-status.xls
  (ut)
  o 20-member.xls

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-07-09 13:13:45,484 [main] INFO  (TorqueJDBCTransformTask#begin():100) - +------------------------------------------+
2014-07-09 13:13:45,486 [main] INFO  (TorqueJDBCTransformTask#begin():101) - |                                          |
2014-07-09 13:13:45,487 [main] INFO  (TorqueJDBCTransformTask#begin():102) - |                   JDBC                   |
2014-07-09 13:13:45,488 [main] INFO  (TorqueJDBCTransformTask#begin():103) - |                                          |
2014-07-09 13:13:45,489 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2014-07-09 13:13:45,528 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-09 13:13:45,529 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-09 13:13:45,530 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-09 13:13:45,531 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-09 13:13:45,594 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2014-07-09 13:13:45,595 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2014-07-09 13:13:45,596 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1469) - ...Loading previous schema (schema diff process)
2014-07-09 13:13:45,608 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-09 13:13:45,683 [main] INFO  (DfSchemaXmlSerializer#generateXML():361) - ...Getting DB connection
2014-07-09 13:13:45,687 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-07-09 13:13:45,872 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-07-09 13:13:45,873 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-07-09 13:13:45,875 [main] INFO  (DfSchemaXmlSerializer#generateXML():364) - ...Getting DB meta data
2014-07-09 13:13:45,877 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-09 13:13:45,877 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-09 13:13:45,878 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-09 13:13:45,889 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2014-07-09 13:13:45,892 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2014-07-09 13:13:45,910 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - 
2014-07-09 13:13:45,910 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2014-07-09 13:13:45,911 [main] INFO  (DfSchemaXmlSerializer#processTable():423) - $ [Table List]
2014-07-09 13:13:45,912 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.follow(TABLE) // フォロー
2014-07-09 13:13:45,953 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.login(TABLE) // ログイン
2014-07-09 13:13:45,967 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member(TABLE) // 会員
2014-07-09 13:13:45,986 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_security(TABLE) // 会員セキュリティ
2014-07-09 13:13:46,002 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_status(TABLE) // メンバーステータス
2014-07-09 13:13:46,016 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.tweet(TABLE) // TWEET
2014-07-09 13:13:46,031 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 
2014-07-09 13:13:46,032 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ [Table Count]
2014-07-09 13:13:46,033 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ 6
2014-07-09 13:13:46,033 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - $ = = = = = = = = = =/
2014-07-09 13:13:46,034 [main] INFO  (DfSchemaXmlSerializer#processTable():439) - 
2014-07-09 13:13:46,043 [main] INFO  (DfSchemaXmlSerializer#processSequence():799) - ...Getting sequences
2014-07-09 13:13:46,048 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2014-07-09 13:13:46,049 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-twitter.xml
2014-07-09 13:13:46,050 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2014-07-09 13:13:46,074 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1487) - ...Loading next schema (schema diff process)
2014-07-09 13:13:46,076 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-09 13:13:46,125 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1502) -  -> same as previous (schema diff)
2014-07-09 13:13:46,126 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-07-09 13:13:46,135 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s644ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2014-07-09 13:13:47,059 [main] INFO  (TorqueDocumentationTask#begin():171) - +------------------------------------------+
2014-07-09 13:13:47,062 [main] INFO  (TorqueDocumentationTask#begin():172) - |                                          |
2014-07-09 13:13:47,063 [main] INFO  (TorqueDocumentationTask#begin():173) - |                   Doc                    |
2014-07-09 13:13:47,064 [main] INFO  (TorqueDocumentationTask#begin():181) - |                                          |
2014-07-09 13:13:47,064 [main] INFO  (TorqueDocumentationTask#begin():182) - +------------------------------------------+
2014-07-09 13:13:47,107 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-09 13:13:47,107 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-09 13:13:47,108 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-09 13:13:47,108 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-09 13:13:47,112 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():242) - 
2014-07-09 13:13:47,112 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():243) - * * * * * * * * * * *
2014-07-09 13:13:47,113 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():244) - *                   *
2014-07-09 13:13:47,114 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():245) - *    Schema HTML    *
2014-07-09 13:13:47,115 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - *                   *
2014-07-09 13:13:47,115 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2014-07-09 13:13:47,358 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-09 13:13:47,430 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("doc/ControlDocument.vm", c);
2014-07-09 13:13:47,496 [main] INFO  (Database#doEnableDocumentOutputDirectory():1180) - ...Setting up documentOutputDirectory: ./output/doc
2014-07-09 13:13:47,507 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-07-09 13:13:47,508 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-07-09 13:13:47,511 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-07-09 13:13:47,513 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-07-09 13:13:47,514 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-07-09 13:13:47,517 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-07-09 13:13:47,520 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-07-09 13:13:47,520 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-07-09 13:13:47,524 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-07-09 13:13:47,536 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():150) - ...Loading schema history
2014-07-09 13:13:47,625 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():154) -  -> found history: count=30
2014-07-09 13:13:47,899 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-09 13:13:47,964 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s903ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Doc}
2014-07-09 13:13:50,974 [main] INFO  (TorqueDataModelTask#begin():105) - +------------------------------------------+
2014-07-09 13:13:50,977 [main] INFO  (TorqueDataModelTask#begin():106) - |                                          |
2014-07-09 13:13:50,978 [main] INFO  (TorqueDataModelTask#begin():107) - |                 Generate                 |
2014-07-09 13:13:50,979 [main] INFO  (TorqueDataModelTask#begin():108) - |                                          |
2014-07-09 13:13:50,979 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2014-07-09 13:13:51,021 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-09 13:13:51,022 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-09 13:13:51,022 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-09 13:13:51,023 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-09 13:13:51,042 [main] INFO  (TorqueDataModelTask#setupControlTemplate():160) - 
2014-07-09 13:13:51,043 [main] INFO  (TorqueDataModelTask#setupControlTemplate():161) - ...Using Java control: om/ControlGenerateJava.vm
2014-07-09 13:13:51,185 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-09 13:13:51,249 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlGenerateJava.vm", c);
2014-07-09 13:13:51,382 [main] INFO  (Database#doEnableGenerateOutputDirectory():1148) - ...Setting up generateOutputDirectory: ../src/main/java
2014-07-09 13:13:51,389 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-07-09 13:13:51,389 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-07-09 13:13:51,392 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-07-09 13:13:51,394 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-07-09 13:13:51,394 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-07-09 13:13:51,397 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-07-09 13:13:51,400 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-07-09 13:13:51,400 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-07-09 13:13:51,403 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-07-09 13:13:51,423 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - /=============================
2014-07-09 13:13:51,424 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():60) - ...Initializing include query.
2014-07-09 13:13:51,425 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - String
2014-07-09 13:13:51,426 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Number
2014-07-09 13:13:51,426 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Date
2014-07-09 13:13:51,427 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotEqual -> []
2014-07-09 13:13:51,427 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   InScope -> []
2014-07-09 13:13:51,428 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotInScope -> []
2014-07-09 13:13:51,429 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - OrderBy
2014-07-09 13:13:51,429 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():62) - ========/
2014-07-09 13:13:51,445 [main] INFO  (Database#info():2573) - public void parseAllCommon() {
2014-07-09 13:13:51,448 [main] INFO  (Database#info():2573) -     parse('DBCurrent');
2014-07-09 13:13:51,456 [main] INFO  (Database#info():2573) -     parse('DBFluteConfig');
2014-07-09 13:13:51,491 [main] INFO  (Database#info():2573) -     parse('DBFluteInitializer');
2014-07-09 13:13:51,496 [main] INFO  (Database#info():2573) -     parse('DBMetaInstanceHandler');
2014-07-09 13:13:51,514 [main] INFO  (Database#info():2573) -     parse('EntityDefinedCommonColumn');
2014-07-09 13:13:51,520 [main] INFO  (Database#info():2573) -     parse('ImplementedBehaviorSelector');
2014-07-09 13:13:51,527 [main] INFO  (Database#info():2573) -     parse('ImplementedCommonColumnAutoSetupper');
2014-07-09 13:13:51,533 [main] INFO  (Database#info():2573) -     parse('ImplementedInvokerAssistant');
2014-07-09 13:13:51,540 [main] INFO  (Database#info():2573) -     parse('ImplementedSqlClauseCreator');
2014-07-09 13:13:51,545 [main] INFO  (Database#info():2573) - }
2014-07-09 13:13:51,546 [main] INFO  (Database#info():2573) - public void parseContainerConfig() {
2014-07-09 13:13:51,548 [main] INFO  (Database#info():2573) -     parse('../resources/dbflute.dicon')
2014-07-09 13:13:51,558 [main] INFO  (Database#info():2573) - }
2014-07-09 13:13:51,564 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldTableClass() {
2014-07-09 13:13:51,592 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-07-09 13:13:51,592 [main] INFO  (Database#info():2573) - public void parseTableClass() {
2014-07-09 13:13:51,593 [main] INFO  (Database#info():2573) -     parse('follow');
2014-07-09 13:13:51,982 [main] INFO  (Database#info():2573) -     parse('login');
2014-07-09 13:13:52,213 [main] INFO  (Database#info():2573) -     parse('member');
2014-07-09 13:13:52,548 [main] INFO  (Database#info():2573) -     parse('member_security');
2014-07-09 13:13:52,670 [main] INFO  (Database#info():2573) -     parse('member_status');
2014-07-09 13:13:52,781 [main] INFO  (Database#info():2573) -     parse('tweet');
2014-07-09 13:13:52,889 [main] INFO  (Database#info():2573) - }
2014-07-09 13:13:52,890 [main] INFO  (Database#info():2573) -  
2014-07-09 13:13:52,919 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-09 13:13:52,927 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s948ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Generate}
2014-07-09 13:13:53,829 [main] INFO  (DfOutsideSqlTestTask#begin():72) - +------------------------------------------+
2014-07-09 13:13:53,832 [main] INFO  (DfOutsideSqlTestTask#begin():73) - |                                          |
2014-07-09 13:13:53,832 [main] INFO  (DfOutsideSqlTestTask#begin():74) - |              OutsideSqlTest              |
2014-07-09 13:13:53,833 [main] INFO  (DfOutsideSqlTestTask#begin():75) - |                                          |
2014-07-09 13:13:53,834 [main] INFO  (DfOutsideSqlTestTask#begin():76) - +------------------------------------------+
2014-07-09 13:13:53,879 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-09 13:13:53,880 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-09 13:13:53,880 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-09 13:13:53,881 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-09 13:13:53,930 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-07-09 13:13:53,938 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s102ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2014-07-09 13:13:54,861 [main] INFO  (DfSql2EntityTask#begin():100) - +------------------------------------------+
2014-07-09 13:13:54,864 [main] INFO  (DfSql2EntityTask#begin():101) - |                                          |
2014-07-09 13:13:54,864 [main] INFO  (DfSql2EntityTask#begin():102) - |                Sql2Entity                |
2014-07-09 13:13:54,865 [main] INFO  (DfSql2EntityTask#begin():103) - |                                          |
2014-07-09 13:13:54,865 [main] INFO  (DfSql2EntityTask#begin():104) - +------------------------------------------+
2014-07-09 13:13:54,916 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-09 13:13:54,917 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-09 13:13:54,918 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-09 13:13:54,918 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-09 13:13:54,938 [main] INFO  (DfSql2EntityTask#setupControlTemplate():170) - 
2014-07-09 13:13:54,939 [main] INFO  (DfSql2EntityTask#setupControlTemplate():171) - ...Using Java control: om/ControlSql2EntityJava.vm
2014-07-09 13:13:54,948 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-09 13:13:55,016 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-07-09 13:13:55,171 [main] INFO  (DfSql2EntityTask#initControlContext():301) - 
2014-07-09 13:13:55,172 [main] INFO  (DfSql2EntityTask#initControlContext():302) - ...Preparing generation of customize-entities and parameter-beans
2014-07-09 13:13:55,173 [main] INFO  (DfSql2EntityTask#initControlContext():303) - * * * * * * * * * *
2014-07-09 13:13:55,174 [main] INFO  (DfSql2EntityTask#initControlContext():304) - * CustomizeEntity *
2014-07-09 13:13:55,175 [main] INFO  (DfSql2EntityTask#initControlContext():305) - * * * * * * * * * *
2014-07-09 13:13:55,175 [main] INFO  (DfSql2EntityTask#showParameterBean():879) - * * * * * * * * *
2014-07-09 13:13:55,176 [main] INFO  (DfSql2EntityTask#showParameterBean():880) - * ParameterBean *
2014-07-09 13:13:55,177 [main] INFO  (DfSql2EntityTask#showParameterBean():881) - * * * * * * * * *
2014-07-09 13:13:55,181 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlSql2EntityJava.vm", c);
2014-07-09 13:13:55,297 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1164) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2014-07-09 13:13:55,302 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldCustomizeClass() {
2014-07-09 13:13:55,316 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-07-09 13:13:55,317 [main] INFO  (Database#info():2573) - public void parseCustomizeEntity() {
2014-07-09 13:13:55,320 [main] INFO  (Database#info():2573) - }
2014-07-09 13:13:55,342 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():293) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2014-07-09 13:13:55,347 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-09 13:13:55,354 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s490ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2014-07-09 13:14:17,986 [main] INFO  (DfReplaceSchemaTask#begin():87) - +------------------------------------------+
2014-07-09 13:14:17,989 [main] INFO  (DfReplaceSchemaTask#begin():88) - |                                          |
2014-07-09 13:14:17,989 [main] INFO  (DfReplaceSchemaTask#begin():89) - |              ReplaceSchema               |
2014-07-09 13:14:18,008 [main] INFO  (DfReplaceSchemaTask#begin():97) - |                                          |
2014-07-09 13:14:18,008 [main] INFO  (DfReplaceSchemaTask#begin():98) - +------------------------------------------+
2014-07-09 13:14:18,010 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():329) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2014-07-09 13:14:19,845 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-09 13:14:19,846 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-09 13:14:19,847 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-09 13:14:19,848 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-09 13:14:19,862 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-07-09 13:14:20,085 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-07-09 13:14:20,086 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-07-09 13:14:20,104 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():207) - 
2014-07-09 13:14:20,104 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():208) - * * * * * * * * * * *
2014-07-09 13:14:20,105 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():209) - *                   *
2014-07-09 13:14:20,105 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():210) - * Initialize Schema *
2014-07-09 13:14:20,106 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():211) - *                   *
2014-07-09 13:14:20,107 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():212) - * * * * * * * * * * *
2014-07-09 13:14:20,124 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-09 13:14:20,125 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-09 13:14:20,126 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-09 13:14:20,168 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table follow
2014-07-09 13:14:20,217 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table login
2014-07-09 13:14:20,278 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_security
2014-07-09 13:14:20,315 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table tweet
2014-07-09 13:14:20,351 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_2
2014-07-09 13:14:20,376 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_1
2014-07-09 13:14:20,390 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table login drop foreign key login_ibfk_1
2014-07-09 13:14:20,404 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member drop foreign key member_ibfk_1
2014-07-09 13:14:20,414 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_security drop foreign key member_security_ibfk_1
2014-07-09 13:14:20,430 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table tweet drop foreign key tweet_ibfk_1
2014-07-09 13:14:20,445 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table follow
2014-07-09 13:14:20,465 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table login
2014-07-09 13:14:20,484 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member
2014-07-09 13:14:20,506 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_security
2014-07-09 13:14:20,527 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_status
2014-07-09 13:14:20,551 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table tweet
2014-07-09 13:14:20,610 [main] INFO  (DfCreateSchemaProcess#createSchema():244) - 
2014-07-09 13:14:20,611 [main] INFO  (DfCreateSchemaProcess#createSchema():245) - * * * * * * * * *
2014-07-09 13:14:20,612 [main] INFO  (DfCreateSchemaProcess#createSchema():246) - *               *
2014-07-09 13:14:20,613 [main] INFO  (DfCreateSchemaProcess#createSchema():247) - * Create Schema *
2014-07-09 13:14:20,614 [main] INFO  (DfCreateSchemaProcess#createSchema():248) - *               *
2014-07-09 13:14:20,615 [main] INFO  (DfCreateSchemaProcess#createSchema():249) - * * * * * * * * *
2014-07-09 13:14:20,620 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-00-system.sql
2014-07-09 13:14:20,624 [main] INFO  (DfReplaceSchemaProperties#checkTargetEnvType():277) - ...Checking envType: ut in [ut]
2014-07-09 13:14:20,625 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:checkEnv(ut)#

-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database twitter
2014-07-09 13:14:20,629 [main] INFO  (DfCreateSchemaProcess$1#dispatch():273) - ...Creating a connection to system
2014-07-09 13:14:20,631 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():514) - ...Creating a connection for additional user: root
2014-07-09 13:14:20,647 [main] INFO  (DfCreateSchemaProcess$1#dispatch():299) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2014-07-09 13:14:20,649 [main] INFO  (DfCreateSchemaProcess$1#dispatch():301) -  -> Can't create database 'twitter'; database exists
2014-07-09 13:14:20,650 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():411) - ...Reviving the user 'system' until the end of this SQL file
2014-07-09 13:14:20,651 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on twitter.*
  to twitter@localhost identified by 'twitter'
2014-07-09 13:14:20,656 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2014-07-09 13:14:20,659 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2014-07-09 13:14:20,659 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-10-basic.sql
2014-07-09 13:14:20,660 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():348) - ...Saying good-bye to the user 'system' again
2014-07-09 13:14:20,661 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():352) - ...Clearing revived users
2014-07-09 13:14:20,662 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():359) - ...Coming back to the main user from the user 'system'
2014-07-09 13:14:20,664 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FOLLOW
(
	FOLLOW_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'フォローID',
	YOU_ID INT(100) NOT NULL COMMENT 'フォローする人のID : 会員のID
',
	MEMBER_ID INT(100) NOT NULL COMMENT 'フォローされる人のID : フォローしている自分のID
',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	DEL_FLG CHAR(1) DEFAULT 'N' NOT NULL COMMENT 'DEL_FLG : 削除フラグ Y=削除　N=削除していない',
	PRIMARY KEY (FOLLOW_ID),
	UNIQUE (YOU_ID, MEMBER_ID)
) COMMENT = 'フォロー'
2014-07-09 13:14:20,724 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE LOGIN
(
	LOGIN_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ログインID : ログインした瞬間のID
',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (LOGIN_ID)
) COMMENT = 'ログイン'
2014-07-09 13:14:20,793 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER
(
	MEMBER_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員のID
',
	EMAIL_ADDRESS VARCHAR(100) NOT NULL UNIQUE COMMENT 'メールアドレス : 会員のメールアドレス',
	MEMBER_STATUS_CODE INT NOT NULL COMMENT 'メンバーステータスコード : 企業か学生か',
	USER_NAME VARCHAR(100) NOT NULL UNIQUE COMMENT '会員ユーザ名 : 会員のユーザ名',
	ACCOUNT_NAME VARCHAR(100) NOT NULL COMMENT 'アカウント名',
	GROUP_NAME VARCHAR(100) NOT NULL COMMENT '所属団体名 : 学校、もしくは企業名を登録',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	RECRUITING_NUMBER VARCHAR(4) COMMENT '採用数 : 企業の採用予定数',
	INTERESTED_INDUSTRY VARCHAR(100) COMMENT '希望業界 : 学生が希望している業界。',
	GRADUATION_YEAR INT(4) COMMENT '卒業年 : 卒業年もしくは卒業予定年',
	BIRTHDATE DATE COMMENT '生年月日 : 会員の生年月日',
	PROFILE VARCHAR(200) COMMENT 'プロフィール',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員'
2014-07-09 13:14:20,873 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PASSWORD VARCHAR(50) NOT NULL COMMENT 'パスワード',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員セキュリティ'
2014-07-09 13:14:20,904 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_STATUS
(
	MEMBER_STATUS_CODE INT NOT NULL COMMENT 'メンバーステータスコード : 企業か学生か',
	MEMBER_STATUS_NAME VARCHAR(20) NOT NULL COMMENT '会員ステータス名',
	PRIMARY KEY (MEMBER_STATUS_CODE)
) COMMENT = 'メンバーステータス'
2014-07-09 13:14:20,934 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : tweetした人のID',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	TWEET_DATETIME VARCHAR(50) NOT NULL COMMENT 'TWEET日時 : ツィートした日時（共通カラムではなく、画面に表示するためのもの）',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-07-09 13:14:20,966 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FOLLOW
	ADD FOREIGN KEY (YOU_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-09 13:14:21,053 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-09 13:14:21,153 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-09 13:14:21,251 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-09 13:14:21,361 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-09 13:14:21,467 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER
	ADD FOREIGN KEY (MEMBER_STATUS_CODE)
	REFERENCES MEMBER_STATUS (MEMBER_STATUS_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-09 13:14:21,561 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=12 failure=0
2014-07-09 13:14:21,563 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=14 failure=0 (in 2 files)
2014-07-09 13:14:21,565 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-07-09 13:14:21,631 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-07-09 13:14:21,631 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-07-09 13:14:21,632 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-07-09 13:14:21,633 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-07-09 13:14:21,633 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-07-09 13:14:21,634 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-07-09 13:14:21,658 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-07-09 13:14:21,659 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\common\xls\10-member-status.xls)
2014-07-09 13:14:21,660 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-07-09 13:14:21,945 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-09 13:14:21,946 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-09 13:14:21,947 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-09 13:14:21,970 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_STATUS:{1, Student}
2014-07-09 13:14:22,012 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_STATUS:{2, Company}
2014-07-09 13:14:22,023 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 2 rows are loaded to MEMBER_STATUS
2014-07-09 13:14:22,028 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-07-09 13:14:22,029 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-07-09 13:14:22,030 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-07-09 13:14:22,106 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{1, 1, 早稲田大学, Stojkovic@gmail.com, Pixy, Stoiko, 1965/03/03, null, 2, 2014, null, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-09 13:14:22,116 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{2, 2, 株式会社ビズリーチ, adf@dsa.fdsg, dsg, sgf, null, 6, null, null, null, 2014-06-25 00:00:00.0, 2014-06-26 00:00:00.0, 2014-06-27 00:00:00.0, 2014-06-28 00:00:00.0}
2014-07-09 13:14:22,119 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-09 13:14:22,133 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 2 rows are loaded to MEMBER
2014-07-09 13:14:22,134 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 1, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-09 13:14:22,136 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 2, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-09 13:14:22,138 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-09 13:14:22,146 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 2 rows are loaded to LOGIN
2014-07-09 13:14:22,147 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-09 13:14:22,149 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-09 13:14:22,150 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-09 13:14:22,155 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 2 rows are loaded to MEMBER_SECURITY
2014-07-09 13:14:22,156 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 7月4日　07:04, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-09 13:14:22,159 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-09 13:14:22,164 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 1 rows are loaded to TWEET
2014-07-09 13:14:22,165 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - FOLLOW:{1, 1, 2, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, n}
2014-07-09 13:14:22,166 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-09 13:14:22,170 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 1 rows are loaded to FOLLOW
2014-07-09 13:14:22,173 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():379) - ...Checking implicit set of classification
2014-07-09 13:14:22,191 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - 
2014-07-09 13:14:22,191 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * * * * * * * **
2014-07-09 13:14:22,192 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2014-07-09 13:14:22,192 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * Take Finally *
2014-07-09 13:14:22,193 [main] INFO  (DfTakeFinallyProcess#takeFinally():225) - *              *
2014-07-09 13:14:22,194 [main] INFO  (DfTakeFinallyProcess#takeFinally():226) - * * * * * * * **
2014-07-09 13:14:22,204 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: take-finally.sql
2014-07-09 13:14:22,207 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2014-07-09 13:14:22,208 [main] INFO  (DfSqlFileFireMan#fire():90) - {Take Finally}: success=0 failure=0 (in 1 files)
2014-07-09 13:14:22,210 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-07-09 13:14:22,215 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m04s225ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=14 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=2
  (common)
  o 10-member-status.xls
  (ut)
  o 20-member.xls

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-07-09 13:14:23,113 [main] INFO  (TorqueJDBCTransformTask#begin():100) - +------------------------------------------+
2014-07-09 13:14:23,115 [main] INFO  (TorqueJDBCTransformTask#begin():101) - |                                          |
2014-07-09 13:14:23,115 [main] INFO  (TorqueJDBCTransformTask#begin():102) - |                   JDBC                   |
2014-07-09 13:14:23,116 [main] INFO  (TorqueJDBCTransformTask#begin():103) - |                                          |
2014-07-09 13:14:23,116 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2014-07-09 13:14:23,155 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-09 13:14:23,155 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-09 13:14:23,156 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-09 13:14:23,156 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-09 13:14:23,222 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2014-07-09 13:14:23,223 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2014-07-09 13:14:23,224 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1469) - ...Loading previous schema (schema diff process)
2014-07-09 13:14:23,235 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-09 13:14:23,307 [main] INFO  (DfSchemaXmlSerializer#generateXML():361) - ...Getting DB connection
2014-07-09 13:14:23,312 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-07-09 13:14:23,525 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-07-09 13:14:23,526 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-07-09 13:14:23,528 [main] INFO  (DfSchemaXmlSerializer#generateXML():364) - ...Getting DB meta data
2014-07-09 13:14:23,530 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-09 13:14:23,531 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-09 13:14:23,531 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-09 13:14:23,542 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2014-07-09 13:14:23,545 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2014-07-09 13:14:23,559 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - 
2014-07-09 13:14:23,559 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2014-07-09 13:14:23,560 [main] INFO  (DfSchemaXmlSerializer#processTable():423) - $ [Table List]
2014-07-09 13:14:23,561 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.follow(TABLE) // フォロー
2014-07-09 13:14:23,598 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.login(TABLE) // ログイン
2014-07-09 13:14:23,612 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member(TABLE) // 会員
2014-07-09 13:14:23,629 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_security(TABLE) // 会員セキュリティ
2014-07-09 13:14:23,644 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_status(TABLE) // メンバーステータス
2014-07-09 13:14:23,658 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.tweet(TABLE) // TWEET
2014-07-09 13:14:23,674 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 
2014-07-09 13:14:23,675 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ [Table Count]
2014-07-09 13:14:23,676 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ 6
2014-07-09 13:14:23,677 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - $ = = = = = = = = = =/
2014-07-09 13:14:23,678 [main] INFO  (DfSchemaXmlSerializer#processTable():439) - 
2014-07-09 13:14:23,680 [main] INFO  (DfSchemaXmlSerializer#processSequence():799) - ...Getting sequences
2014-07-09 13:14:23,684 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2014-07-09 13:14:23,685 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-twitter.xml
2014-07-09 13:14:23,686 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2014-07-09 13:14:23,703 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1487) - ...Loading next schema (schema diff process)
2014-07-09 13:14:23,706 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-09 13:14:23,755 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1492) -  -> different from previous (schema diff)
2014-07-09 13:14:23,757 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1494) - ...Serializing schema-diff:
2014-07-09 13:14:23,757 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1495) -   filePath = ./schema/project-history-twitter.diffmap
2014-07-09 13:14:23,838 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-07-09 13:14:23,846 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s729ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2014-07-09 13:14:24,731 [main] INFO  (TorqueDocumentationTask#begin():171) - +------------------------------------------+
2014-07-09 13:14:24,734 [main] INFO  (TorqueDocumentationTask#begin():172) - |                                          |
2014-07-09 13:14:24,735 [main] INFO  (TorqueDocumentationTask#begin():173) - |                   Doc                    |
2014-07-09 13:14:24,737 [main] INFO  (TorqueDocumentationTask#begin():181) - |                                          |
2014-07-09 13:14:24,737 [main] INFO  (TorqueDocumentationTask#begin():182) - +------------------------------------------+
2014-07-09 13:14:24,780 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-09 13:14:24,781 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-09 13:14:24,782 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-09 13:14:24,783 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-09 13:14:24,787 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():242) - 
2014-07-09 13:14:24,787 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():243) - * * * * * * * * * * *
2014-07-09 13:14:24,788 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():244) - *                   *
2014-07-09 13:14:24,789 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():245) - *    Schema HTML    *
2014-07-09 13:14:24,790 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - *                   *
2014-07-09 13:14:24,791 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2014-07-09 13:14:24,982 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-09 13:14:25,056 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("doc/ControlDocument.vm", c);
2014-07-09 13:14:25,119 [main] INFO  (Database#doEnableDocumentOutputDirectory():1180) - ...Setting up documentOutputDirectory: ./output/doc
2014-07-09 13:14:25,131 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-07-09 13:14:25,132 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-07-09 13:14:25,134 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-07-09 13:14:25,136 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-07-09 13:14:25,136 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-07-09 13:14:25,138 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-07-09 13:14:25,140 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-07-09 13:14:25,141 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-07-09 13:14:25,143 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-07-09 13:14:25,152 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():150) - ...Loading schema history
2014-07-09 13:14:25,256 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():154) -  -> found history: count=31
2014-07-09 13:14:25,510 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-09 13:14:25,523 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s790ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Doc}
2014-07-09 13:14:28,509 [main] INFO  (TorqueDataModelTask#begin():105) - +------------------------------------------+
2014-07-09 13:14:28,511 [main] INFO  (TorqueDataModelTask#begin():106) - |                                          |
2014-07-09 13:14:28,511 [main] INFO  (TorqueDataModelTask#begin():107) - |                 Generate                 |
2014-07-09 13:14:28,512 [main] INFO  (TorqueDataModelTask#begin():108) - |                                          |
2014-07-09 13:14:28,513 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2014-07-09 13:14:28,556 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-09 13:14:28,556 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-09 13:14:28,557 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-09 13:14:28,558 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-09 13:14:28,578 [main] INFO  (TorqueDataModelTask#setupControlTemplate():160) - 
2014-07-09 13:14:28,579 [main] INFO  (TorqueDataModelTask#setupControlTemplate():161) - ...Using Java control: om/ControlGenerateJava.vm
2014-07-09 13:14:28,715 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-09 13:14:28,758 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlGenerateJava.vm", c);
2014-07-09 13:14:28,891 [main] INFO  (Database#doEnableGenerateOutputDirectory():1148) - ...Setting up generateOutputDirectory: ../src/main/java
2014-07-09 13:14:28,898 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-07-09 13:14:28,899 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-07-09 13:14:28,901 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-07-09 13:14:28,903 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-07-09 13:14:28,903 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-07-09 13:14:28,905 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-07-09 13:14:28,907 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-07-09 13:14:28,907 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-07-09 13:14:28,910 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-07-09 13:14:28,927 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - /=============================
2014-07-09 13:14:28,928 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():60) - ...Initializing include query.
2014-07-09 13:14:28,929 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - String
2014-07-09 13:14:28,929 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Number
2014-07-09 13:14:28,930 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Date
2014-07-09 13:14:28,930 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotEqual -> []
2014-07-09 13:14:28,931 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   InScope -> []
2014-07-09 13:14:28,932 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotInScope -> []
2014-07-09 13:14:28,932 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - OrderBy
2014-07-09 13:14:28,933 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():62) - ========/
2014-07-09 13:14:28,947 [main] INFO  (Database#info():2573) - public void parseAllCommon() {
2014-07-09 13:14:28,949 [main] INFO  (Database#info():2573) -     parse('DBCurrent');
2014-07-09 13:14:28,954 [main] INFO  (Database#info():2573) -     parse('DBFluteConfig');
2014-07-09 13:14:28,977 [main] INFO  (Database#info():2573) -     parse('DBFluteInitializer');
2014-07-09 13:14:28,982 [main] INFO  (Database#info():2573) -     parse('DBMetaInstanceHandler');
2014-07-09 13:14:28,998 [main] INFO  (Database#info():2573) -     parse('EntityDefinedCommonColumn');
2014-07-09 13:14:29,003 [main] INFO  (Database#info():2573) -     parse('ImplementedBehaviorSelector');
2014-07-09 13:14:29,007 [main] INFO  (Database#info():2573) -     parse('ImplementedCommonColumnAutoSetupper');
2014-07-09 13:14:29,014 [main] INFO  (Database#info():2573) -     parse('ImplementedInvokerAssistant');
2014-07-09 13:14:29,017 [main] INFO  (Database#info():2573) -     parse('ImplementedSqlClauseCreator');
2014-07-09 13:14:29,020 [main] INFO  (Database#info():2573) - }
2014-07-09 13:14:29,021 [main] INFO  (Database#info():2573) - public void parseContainerConfig() {
2014-07-09 13:14:29,023 [main] INFO  (Database#info():2573) -     parse('../resources/dbflute.dicon')
2014-07-09 13:14:29,029 [main] INFO  (Database#info():2573) - }
2014-07-09 13:14:29,035 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldTableClass() {
2014-07-09 13:14:29,056 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-07-09 13:14:29,057 [main] INFO  (Database#info():2573) - public void parseTableClass() {
2014-07-09 13:14:29,058 [main] INFO  (Database#info():2573) -     parse('follow');
2014-07-09 13:14:29,335 [main] INFO  (Database#info():2573) -     parse('login');
2014-07-09 13:14:29,537 [main] INFO  (Database#info():2573) -     parse('member');
2014-07-09 13:14:29,847 [main] INFO  (Database#info():2573) -     parse('member_security');
2014-07-09 13:14:29,961 [main] INFO  (Database#info():2573) -     parse('member_status');
2014-07-09 13:14:30,065 [main] INFO  (Database#info():2573) -     parse('tweet');
2014-07-09 13:14:30,165 [main] INFO  (Database#info():2573) - }
2014-07-09 13:14:30,166 [main] INFO  (Database#info():2573) -  
2014-07-09 13:14:30,193 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-09 13:14:30,199 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s688ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Generate}
2014-07-09 13:14:31,283 [main] INFO  (DfOutsideSqlTestTask#begin():72) - +------------------------------------------+
2014-07-09 13:14:31,286 [main] INFO  (DfOutsideSqlTestTask#begin():73) - |                                          |
2014-07-09 13:14:31,286 [main] INFO  (DfOutsideSqlTestTask#begin():74) - |              OutsideSqlTest              |
2014-07-09 13:14:31,287 [main] INFO  (DfOutsideSqlTestTask#begin():75) - |                                          |
2014-07-09 13:14:31,287 [main] INFO  (DfOutsideSqlTestTask#begin():76) - +------------------------------------------+
2014-07-09 13:14:31,332 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-09 13:14:31,332 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-09 13:14:31,333 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-09 13:14:31,333 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-09 13:14:31,373 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-07-09 13:14:31,379 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s091ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2014-07-09 13:14:32,304 [main] INFO  (DfSql2EntityTask#begin():100) - +------------------------------------------+
2014-07-09 13:14:32,307 [main] INFO  (DfSql2EntityTask#begin():101) - |                                          |
2014-07-09 13:14:32,307 [main] INFO  (DfSql2EntityTask#begin():102) - |                Sql2Entity                |
2014-07-09 13:14:32,308 [main] INFO  (DfSql2EntityTask#begin():103) - |                                          |
2014-07-09 13:14:32,308 [main] INFO  (DfSql2EntityTask#begin():104) - +------------------------------------------+
2014-07-09 13:14:32,350 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-09 13:14:32,350 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-09 13:14:32,351 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-09 13:14:32,352 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-09 13:14:32,371 [main] INFO  (DfSql2EntityTask#setupControlTemplate():170) - 
2014-07-09 13:14:32,371 [main] INFO  (DfSql2EntityTask#setupControlTemplate():171) - ...Using Java control: om/ControlSql2EntityJava.vm
2014-07-09 13:14:32,381 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-09 13:14:32,444 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-07-09 13:14:32,597 [main] INFO  (DfSql2EntityTask#initControlContext():301) - 
2014-07-09 13:14:32,598 [main] INFO  (DfSql2EntityTask#initControlContext():302) - ...Preparing generation of customize-entities and parameter-beans
2014-07-09 13:14:32,599 [main] INFO  (DfSql2EntityTask#initControlContext():303) - * * * * * * * * * *
2014-07-09 13:14:32,599 [main] INFO  (DfSql2EntityTask#initControlContext():304) - * CustomizeEntity *
2014-07-09 13:14:32,600 [main] INFO  (DfSql2EntityTask#initControlContext():305) - * * * * * * * * * *
2014-07-09 13:14:32,600 [main] INFO  (DfSql2EntityTask#showParameterBean():879) - * * * * * * * * *
2014-07-09 13:14:32,601 [main] INFO  (DfSql2EntityTask#showParameterBean():880) - * ParameterBean *
2014-07-09 13:14:32,601 [main] INFO  (DfSql2EntityTask#showParameterBean():881) - * * * * * * * * *
2014-07-09 13:14:32,606 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlSql2EntityJava.vm", c);
2014-07-09 13:14:32,705 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1164) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2014-07-09 13:14:32,708 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldCustomizeClass() {
2014-07-09 13:14:32,718 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-07-09 13:14:32,718 [main] INFO  (Database#info():2573) - public void parseCustomizeEntity() {
2014-07-09 13:14:32,721 [main] INFO  (Database#info():2573) - }
2014-07-09 13:14:32,734 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():293) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2014-07-09 13:14:32,739 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-09 13:14:32,746 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s438ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2014-07-09 14:00:03,220 [main] INFO  (DfReplaceSchemaTask#begin():87) - +------------------------------------------+
2014-07-09 14:00:03,223 [main] INFO  (DfReplaceSchemaTask#begin():88) - |                                          |
2014-07-09 14:00:03,224 [main] INFO  (DfReplaceSchemaTask#begin():89) - |              ReplaceSchema               |
2014-07-09 14:00:03,242 [main] INFO  (DfReplaceSchemaTask#begin():97) - |                                          |
2014-07-09 14:00:03,243 [main] INFO  (DfReplaceSchemaTask#begin():98) - +------------------------------------------+
2014-07-09 14:00:03,245 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():329) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2014-07-09 14:00:04,723 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-09 14:00:04,724 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-09 14:00:04,725 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-09 14:00:04,726 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-09 14:00:04,735 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-07-09 14:00:04,961 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-07-09 14:00:04,961 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-07-09 14:00:04,981 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():207) - 
2014-07-09 14:00:04,982 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():208) - * * * * * * * * * * *
2014-07-09 14:00:04,983 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():209) - *                   *
2014-07-09 14:00:04,984 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():210) - * Initialize Schema *
2014-07-09 14:00:04,985 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():211) - *                   *
2014-07-09 14:00:04,986 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():212) - * * * * * * * * * * *
2014-07-09 14:00:05,004 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-09 14:00:05,005 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-09 14:00:05,006 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-09 14:00:05,056 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table follow
2014-07-09 14:00:05,102 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table login
2014-07-09 14:00:05,156 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_security
2014-07-09 14:00:05,188 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table tweet
2014-07-09 14:00:05,207 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_2
2014-07-09 14:00:05,242 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_1
2014-07-09 14:00:05,257 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table login drop foreign key login_ibfk_1
2014-07-09 14:00:05,268 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member drop foreign key member_ibfk_1
2014-07-09 14:00:05,280 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_security drop foreign key member_security_ibfk_1
2014-07-09 14:00:05,297 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table tweet drop foreign key tweet_ibfk_1
2014-07-09 14:00:05,313 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table follow
2014-07-09 14:00:05,332 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table login
2014-07-09 14:00:05,353 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member
2014-07-09 14:00:05,375 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_security
2014-07-09 14:00:05,391 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_status
2014-07-09 14:00:05,401 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table tweet
2014-07-09 14:00:05,460 [main] INFO  (DfCreateSchemaProcess#createSchema():244) - 
2014-07-09 14:00:05,462 [main] INFO  (DfCreateSchemaProcess#createSchema():245) - * * * * * * * * *
2014-07-09 14:00:05,462 [main] INFO  (DfCreateSchemaProcess#createSchema():246) - *               *
2014-07-09 14:00:05,463 [main] INFO  (DfCreateSchemaProcess#createSchema():247) - * Create Schema *
2014-07-09 14:00:05,464 [main] INFO  (DfCreateSchemaProcess#createSchema():248) - *               *
2014-07-09 14:00:05,465 [main] INFO  (DfCreateSchemaProcess#createSchema():249) - * * * * * * * * *
2014-07-09 14:00:05,471 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-00-system.sql
2014-07-09 14:00:05,473 [main] INFO  (DfReplaceSchemaProperties#checkTargetEnvType():277) - ...Checking envType: ut in [ut]
2014-07-09 14:00:05,474 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:checkEnv(ut)#

-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database twitter
2014-07-09 14:00:05,478 [main] INFO  (DfCreateSchemaProcess$1#dispatch():273) - ...Creating a connection to system
2014-07-09 14:00:05,480 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():514) - ...Creating a connection for additional user: root
2014-07-09 14:00:05,495 [main] INFO  (DfCreateSchemaProcess$1#dispatch():299) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2014-07-09 14:00:05,496 [main] INFO  (DfCreateSchemaProcess$1#dispatch():301) -  -> Can't create database 'twitter'; database exists
2014-07-09 14:00:05,498 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():411) - ...Reviving the user 'system' until the end of this SQL file
2014-07-09 14:00:05,499 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on twitter.*
  to twitter@localhost identified by 'twitter'
2014-07-09 14:00:05,503 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2014-07-09 14:00:05,505 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2014-07-09 14:00:05,506 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-10-basic.sql
2014-07-09 14:00:05,507 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():348) - ...Saying good-bye to the user 'system' again
2014-07-09 14:00:05,507 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():352) - ...Clearing revived users
2014-07-09 14:00:05,508 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():359) - ...Coming back to the main user from the user 'system'
2014-07-09 14:00:05,511 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FOLLOW
(
	FOLLOW_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'フォローID',
	YOU_ID INT(100) NOT NULL COMMENT 'フォローする人のID : 会員のID
',
	MEMBER_ID INT(100) NOT NULL COMMENT 'フォローされる人のID : フォローしている自分のID
',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	DEL_FLG CHAR(1) DEFAULT 'N' NOT NULL COMMENT 'DEL_FLG : 削除フラグ Y=削除　N=削除していない',
	PRIMARY KEY (FOLLOW_ID),
	UNIQUE (YOU_ID, MEMBER_ID)
) COMMENT = 'フォロー'
2014-07-09 14:00:05,563 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE LOGIN
(
	LOGIN_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ログインID : ログインした瞬間のID
',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (LOGIN_ID)
) COMMENT = 'ログイン'
2014-07-09 14:00:05,639 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER
(
	MEMBER_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員のID
',
	EMAIL_ADDRESS VARCHAR(100) NOT NULL UNIQUE COMMENT 'メールアドレス : 会員のメールアドレス',
	MEMBER_STATUS_CODE INT NOT NULL COMMENT 'メンバーステータスコード : 企業か学生か',
	USER_NAME VARCHAR(100) NOT NULL UNIQUE COMMENT '会員ユーザ名 : 会員のユーザ名',
	ACCOUNT_NAME VARCHAR(100) NOT NULL COMMENT 'アカウント名',
	GROUP_NAME VARCHAR(100) NOT NULL COMMENT '所属団体名 : 学校、もしくは企業名を登録',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	RECRUITING_NUMBER VARCHAR(20) COMMENT '採用数 : 企業の採用予定数',
	INTERESTED_INDUSTRY VARCHAR(100) COMMENT '希望業界 : 学生が希望している業界。',
	GRADUATION_YEAR INT(4) COMMENT '卒業年 : 卒業年もしくは卒業予定年',
	BIRTHDATE DATE COMMENT '生年月日 : 会員の生年月日',
	PROFILE VARCHAR(200) COMMENT 'プロフィール',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員'
2014-07-09 14:00:05,749 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PASSWORD VARCHAR(50) NOT NULL COMMENT 'パスワード',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員セキュリティ'
2014-07-09 14:00:05,815 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_STATUS
(
	MEMBER_STATUS_CODE INT NOT NULL COMMENT 'メンバーステータスコード : 企業か学生か',
	MEMBER_STATUS_NAME VARCHAR(20) NOT NULL COMMENT '会員ステータス名',
	PRIMARY KEY (MEMBER_STATUS_CODE)
) COMMENT = 'メンバーステータス'
2014-07-09 14:00:05,866 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : tweetした人のID',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	TWEET_DATETIME VARCHAR(50) NOT NULL COMMENT 'TWEET日時 : ツィートした日時（共通カラムではなく、画面に表示するためのもの）',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-07-09 14:00:05,911 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FOLLOW
	ADD FOREIGN KEY (YOU_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-09 14:00:06,012 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-09 14:00:06,099 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-09 14:00:06,180 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-09 14:00:06,278 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-09 14:00:06,359 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER
	ADD FOREIGN KEY (MEMBER_STATUS_CODE)
	REFERENCES MEMBER_STATUS (MEMBER_STATUS_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-09 14:00:06,469 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=12 failure=0
2014-07-09 14:00:06,471 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=14 failure=0 (in 2 files)
2014-07-09 14:00:06,473 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-07-09 14:00:06,518 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-07-09 14:00:06,519 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-07-09 14:00:06,520 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-07-09 14:00:06,520 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-07-09 14:00:06,521 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-07-09 14:00:06,522 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-07-09 14:00:06,544 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-07-09 14:00:06,545 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\common\xls\10-member-status.xls)
2014-07-09 14:00:06,545 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-07-09 14:00:06,876 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-09 14:00:06,877 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-09 14:00:06,878 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-09 14:00:06,902 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_STATUS:{1, Student}
2014-07-09 14:00:06,953 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_STATUS:{2, Company}
2014-07-09 14:00:06,967 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 2 rows are loaded to MEMBER_STATUS
2014-07-09 14:00:06,973 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-07-09 14:00:06,974 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-07-09 14:00:06,975 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-07-09 14:00:07,046 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{1, 1, 早稲田大学, Stojkovic@gmail.com, Pixy, Stoiko, 1965/03/03, null, 2, 2014, null, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-09 14:00:07,057 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{2, 2, 株式会社ビズリーチ, adf@dsa.fdsg, dsg, sgf, null, 6, null, null, null, 2014-06-25 00:00:00.0, 2014-06-26 00:00:00.0, 2014-06-27 00:00:00.0, 2014-06-28 00:00:00.0}
2014-07-09 14:00:07,061 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-09 14:00:07,070 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 2 rows are loaded to MEMBER
2014-07-09 14:00:07,071 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 1, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-09 14:00:07,073 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 2, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-09 14:00:07,074 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-09 14:00:07,078 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 2 rows are loaded to LOGIN
2014-07-09 14:00:07,079 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-09 14:00:07,080 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-09 14:00:07,081 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-09 14:00:07,085 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 2 rows are loaded to MEMBER_SECURITY
2014-07-09 14:00:07,086 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 7月4日　07:04, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-09 14:00:07,090 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-09 14:00:07,093 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 1 rows are loaded to TWEET
2014-07-09 14:00:07,095 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - FOLLOW:{1, 1, 2, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, n}
2014-07-09 14:00:07,096 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-09 14:00:07,100 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 1 rows are loaded to FOLLOW
2014-07-09 14:00:07,103 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():379) - ...Checking implicit set of classification
2014-07-09 14:00:07,119 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - 
2014-07-09 14:00:07,120 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * * * * * * * **
2014-07-09 14:00:07,121 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2014-07-09 14:00:07,121 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * Take Finally *
2014-07-09 14:00:07,122 [main] INFO  (DfTakeFinallyProcess#takeFinally():225) - *              *
2014-07-09 14:00:07,123 [main] INFO  (DfTakeFinallyProcess#takeFinally():226) - * * * * * * * **
2014-07-09 14:00:07,133 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: take-finally.sql
2014-07-09 14:00:07,135 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2014-07-09 14:00:07,136 [main] INFO  (DfSqlFileFireMan#fire():90) - {Take Finally}: success=0 failure=0 (in 1 files)
2014-07-09 14:00:07,138 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-07-09 14:00:07,142 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m03s919ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=14 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=2
  (common)
  o 10-member-status.xls
  (ut)
  o 20-member.xls

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-07-09 14:00:08,030 [main] INFO  (TorqueJDBCTransformTask#begin():100) - +------------------------------------------+
2014-07-09 14:00:08,033 [main] INFO  (TorqueJDBCTransformTask#begin():101) - |                                          |
2014-07-09 14:00:08,033 [main] INFO  (TorqueJDBCTransformTask#begin():102) - |                   JDBC                   |
2014-07-09 14:00:08,034 [main] INFO  (TorqueJDBCTransformTask#begin():103) - |                                          |
2014-07-09 14:00:08,034 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2014-07-09 14:00:08,079 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-09 14:00:08,080 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-09 14:00:08,080 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-09 14:00:08,081 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-09 14:00:08,127 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2014-07-09 14:00:08,128 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2014-07-09 14:00:08,128 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1469) - ...Loading previous schema (schema diff process)
2014-07-09 14:00:08,138 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-09 14:00:08,225 [main] INFO  (DfSchemaXmlSerializer#generateXML():361) - ...Getting DB connection
2014-07-09 14:00:08,231 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-07-09 14:00:08,435 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-07-09 14:00:08,436 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-07-09 14:00:08,439 [main] INFO  (DfSchemaXmlSerializer#generateXML():364) - ...Getting DB meta data
2014-07-09 14:00:08,442 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-09 14:00:08,442 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-09 14:00:08,443 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-09 14:00:08,458 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2014-07-09 14:00:08,462 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2014-07-09 14:00:08,479 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - 
2014-07-09 14:00:08,480 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2014-07-09 14:00:08,481 [main] INFO  (DfSchemaXmlSerializer#processTable():423) - $ [Table List]
2014-07-09 14:00:08,482 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.follow(TABLE) // フォロー
2014-07-09 14:00:08,527 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.login(TABLE) // ログイン
2014-07-09 14:00:08,541 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member(TABLE) // 会員
2014-07-09 14:00:08,559 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_security(TABLE) // 会員セキュリティ
2014-07-09 14:00:08,575 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_status(TABLE) // メンバーステータス
2014-07-09 14:00:08,589 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.tweet(TABLE) // TWEET
2014-07-09 14:00:08,603 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 
2014-07-09 14:00:08,604 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ [Table Count]
2014-07-09 14:00:08,605 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ 6
2014-07-09 14:00:08,606 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - $ = = = = = = = = = =/
2014-07-09 14:00:08,607 [main] INFO  (DfSchemaXmlSerializer#processTable():439) - 
2014-07-09 14:00:08,609 [main] INFO  (DfSchemaXmlSerializer#processSequence():799) - ...Getting sequences
2014-07-09 14:00:08,614 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2014-07-09 14:00:08,615 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-twitter.xml
2014-07-09 14:00:08,615 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2014-07-09 14:00:08,630 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1487) - ...Loading next schema (schema diff process)
2014-07-09 14:00:08,633 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-09 14:00:08,678 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1492) -  -> different from previous (schema diff)
2014-07-09 14:00:08,680 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1494) - ...Serializing schema-diff:
2014-07-09 14:00:08,681 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1495) -   filePath = ./schema/project-history-twitter.diffmap
2014-07-09 14:00:08,760 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-07-09 14:00:08,765 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s732ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2014-07-09 14:00:09,683 [main] INFO  (TorqueDocumentationTask#begin():171) - +------------------------------------------+
2014-07-09 14:00:09,686 [main] INFO  (TorqueDocumentationTask#begin():172) - |                                          |
2014-07-09 14:00:09,687 [main] INFO  (TorqueDocumentationTask#begin():173) - |                   Doc                    |
2014-07-09 14:00:09,687 [main] INFO  (TorqueDocumentationTask#begin():181) - |                                          |
2014-07-09 14:00:09,688 [main] INFO  (TorqueDocumentationTask#begin():182) - +------------------------------------------+
2014-07-09 14:00:09,733 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-09 14:00:09,733 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-09 14:00:09,734 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-09 14:00:09,735 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-09 14:00:09,741 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():242) - 
2014-07-09 14:00:09,742 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():243) - * * * * * * * * * * *
2014-07-09 14:00:09,743 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():244) - *                   *
2014-07-09 14:00:09,744 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():245) - *    Schema HTML    *
2014-07-09 14:00:09,745 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - *                   *
2014-07-09 14:00:09,746 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2014-07-09 14:00:09,962 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-09 14:00:10,035 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("doc/ControlDocument.vm", c);
2014-07-09 14:00:10,093 [main] INFO  (Database#doEnableDocumentOutputDirectory():1180) - ...Setting up documentOutputDirectory: ./output/doc
2014-07-09 14:00:10,102 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-07-09 14:00:10,103 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-07-09 14:00:10,105 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-07-09 14:00:10,106 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-07-09 14:00:10,107 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-07-09 14:00:10,109 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-07-09 14:00:10,111 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-07-09 14:00:10,111 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-07-09 14:00:10,113 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-07-09 14:00:10,122 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():150) - ...Loading schema history
2014-07-09 14:00:10,225 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():154) -  -> found history: count=32
2014-07-09 14:00:10,470 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-09 14:00:10,491 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s805ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Doc}
2014-07-09 14:00:13,309 [main] INFO  (TorqueDataModelTask#begin():105) - +------------------------------------------+
2014-07-09 14:00:13,311 [main] INFO  (TorqueDataModelTask#begin():106) - |                                          |
2014-07-09 14:00:13,312 [main] INFO  (TorqueDataModelTask#begin():107) - |                 Generate                 |
2014-07-09 14:00:13,312 [main] INFO  (TorqueDataModelTask#begin():108) - |                                          |
2014-07-09 14:00:13,313 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2014-07-09 14:00:13,354 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-09 14:00:13,355 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-09 14:00:13,355 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-09 14:00:13,356 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-09 14:00:13,375 [main] INFO  (TorqueDataModelTask#setupControlTemplate():160) - 
2014-07-09 14:00:13,376 [main] INFO  (TorqueDataModelTask#setupControlTemplate():161) - ...Using Java control: om/ControlGenerateJava.vm
2014-07-09 14:00:13,544 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-09 14:00:13,605 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlGenerateJava.vm", c);
2014-07-09 14:00:13,764 [main] INFO  (Database#doEnableGenerateOutputDirectory():1148) - ...Setting up generateOutputDirectory: ../src/main/java
2014-07-09 14:00:13,770 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-07-09 14:00:13,771 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-07-09 14:00:13,773 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-07-09 14:00:13,775 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-07-09 14:00:13,775 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-07-09 14:00:13,777 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-07-09 14:00:13,780 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-07-09 14:00:13,780 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-07-09 14:00:13,783 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-07-09 14:00:13,799 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - /=============================
2014-07-09 14:00:13,801 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():60) - ...Initializing include query.
2014-07-09 14:00:13,802 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - String
2014-07-09 14:00:13,803 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Number
2014-07-09 14:00:13,803 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Date
2014-07-09 14:00:13,804 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotEqual -> []
2014-07-09 14:00:13,804 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   InScope -> []
2014-07-09 14:00:13,805 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotInScope -> []
2014-07-09 14:00:13,806 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - OrderBy
2014-07-09 14:00:13,807 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():62) - ========/
2014-07-09 14:00:13,823 [main] INFO  (Database#info():2573) - public void parseAllCommon() {
2014-07-09 14:00:13,825 [main] INFO  (Database#info():2573) -     parse('DBCurrent');
2014-07-09 14:00:13,830 [main] INFO  (Database#info():2573) -     parse('DBFluteConfig');
2014-07-09 14:00:13,851 [main] INFO  (Database#info():2573) -     parse('DBFluteInitializer');
2014-07-09 14:00:13,856 [main] INFO  (Database#info():2573) -     parse('DBMetaInstanceHandler');
2014-07-09 14:00:13,871 [main] INFO  (Database#info():2573) -     parse('EntityDefinedCommonColumn');
2014-07-09 14:00:13,875 [main] INFO  (Database#info():2573) -     parse('ImplementedBehaviorSelector');
2014-07-09 14:00:13,879 [main] INFO  (Database#info():2573) -     parse('ImplementedCommonColumnAutoSetupper');
2014-07-09 14:00:13,884 [main] INFO  (Database#info():2573) -     parse('ImplementedInvokerAssistant');
2014-07-09 14:00:13,888 [main] INFO  (Database#info():2573) -     parse('ImplementedSqlClauseCreator');
2014-07-09 14:00:13,891 [main] INFO  (Database#info():2573) - }
2014-07-09 14:00:13,891 [main] INFO  (Database#info():2573) - public void parseContainerConfig() {
2014-07-09 14:00:13,893 [main] INFO  (Database#info():2573) -     parse('../resources/dbflute.dicon')
2014-07-09 14:00:13,899 [main] INFO  (Database#info():2573) - }
2014-07-09 14:00:13,905 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldTableClass() {
2014-07-09 14:00:13,927 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-07-09 14:00:13,928 [main] INFO  (Database#info():2573) - public void parseTableClass() {
2014-07-09 14:00:13,929 [main] INFO  (Database#info():2573) -     parse('follow');
2014-07-09 14:00:14,207 [main] INFO  (Database#info():2573) -     parse('login');
2014-07-09 14:00:14,383 [main] INFO  (Database#info():2573) -     parse('member');
2014-07-09 14:00:14,724 [main] INFO  (Database#info():2573) -     parse('member_security');
2014-07-09 14:00:14,849 [main] INFO  (Database#info():2573) -     parse('member_status');
2014-07-09 14:00:14,944 [main] INFO  (Database#info():2573) -     parse('tweet');
2014-07-09 14:00:15,053 [main] INFO  (Database#info():2573) - }
2014-07-09 14:00:15,054 [main] INFO  (Database#info():2573) -  
2014-07-09 14:00:15,076 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-09 14:00:15,083 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s771ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Generate}
2014-07-09 14:00:16,001 [main] INFO  (DfOutsideSqlTestTask#begin():72) - +------------------------------------------+
2014-07-09 14:00:16,003 [main] INFO  (DfOutsideSqlTestTask#begin():73) - |                                          |
2014-07-09 14:00:16,003 [main] INFO  (DfOutsideSqlTestTask#begin():74) - |              OutsideSqlTest              |
2014-07-09 14:00:16,004 [main] INFO  (DfOutsideSqlTestTask#begin():75) - |                                          |
2014-07-09 14:00:16,005 [main] INFO  (DfOutsideSqlTestTask#begin():76) - +------------------------------------------+
2014-07-09 14:00:16,049 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-09 14:00:16,050 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-09 14:00:16,050 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-09 14:00:16,051 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-09 14:00:16,108 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-07-09 14:00:16,115 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s107ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2014-07-09 14:00:17,016 [main] INFO  (DfSql2EntityTask#begin():100) - +------------------------------------------+
2014-07-09 14:00:17,018 [main] INFO  (DfSql2EntityTask#begin():101) - |                                          |
2014-07-09 14:00:17,018 [main] INFO  (DfSql2EntityTask#begin():102) - |                Sql2Entity                |
2014-07-09 14:00:17,019 [main] INFO  (DfSql2EntityTask#begin():103) - |                                          |
2014-07-09 14:00:17,020 [main] INFO  (DfSql2EntityTask#begin():104) - +------------------------------------------+
2014-07-09 14:00:17,060 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-09 14:00:17,061 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-09 14:00:17,062 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-09 14:00:17,063 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-09 14:00:17,082 [main] INFO  (DfSql2EntityTask#setupControlTemplate():170) - 
2014-07-09 14:00:17,083 [main] INFO  (DfSql2EntityTask#setupControlTemplate():171) - ...Using Java control: om/ControlSql2EntityJava.vm
2014-07-09 14:00:17,092 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-09 14:00:17,168 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-07-09 14:00:17,341 [main] INFO  (DfSql2EntityTask#initControlContext():301) - 
2014-07-09 14:00:17,341 [main] INFO  (DfSql2EntityTask#initControlContext():302) - ...Preparing generation of customize-entities and parameter-beans
2014-07-09 14:00:17,342 [main] INFO  (DfSql2EntityTask#initControlContext():303) - * * * * * * * * * *
2014-07-09 14:00:17,343 [main] INFO  (DfSql2EntityTask#initControlContext():304) - * CustomizeEntity *
2014-07-09 14:00:17,343 [main] INFO  (DfSql2EntityTask#initControlContext():305) - * * * * * * * * * *
2014-07-09 14:00:17,344 [main] INFO  (DfSql2EntityTask#showParameterBean():879) - * * * * * * * * *
2014-07-09 14:00:17,344 [main] INFO  (DfSql2EntityTask#showParameterBean():880) - * ParameterBean *
2014-07-09 14:00:17,345 [main] INFO  (DfSql2EntityTask#showParameterBean():881) - * * * * * * * * *
2014-07-09 14:00:17,350 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlSql2EntityJava.vm", c);
2014-07-09 14:00:17,467 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1164) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2014-07-09 14:00:17,470 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldCustomizeClass() {
2014-07-09 14:00:17,482 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-07-09 14:00:17,482 [main] INFO  (Database#info():2573) - public void parseCustomizeEntity() {
2014-07-09 14:00:17,485 [main] INFO  (Database#info():2573) - }
2014-07-09 14:00:17,501 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():293) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2014-07-09 14:00:17,506 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-09 14:00:17,512 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s493ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2014-07-09 18:17:28,929 [main] INFO  (DfReplaceSchemaTask#begin():87) - +------------------------------------------+
2014-07-09 18:17:28,932 [main] INFO  (DfReplaceSchemaTask#begin():88) - |                                          |
2014-07-09 18:17:28,932 [main] INFO  (DfReplaceSchemaTask#begin():89) - |              ReplaceSchema               |
2014-07-09 18:17:28,951 [main] INFO  (DfReplaceSchemaTask#begin():97) - |                                          |
2014-07-09 18:17:28,952 [main] INFO  (DfReplaceSchemaTask#begin():98) - +------------------------------------------+
2014-07-09 18:17:28,954 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():329) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2014-07-09 18:17:32,260 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-09 18:17:32,264 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-09 18:17:32,268 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-09 18:17:32,271 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-09 18:17:32,296 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-07-09 18:17:32,571 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-07-09 18:17:32,572 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-07-09 18:17:32,592 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():207) - 
2014-07-09 18:17:32,593 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():208) - * * * * * * * * * * *
2014-07-09 18:17:32,594 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():209) - *                   *
2014-07-09 18:17:32,594 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():210) - * Initialize Schema *
2014-07-09 18:17:32,595 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():211) - *                   *
2014-07-09 18:17:32,596 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():212) - * * * * * * * * * * *
2014-07-09 18:17:32,614 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-09 18:17:32,615 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-09 18:17:32,616 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-09 18:17:32,690 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table follow
2014-07-09 18:17:32,739 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table login
2014-07-09 18:17:32,788 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table member_security
2014-07-09 18:17:32,824 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - truncate table tweet
2014-07-09 18:17:32,858 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_2
2014-07-09 18:17:32,873 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table follow drop foreign key follow_ibfk_1
2014-07-09 18:17:32,884 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table login drop foreign key login_ibfk_1
2014-07-09 18:17:32,895 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member drop foreign key member_ibfk_1
2014-07-09 18:17:32,905 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table member_security drop foreign key member_security_ibfk_1
2014-07-09 18:17:32,924 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - alter table tweet drop foreign key tweet_ibfk_1
2014-07-09 18:17:32,946 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table follow
2014-07-09 18:17:32,966 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table login
2014-07-09 18:17:32,990 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member
2014-07-09 18:17:33,020 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_security
2014-07-09 18:17:33,039 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table member_status
2014-07-09 18:17:33,059 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():576) - drop table tweet
2014-07-09 18:17:33,119 [main] INFO  (DfCreateSchemaProcess#createSchema():244) - 
2014-07-09 18:17:33,119 [main] INFO  (DfCreateSchemaProcess#createSchema():245) - * * * * * * * * *
2014-07-09 18:17:33,120 [main] INFO  (DfCreateSchemaProcess#createSchema():246) - *               *
2014-07-09 18:17:33,120 [main] INFO  (DfCreateSchemaProcess#createSchema():247) - * Create Schema *
2014-07-09 18:17:33,121 [main] INFO  (DfCreateSchemaProcess#createSchema():248) - *               *
2014-07-09 18:17:33,122 [main] INFO  (DfCreateSchemaProcess#createSchema():249) - * * * * * * * * *
2014-07-09 18:17:33,127 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-00-system.sql
2014-07-09 18:17:33,130 [main] INFO  (DfReplaceSchemaProperties#checkTargetEnvType():277) - ...Checking envType: ut in [ut]
2014-07-09 18:17:33,131 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:checkEnv(ut)#

-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database twitter
2014-07-09 18:17:33,134 [main] INFO  (DfCreateSchemaProcess$1#dispatch():273) - ...Creating a connection to system
2014-07-09 18:17:33,136 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():514) - ...Creating a connection for additional user: root
2014-07-09 18:17:33,151 [main] INFO  (DfCreateSchemaProcess$1#dispatch():299) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2014-07-09 18:17:33,152 [main] INFO  (DfCreateSchemaProcess$1#dispatch():301) -  -> Can't create database 'twitter'; database exists
2014-07-09 18:17:33,154 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():411) - ...Reviving the user 'system' until the end of this SQL file
2014-07-09 18:17:33,155 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on twitter.*
  to twitter@localhost identified by 'twitter'
2014-07-09 18:17:33,159 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2014-07-09 18:17:33,162 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2014-07-09 18:17:33,162 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: replace-schema-10-basic.sql
2014-07-09 18:17:33,164 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():348) - ...Saying good-bye to the user 'system' again
2014-07-09 18:17:33,169 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():352) - ...Clearing revived users
2014-07-09 18:17:33,170 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():359) - ...Coming back to the main user from the user 'system'
2014-07-09 18:17:33,173 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FOLLOW
(
	FOLLOW_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'フォローID',
	YOU_ID INT(100) NOT NULL COMMENT 'フォローする人のID : 会員のID
',
	MEMBER_ID INT(100) NOT NULL COMMENT 'フォローされる人のID : フォローしている自分のID
',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	DEL_FLG CHAR(1) DEFAULT 'N' NOT NULL COMMENT 'DEL_FLG : 削除フラグ Y=削除　N=削除していない',
	PRIMARY KEY (FOLLOW_ID),
	UNIQUE (YOU_ID, MEMBER_ID)
) COMMENT = 'フォロー'
2014-07-09 18:17:33,225 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE LOGIN
(
	LOGIN_ID INT NOT NULL AUTO_INCREMENT COMMENT 'ログインID : ログインした瞬間のID
',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : 会員のID
',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (LOGIN_ID)
) COMMENT = 'ログイン'
2014-07-09 18:17:33,297 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER
(
	MEMBER_ID INT(100) NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員のID
',
	EMAIL_ADDRESS VARCHAR(100) NOT NULL UNIQUE COMMENT 'メールアドレス : 会員のメールアドレス',
	MEMBER_STATUS_CODE INT NOT NULL COMMENT 'メンバーステータスコード : 企業か学生か',
	USER_NAME VARCHAR(100) NOT NULL UNIQUE COMMENT '会員ユーザ名 : 会員のユーザ名',
	ACCOUNT_NAME VARCHAR(100) NOT NULL COMMENT 'アカウント名',
	GROUP_NAME VARCHAR(100) NOT NULL COMMENT '所属団体名 : 学校、もしくは企業名を登録',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	RECRUITING_NUMBER VARCHAR(20) COMMENT '採用数 : 企業の採用予定数',
	INTERESTED_INDUSTRY VARCHAR(100) COMMENT '希望業界 : 学生が希望している業界。',
	GRADUATION_YEAR INT(4) COMMENT '卒業年 : 卒業年もしくは卒業予定年',
	BIRTHDATE DATE COMMENT '生年月日 : 会員の生年月日',
	PROFILE VARCHAR(200) COMMENT 'プロフィール',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員'
2014-07-09 18:17:33,375 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID INT(100) NOT NULL UNIQUE COMMENT '会員ID : 会員のID
',
	PASSWORD VARCHAR(50) NOT NULL COMMENT 'パスワード',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = '会員セキュリティ'
2014-07-09 18:17:33,445 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE MEMBER_STATUS
(
	MEMBER_STATUS_CODE INT NOT NULL COMMENT 'メンバーステータスコード : 企業か学生か',
	MEMBER_STATUS_NAME VARCHAR(20) NOT NULL COMMENT '会員ステータス名',
	PRIMARY KEY (MEMBER_STATUS_CODE)
) COMMENT = 'メンバーステータス'
2014-07-09 18:17:33,494 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID INT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'TWEET_ID',
	MEMBER_ID INT(100) NOT NULL COMMENT '会員ID : tweetした人のID',
	TWEET VARCHAR(140) NOT NULL COMMENT 'TWEET',
	INS_DATETIME DATETIME NOT NULL COMMENT 'insert日時',
	UPD_DATETIME DATETIME NOT NULL COMMENT 'UPD_DATETIME',
	INS_TRACE VARCHAR(256) NOT NULL COMMENT 'Insertトレース',
	UPD_TRACE VARCHAR(256) NOT NULL COMMENT 'UPD トレース',
	TWEET_DATETIME VARCHAR(50) NOT NULL COMMENT 'TWEET日時 : ツィートした日時（共通カラムではなく、画面に表示するためのもの）',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'TWEET'
2014-07-09 18:17:33,528 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FOLLOW
	ADD FOREIGN KEY (YOU_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-09 18:17:33,622 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-09 18:17:33,733 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE LOGIN
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-09 18:17:33,831 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER_SECURITY
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-09 18:17:33,927 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-09 18:17:34,028 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE MEMBER
	ADD FOREIGN KEY (MEMBER_STATUS_CODE)
	REFERENCES MEMBER_STATUS (MEMBER_STATUS_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2014-07-09 18:17:34,135 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=12 failure=0
2014-07-09 18:17:34,138 [main] INFO  (DfSqlFileFireMan#fire():90) - {Create Schema}: success=14 failure=0 (in 2 files)
2014-07-09 18:17:34,139 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():542) - ...Closing connections to change-users: [system]
2014-07-09 18:17:34,201 [main] INFO  (DfLoadDataProcess#execute():129) - 
2014-07-09 18:17:34,202 [main] INFO  (DfLoadDataProcess#execute():130) - * * * * * * * * * * *
2014-07-09 18:17:34,203 [main] INFO  (DfLoadDataProcess#execute():131) - *                   *
2014-07-09 18:17:34,203 [main] INFO  (DfLoadDataProcess#execute():132) - * Load Data         *
2014-07-09 18:17:34,204 [main] INFO  (DfLoadDataProcess#execute():133) - *                   *
2014-07-09 18:17:34,205 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2014-07-09 18:17:34,228 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-07-09 18:17:34,229 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\common\xls\10-member-status.xls)
2014-07-09 18:17:34,230 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-07-09 18:17:34,509 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-09 18:17:34,509 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-09 18:17:34,510 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-09 18:17:34,537 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_STATUS:{1, Student}
2014-07-09 18:17:34,581 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_STATUS:{2, Company}
2014-07-09 18:17:34,596 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 2 rows are loaded to MEMBER_STATUS
2014-07-09 18:17:34,601 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():126) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2014-07-09 18:17:34,602 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():127) - writeData(playsql\data\ut\xls\20-member.xls)
2014-07-09 18:17:34,603 [main] INFO  (DfXlsDataHandlerImpl#writeSeveralData():128) - = = = = = = =/
2014-07-09 18:17:34,677 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{1, 1, 早稲田大学, Stojkovic@gmail.com, Pixy, Stoiko, 1965/03/03, null, 2, 2014, null, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-09 18:17:34,687 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER:{2, 2, 株式会社ビズリーチ, adf@dsa.fdsg, dsg, sgf, null, 6, null, null, null, 2014-06-25 00:00:00.0, 2014-06-26 00:00:00.0, 2014-06-27 00:00:00.0, 2014-06-28 00:00:00.0}
2014-07-09 18:17:34,690 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-09 18:17:34,701 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 2 rows are loaded to MEMBER
2014-07-09 18:17:34,702 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{1, 1, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-09 18:17:34,704 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - LOGIN:{2, 2, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-09 18:17:34,705 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-09 18:17:34,711 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 2 rows are loaded to LOGIN
2014-07-09 18:17:34,712 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{1, aaa, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-09 18:17:34,714 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - MEMBER_SECURITY:{2, bbb, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-09 18:17:34,715 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-09 18:17:34,720 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 2 rows are loaded to MEMBER_SECURITY
2014-07-09 18:17:34,721 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - TWEET:{1, 1234, 充実した一日だった。, 7月4日　07:04, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0}
2014-07-09 18:17:34,724 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-09 18:17:34,728 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 1 rows are loaded to TWEET
2014-07-09 18:17:34,729 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1043) - FOLLOW:{1, 1, 2, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, 2014-06-24 00:00:00.0, n}
2014-07-09 18:17:34,731 [main] INFO  (DfXlsDataHandlerImpl#doWriteDataTable():210) - ...Skipping the terminal garbage row
2014-07-09 18:17:34,740 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1059) -  -> 1 rows are loaded to FOLLOW
2014-07-09 18:17:34,743 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():379) - ...Checking implicit set of classification
2014-07-09 18:17:34,758 [main] INFO  (DfTakeFinallyProcess#takeFinally():221) - 
2014-07-09 18:17:34,758 [main] INFO  (DfTakeFinallyProcess#takeFinally():222) - * * * * * * * **
2014-07-09 18:17:34,759 [main] INFO  (DfTakeFinallyProcess#takeFinally():223) - *              *
2014-07-09 18:17:34,760 [main] INFO  (DfTakeFinallyProcess#takeFinally():224) - * Take Finally *
2014-07-09 18:17:34,760 [main] INFO  (DfTakeFinallyProcess#takeFinally():225) - *              *
2014-07-09 18:17:34,761 [main] INFO  (DfTakeFinallyProcess#takeFinally():226) - * * * * * * * **
2014-07-09 18:17:34,771 [main] INFO  (DfSqlFileFireMan#fire():65) - ...Firing: take-finally.sql
2014-07-09 18:17:34,775 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2014-07-09 18:17:34,776 [main] INFO  (DfSqlFileFireMan#fire():90) - {Take Finally}: success=0 failure=0 (in 1 files)
2014-07-09 18:17:34,778 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-07-09 18:17:34,783 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m05s850ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {user=root, password=}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Create Schema}: success=14 failure=0 (in 2 files)
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql

 {Load Data}: loaded-files=2
  (common)
  o 10-member-status.xls
  (ut)
  o 20-member.xls

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2014-07-09 18:17:35,679 [main] INFO  (TorqueJDBCTransformTask#begin():100) - +------------------------------------------+
2014-07-09 18:17:35,682 [main] INFO  (TorqueJDBCTransformTask#begin():101) - |                                          |
2014-07-09 18:17:35,682 [main] INFO  (TorqueJDBCTransformTask#begin():102) - |                   JDBC                   |
2014-07-09 18:17:35,683 [main] INFO  (TorqueJDBCTransformTask#begin():103) - |                                          |
2014-07-09 18:17:35,684 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2014-07-09 18:17:35,725 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-09 18:17:35,725 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-09 18:17:35,726 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-09 18:17:35,727 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-09 18:17:35,772 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2014-07-09 18:17:35,772 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2014-07-09 18:17:35,773 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1469) - ...Loading previous schema (schema diff process)
2014-07-09 18:17:35,782 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-09 18:17:35,850 [main] INFO  (DfSchemaXmlSerializer#generateXML():361) - ...Getting DB connection
2014-07-09 18:17:35,855 [main] INFO  (DfDataSourceHandler#createConnection():168) - ...Connecting to database by data source:
2014-07-09 18:17:36,059 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():235) -   product = MySQL 5.6.17
2014-07-09 18:17:36,060 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():236) -   driver  = MySQL Connector Java mysql-connector-java-5.1.26 ( Revision: ${bzr.revision-id} ) for JDBC 4.0
2014-07-09 18:17:36,062 [main] INFO  (DfSchemaXmlSerializer#generateXML():364) - ...Getting DB meta data
2014-07-09 18:17:36,064 [main] INFO  (DfTableExtractor#doGetTableList():67) - ...Getting tables:
2014-07-09 18:17:36,065 [main] INFO  (DfTableExtractor#doGetTableList():68) -   schema = {twitter.$$NoNameSchema$$ as main}
2014-07-09 18:17:36,065 [main] INFO  (DfTableExtractor#doGetTableList():69) -   types  = [TABLE, VIEW]
2014-07-09 18:17:36,075 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2014-07-09 18:17:36,078 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2014-07-09 18:17:36,092 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - 
2014-07-09 18:17:36,093 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2014-07-09 18:17:36,094 [main] INFO  (DfSchemaXmlSerializer#processTable():423) - $ [Table List]
2014-07-09 18:17:36,095 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.follow(TABLE) // フォロー
2014-07-09 18:17:36,134 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.login(TABLE) // ログイン
2014-07-09 18:17:36,150 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member(TABLE) // 会員
2014-07-09 18:17:36,169 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_security(TABLE) // 会員セキュリティ
2014-07-09 18:17:36,184 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.member_status(TABLE) // メンバーステータス
2014-07-09 18:17:36,198 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():506) - $ twitter.tweet(TABLE) // TWEET
2014-07-09 18:17:36,214 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ 
2014-07-09 18:17:36,215 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ [Table Count]
2014-07-09 18:17:36,216 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ 6
2014-07-09 18:17:36,216 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - $ = = = = = = = = = =/
2014-07-09 18:17:36,217 [main] INFO  (DfSchemaXmlSerializer#processTable():439) - 
2014-07-09 18:17:36,220 [main] INFO  (DfSchemaXmlSerializer#processSequence():799) - ...Getting sequences
2014-07-09 18:17:36,225 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2014-07-09 18:17:36,226 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-twitter.xml
2014-07-09 18:17:36,226 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2014-07-09 18:17:36,241 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1487) - ...Loading next schema (schema diff process)
2014-07-09 18:17:36,244 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-09 18:17:36,290 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1502) -  -> same as previous (schema diff)
2014-07-09 18:17:36,291 [main] INFO  (DfDataSourceHandler#destroy():121) - ...closeReally()
2014-07-09 18:17:36,299 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s614ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql (MySQL 5.6.17)
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2014-07-09 18:17:37,246 [main] INFO  (TorqueDocumentationTask#begin():171) - +------------------------------------------+
2014-07-09 18:17:37,249 [main] INFO  (TorqueDocumentationTask#begin():172) - |                                          |
2014-07-09 18:17:37,250 [main] INFO  (TorqueDocumentationTask#begin():173) - |                   Doc                    |
2014-07-09 18:17:37,251 [main] INFO  (TorqueDocumentationTask#begin():181) - |                                          |
2014-07-09 18:17:37,252 [main] INFO  (TorqueDocumentationTask#begin():182) - +------------------------------------------+
2014-07-09 18:17:37,299 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-09 18:17:37,300 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-09 18:17:37,300 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-09 18:17:37,301 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-09 18:17:37,306 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():242) - 
2014-07-09 18:17:37,306 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():243) - * * * * * * * * * * *
2014-07-09 18:17:37,307 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():244) - *                   *
2014-07-09 18:17:37,308 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():245) - *    Schema HTML    *
2014-07-09 18:17:37,308 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():246) - *                   *
2014-07-09 18:17:37,309 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():247) - * * * * * * * * * * *
2014-07-09 18:17:37,516 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-09 18:17:37,608 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("doc/ControlDocument.vm", c);
2014-07-09 18:17:37,664 [main] INFO  (Database#doEnableDocumentOutputDirectory():1180) - ...Setting up documentOutputDirectory: ./output/doc
2014-07-09 18:17:37,674 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-07-09 18:17:37,675 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-07-09 18:17:37,677 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-07-09 18:17:37,679 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-07-09 18:17:37,679 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-07-09 18:17:37,682 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-07-09 18:17:37,684 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-07-09 18:17:37,684 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-07-09 18:17:37,688 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-07-09 18:17:37,697 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():150) - ...Loading schema history
2014-07-09 18:17:37,814 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():154) -  -> found history: count=32
2014-07-09 18:17:38,062 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-09 18:17:38,077 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s828ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Doc}
2014-07-09 18:17:41,159 [main] INFO  (TorqueDataModelTask#begin():105) - +------------------------------------------+
2014-07-09 18:17:41,161 [main] INFO  (TorqueDataModelTask#begin():106) - |                                          |
2014-07-09 18:17:41,162 [main] INFO  (TorqueDataModelTask#begin():107) - |                 Generate                 |
2014-07-09 18:17:41,163 [main] INFO  (TorqueDataModelTask#begin():108) - |                                          |
2014-07-09 18:17:41,163 [main] INFO  (TorqueDataModelTask#begin():109) - +------------------------------------------+
2014-07-09 18:17:41,206 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-09 18:17:41,207 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-09 18:17:41,208 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-09 18:17:41,209 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-09 18:17:41,231 [main] INFO  (TorqueDataModelTask#setupControlTemplate():160) - 
2014-07-09 18:17:41,232 [main] INFO  (TorqueDataModelTask#setupControlTemplate():161) - ...Using Java control: om/ControlGenerateJava.vm
2014-07-09 18:17:41,382 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-09 18:17:41,430 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlGenerateJava.vm", c);
2014-07-09 18:17:41,571 [main] INFO  (Database#doEnableGenerateOutputDirectory():1148) - ...Setting up generateOutputDirectory: ../src/main/java
2014-07-09 18:17:41,577 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2014-07-09 18:17:41,579 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2014-07-09 18:17:41,582 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2014-07-09 18:17:41,584 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2014-07-09 18:17:41,585 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2014-07-09 18:17:41,588 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2014-07-09 18:17:41,590 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():67) - /=======================================
2014-07-09 18:17:41,591 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - ...Initializing additional foreign keys.
2014-07-09 18:17:41,594 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():85) - ==========/
2014-07-09 18:17:41,611 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - /=============================
2014-07-09 18:17:41,612 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():60) - ...Initializing include query.
2014-07-09 18:17:41,613 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - String
2014-07-09 18:17:41,614 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Number
2014-07-09 18:17:41,614 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - Date
2014-07-09 18:17:41,615 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotEqual -> []
2014-07-09 18:17:41,616 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   InScope -> []
2014-07-09 18:17:41,616 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():88) -   NotInScope -> []
2014-07-09 18:17:41,617 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():83) - OrderBy
2014-07-09 18:17:41,618 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():62) - ========/
2014-07-09 18:17:41,634 [main] INFO  (Database#info():2573) - public void parseAllCommon() {
2014-07-09 18:17:41,636 [main] INFO  (Database#info():2573) -     parse('DBCurrent');
2014-07-09 18:17:41,643 [main] INFO  (Database#info():2573) -     parse('DBFluteConfig');
2014-07-09 18:17:41,673 [main] INFO  (Database#info():2573) -     parse('DBFluteInitializer');
2014-07-09 18:17:41,679 [main] INFO  (Database#info():2573) -     parse('DBMetaInstanceHandler');
2014-07-09 18:17:41,698 [main] INFO  (Database#info():2573) -     parse('EntityDefinedCommonColumn');
2014-07-09 18:17:41,704 [main] INFO  (Database#info():2573) -     parse('ImplementedBehaviorSelector');
2014-07-09 18:17:41,710 [main] INFO  (Database#info():2573) -     parse('ImplementedCommonColumnAutoSetupper');
2014-07-09 18:17:41,718 [main] INFO  (Database#info():2573) -     parse('ImplementedInvokerAssistant');
2014-07-09 18:17:41,724 [main] INFO  (Database#info():2573) -     parse('ImplementedSqlClauseCreator');
2014-07-09 18:17:41,728 [main] INFO  (Database#info():2573) - }
2014-07-09 18:17:41,729 [main] INFO  (Database#info():2573) - public void parseContainerConfig() {
2014-07-09 18:17:41,731 [main] INFO  (Database#info():2573) -     parse('../resources/dbflute.dicon')
2014-07-09 18:17:41,738 [main] INFO  (Database#info():2573) - }
2014-07-09 18:17:41,744 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldTableClass() {
2014-07-09 18:17:41,769 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-07-09 18:17:41,770 [main] INFO  (Database#info():2573) - public void parseTableClass() {
2014-07-09 18:17:41,771 [main] INFO  (Database#info():2573) -     parse('follow');
2014-07-09 18:17:42,121 [main] INFO  (Database#info():2573) -     parse('login');
2014-07-09 18:17:42,301 [main] INFO  (Database#info():2573) -     parse('member');
2014-07-09 18:17:42,704 [main] INFO  (Database#info():2573) -     parse('member_security');
2014-07-09 18:17:42,857 [main] INFO  (Database#info():2573) -     parse('member_status');
2014-07-09 18:17:42,975 [main] INFO  (Database#info():2573) -     parse('tweet');
2014-07-09 18:17:43,111 [main] INFO  (Database#info():2573) - }
2014-07-09 18:17:43,112 [main] INFO  (Database#info():2573) -  
2014-07-09 18:17:43,133 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-09 18:17:43,162 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s978ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Generate}
2014-07-09 18:17:44,221 [main] INFO  (DfOutsideSqlTestTask#begin():72) - +------------------------------------------+
2014-07-09 18:17:44,224 [main] INFO  (DfOutsideSqlTestTask#begin():73) - |                                          |
2014-07-09 18:17:44,224 [main] INFO  (DfOutsideSqlTestTask#begin():74) - |              OutsideSqlTest              |
2014-07-09 18:17:44,225 [main] INFO  (DfOutsideSqlTestTask#begin():75) - |                                          |
2014-07-09 18:17:44,225 [main] INFO  (DfOutsideSqlTestTask#begin():76) - +------------------------------------------+
2014-07-09 18:17:44,280 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-09 18:17:44,280 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-09 18:17:44,281 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-09 18:17:44,281 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-09 18:17:44,327 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-07-09 18:17:44,332 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s108ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2014-07-09 18:17:45,429 [main] INFO  (DfSql2EntityTask#begin():100) - +------------------------------------------+
2014-07-09 18:17:45,432 [main] INFO  (DfSql2EntityTask#begin():101) - |                                          |
2014-07-09 18:17:45,432 [main] INFO  (DfSql2EntityTask#begin():102) - |                Sql2Entity                |
2014-07-09 18:17:45,433 [main] INFO  (DfSql2EntityTask#begin():103) - |                                          |
2014-07-09 18:17:45,433 [main] INFO  (DfSql2EntityTask#begin():104) - +------------------------------------------+
2014-07-09 18:17:45,475 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2014-07-09 18:17:45,476 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2014-07-09 18:17:45,477 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2014-07-09 18:17:45,477 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = twitter
2014-07-09 18:17:45,493 [main] INFO  (DfSql2EntityTask#setupControlTemplate():170) - 
2014-07-09 18:17:45,493 [main] INFO  (DfSql2EntityTask#setupControlTemplate():171) - ...Using Java control: om/ControlSql2EntityJava.vm
2014-07-09 18:17:45,501 [main] INFO  (DTDResolver#resolveEntity():197) - ...Resolving XML by database.dtd in same package
2014-07-09 18:17:45,559 [main] INFO  (DfSqlFileFireMan#fire():90) - {Fired SQL}: success=0 failure=0 (in 0 files)
2014-07-09 18:17:45,706 [main] INFO  (DfSql2EntityTask#initControlContext():301) - 
2014-07-09 18:17:45,707 [main] INFO  (DfSql2EntityTask#initControlContext():302) - ...Preparing generation of customize-entities and parameter-beans
2014-07-09 18:17:45,707 [main] INFO  (DfSql2EntityTask#initControlContext():303) - * * * * * * * * * *
2014-07-09 18:17:45,708 [main] INFO  (DfSql2EntityTask#initControlContext():304) - * CustomizeEntity *
2014-07-09 18:17:45,709 [main] INFO  (DfSql2EntityTask#initControlContext():305) - * * * * * * * * * *
2014-07-09 18:17:45,709 [main] INFO  (DfSql2EntityTask#showParameterBean():879) - * * * * * * * * *
2014-07-09 18:17:45,710 [main] INFO  (DfSql2EntityTask#showParameterBean():880) - * ParameterBean *
2014-07-09 18:17:45,711 [main] INFO  (DfSql2EntityTask#showParameterBean():881) - * * * * * * * * *
2014-07-09 18:17:45,715 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():255) - generator.parse("om/ControlSql2EntityJava.vm", c);
2014-07-09 18:17:45,866 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1164) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2014-07-09 18:17:45,869 [main] INFO  (DfOldClassHandler#info():1037) - public void deleteOldCustomizeClass() {
2014-07-09 18:17:45,880 [main] INFO  (DfOldClassHandler#info():1037) - }
2014-07-09 18:17:45,880 [main] INFO  (Database#info():2573) - public void parseCustomizeEntity() {
2014-07-09 18:17:45,883 [main] INFO  (Database#info():2573) - }
2014-07-09 18:17:45,897 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():293) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2014-07-09 18:17:45,903 [main] INFO  (DfRefreshResourceProcess#refreshResources():63) - ...Refreshing: [twitter]
2014-07-09 18:17:45,909 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():150) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s476ms

  DBFLUTE_CLIENT: {twitter}
    database  = mysql
    language  = java
    container = seasar
    package   = jp.bizreach.twitter.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = twitter
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = twitter
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
